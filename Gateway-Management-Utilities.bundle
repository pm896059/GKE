<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<l7:Bundle xmlns:l7="http://ns.l7tech.com/2010/04/gateway-management">
    <l7:References>
        <l7:Item>
            <l7:Name>Gateway Management Utilities</l7:Name>
            <l7:Id>7215d076e3f7201974e2be3edf13f52e</l7:Id>
            <l7:Type>FOLDER</l7:Type>
            <l7:TimeStamp>2022-04-29T11:42:05.046-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Folder folderId="0000000000000000ffffffffffffec76" id="7215d076e3f7201974e2be3edf13f52e" version="0">
                    <l7:Name>Gateway Management Utilities</l7:Name>
                </l7:Folder>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>fragments</l7:Name>
            <l7:Id>c4706d99077459bed7ca5ef6c9e62ecb</l7:Id>
            <l7:Type>FOLDER</l7:Type>
            <l7:TimeStamp>2022-04-29T11:42:05.046-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Folder folderId="7215d076e3f7201974e2be3edf13f52e" id="c4706d99077459bed7ca5ef6c9e62ecb" version="0">
                    <l7:Name>fragments</l7:Name>
                </l7:Folder>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Utility: Call Restman</l7:Name>
            <l7:Id>c4706d99077459bed7ca5ef6c9e4326b</l7:Id>
            <l7:Type>POLICY</l7:Type>
            <l7:TimeStamp>2022-04-29T11:42:05.052-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Policy guid="fc38ba53-a1d8-4bb6-be56-819606f9d330" id="c4706d99077459bed7ca5ef6c9e4326b" version="2">
                    <l7:PolicyDetail folderId="c4706d99077459bed7ca5ef6c9e62ecb" guid="fc38ba53-a1d8-4bb6-be56-819606f9d330" id="c4706d99077459bed7ca5ef6c9e4326b" version="2">
                        <l7:Name>Utility: Call Restman</l7:Name>
                        <l7:PolicyType>Include</l7:PolicyType>
                        <l7:Properties>
                            <l7:Property key="revision">
                                <l7:LongValue>3</l7:LongValue>
                            </l7:Property>
                            <l7:Property key="soap">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                        </l7:Properties>
                    </l7:PolicyDetail>
                    <l7:Resources>
                        <l7:ResourceSet tag="policy">
                            <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**************************************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Call the Restman interface"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Inputs:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - message (string) - Use when calling PUT and POST methods"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - resource (string) - The restman resource to call"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - method (string) - what method to use"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - element (string) - Element in response to which namespace will be added"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**       - This is useful when response will be parsed through Items"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Outputs:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - response (message)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - restGatewayMan.status (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v1.0.0 - Jay MacDonald - 20201107 - Initial Version"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**************************************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:AuditDetailAssertion&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// FINE"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Detail stringValue="==&gt; Entering Utility Fragment: ${policy.name}"/&gt;
            &lt;L7p:Level stringValue="FINE"/&gt;
        &lt;/L7p:AuditDetailAssertion&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${resource}"/&gt;
                &lt;L7p:Expression2 stringValue=""/&gt;
                &lt;L7p:Negate booleanValue="true"/&gt;
                &lt;L7p:Operator operator="EMPTY"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Negated booleanValue="true"/&gt;
                        &lt;L7p:Operator operator="EMPTY"/&gt;
                        &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="cG9saWNpZXM="/&gt;
                &lt;L7p:VariableToSet stringValue="resource"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Default resource is policies"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${method}"/&gt;
                &lt;L7p:Expression2 stringValue=""/&gt;
                &lt;L7p:Negate booleanValue="true"/&gt;
                &lt;L7p:Operator operator="EMPTY"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Negated booleanValue="true"/&gt;
                        &lt;L7p:Operator operator="EMPTY"/&gt;
                        &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="R0VU"/&gt;
                &lt;L7p:VariableToSet stringValue="method"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Default method is GET"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:AuditDetailAssertion&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// FINE"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Detail stringValue="==&gt; ${method} ${resource}"/&gt;
            &lt;L7p:Level stringValue="FINE"/&gt;
        &lt;/L7p:AuditDetailAssertion&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="JHttZXNzYWdlfQ=="/&gt;
            &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
            &lt;L7p:DataType variableDataType="message"/&gt;
            &lt;L7p:VariableToSet stringValue="restGatewayMan.message"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="LzEuMC8ke3Jlc291cmNlfQ=="/&gt;
            &lt;L7p:VariableToSet stringValue="restGatewayMan.uri"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="JHttZXRob2R9"/&gt;
            &lt;L7p:VariableToSet stringValue="restGatewayMan.action"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:AddHeader&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// 7layer"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:HeaderName stringValue="L7-key-passphrase"/&gt;
            &lt;L7p:HeaderValue stringValue="N2xheWVy"/&gt;
            &lt;L7p:OtherTargetMessageVariable stringValue="restGatewayMan.message"/&gt;
            &lt;L7p:Target target="OTHER"/&gt;
        &lt;/L7p:AddHeader&gt;
        &lt;L7p:RESTGatewayManagement&gt;
            &lt;L7p:OtherTargetMessageVariable stringValue="restGatewayMan.message"/&gt;
            &lt;L7p:Target target="OTHER"/&gt;
        &lt;/L7p:RESTGatewayManagement&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${element}"/&gt;
                &lt;L7p:Expression2 stringValue=""/&gt;
                &lt;L7p:Operator operator="EMPTY"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Operator operator="EMPTY"/&gt;
                        &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;L7p:Regex&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Add namespace to each Policy element"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:AutoTarget booleanValue="false"/&gt;
                &lt;L7p:PatternContainsVariables booleanValue="true"/&gt;
                &lt;L7p:Regex stringValue="&amp;lt;l7:${element} "/&gt;
                &lt;L7p:Replace booleanValue="true"/&gt;
                &lt;L7p:Replacement stringValue="&amp;lt;l7:${element} xmlns:l7=&amp;quot;http://ns.l7tech.com/2010/04/gateway-management&amp;quot; "/&gt;
                &lt;L7p:Target target="RESPONSE"/&gt;
            &lt;/L7p:Regex&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Add management namespace to ${element} if set"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:AuditDetailAssertion&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// FINE"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Detail stringValue="==&gt; Leaving Utility Fragment: ${policy.name}"/&gt;
            &lt;L7p:Level stringValue="FINE"/&gt;
        &lt;/L7p:AuditDetailAssertion&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
                        </l7:ResourceSet>
                    </l7:Resources>
                </l7:Policy>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Utility: Call Restman</l7:Name>
            <l7:Id>c4706d99077459bed7ca5ef6c9e43323</l7:Id>
            <l7:Type>ENCAPSULATED_ASSERTION</l7:Type>
            <l7:TimeStamp>2022-04-29T11:42:05.052-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:EncapsulatedAssertion id="c4706d99077459bed7ca5ef6c9e43323" version="0">
                    <l7:Name>Utility: Call Restman</l7:Name>
                    <l7:Guid>c8a5a0d5-1ae2-4144-b538-5c311efc1560</l7:Guid>
                    <l7:PolicyReference id="c4706d99077459bed7ca5ef6c9e4326b" resourceUri="http://ns.l7tech.com/2010/04/gateway-management/policies"/>
                    <l7:EncapsulatedArguments>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>1</l7:Ordinal>
                            <l7:ArgumentName>resource</l7:ArgumentName>
                            <l7:ArgumentType>string</l7:ArgumentType>
                            <l7:GuiLabel>Restman resource string (default=policies): </l7:GuiLabel>
                            <l7:GuiPrompt>true</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>2</l7:Ordinal>
                            <l7:ArgumentName>method</l7:ArgumentName>
                            <l7:ArgumentType>string</l7:ArgumentType>
                            <l7:GuiLabel>Method (default=GET): </l7:GuiLabel>
                            <l7:GuiPrompt>true</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>3</l7:Ordinal>
                            <l7:ArgumentName>message</l7:ArgumentName>
                            <l7:ArgumentType>string</l7:ArgumentType>
                            <l7:GuiLabel>Message (use for PUT and POST methods): </l7:GuiLabel>
                            <l7:GuiPrompt>true</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>4</l7:Ordinal>
                            <l7:ArgumentName>element</l7:ArgumentName>
                            <l7:ArgumentType>string</l7:ArgumentType>
                            <l7:GuiLabel>Element to add management namespace: </l7:GuiLabel>
                            <l7:GuiPrompt>true</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                    </l7:EncapsulatedArguments>
                    <l7:EncapsulatedResults>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>restGatewayMan.status</l7:ResultName>
                            <l7:ResultType>string</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                    </l7:EncapsulatedResults>
                    <l7:Properties>
                        <l7:Property key="allowTracing">
                            <l7:StringValue>false</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="description">
                            <l7:StringValue>Call the Restman interface for managing the Gateway. Expects an administrative user to have been authenticated.</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="paletteFolder">
                            <l7:StringValue>internalAssertions</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="paletteIconResourceName">
                            <l7:StringValue>Refresh16.gif</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="passMetricsToParent">
                            <l7:StringValue>false</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="policyGuid">
                            <l7:StringValue>fc38ba53-a1d8-4bb6-be56-819606f9d330</l7:StringValue>
                        </l7:Property>
                    </l7:Properties>
                </l7:EncapsulatedAssertion>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Utility: List Generic Entities</l7:Name>
            <l7:Id>3c21f93d84b26244a446414e9774ecf3</l7:Id>
            <l7:Type>POLICY</l7:Type>
            <l7:TimeStamp>2022-04-29T11:42:05.060-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Policy guid="635c9c5a-6aa0-4b8f-b74f-b2dbb3de6a05" id="3c21f93d84b26244a446414e9774ecf3" version="0">
                    <l7:PolicyDetail folderId="c4706d99077459bed7ca5ef6c9e62ecb" guid="635c9c5a-6aa0-4b8f-b74f-b2dbb3de6a05" id="3c21f93d84b26244a446414e9774ecf3" version="0">
                        <l7:Name>Utility: List Generic Entities</l7:Name>
                        <l7:PolicyType>Include</l7:PolicyType>
                        <l7:Properties>
                            <l7:Property key="revision">
                                <l7:LongValue>1</l7:LongValue>
                            </l7:Property>
                            <l7:Property key="soap">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                        </l7:Properties>
                    </l7:PolicyDetail>
                    <l7:Resources>
                        <l7:ResourceSet tag="policy">
                            <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Policy fragment for &amp;quot;Utility: List Generic Entities&amp;quot; encapsulated assertion"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Call Restman and generate a sorted list of generic entities"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** - Assumes an admin role user has been authenticated"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** - Caches results for ${cacheAge} seconds (default=300). To refresh the cache set ${refresh}=true when calling"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** - Returns a text/xml message variable in ${genericEntities.sorted}"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Inputs:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - refresh (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - cacheAge (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Outputs:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - genericEntities.sorted (message)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - error.msg (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v1.0.0 - Jay MacDonald - 20201107 - Initial Version"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:AuditDetailAssertion&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// FINE"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Detail stringValue="==&gt; Entering Utility Fragment: ${policy.name} (refresh=${refresh})"/&gt;
            &lt;L7p:Level stringValue="FINE"/&gt;
        &lt;/L7p:AuditDetailAssertion&gt;
        &lt;wsp:All wsp:Usage="Required"&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** ${genericEntities.sorted} has the following schema:"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** "/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** &amp;lt;GenericEntities source=&amp;quot;system|cache&amp;quot;&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   &amp;lt;GenericEntity id=&amp;quot;string&amp;quot;&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;Name&gt;string&amp;lt;/Name&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;Description&gt;string&amp;lt;/Description&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;EntityClassName&gt;string&amp;lt;/EntityClassName&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;Enabled&gt;boolean&amp;lt;/Enabled&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   &amp;lt;/GenericEntity&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   ..."/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** &amp;lt;/GenericEntities&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Description of ${genericEntities.sorted}"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:All&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// true or false"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${cacheAge}"/&gt;
                &lt;L7p:Operator operatorNull="null"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item dataType="included"&gt;
                        &lt;L7p:Type variableDataType="int"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;L7p:item binary="included"&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Operator operator="GT"/&gt;
                        &lt;L7p:RightValue stringValue="0"/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="MzAw"/&gt;
                &lt;L7p:DataType variableDataType="int"/&gt;
                &lt;L7p:VariableToSet stringValue="cacheAge"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Ensure ${cacheAge} is set, default=300"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// true or false"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${refresh}"/&gt;
                &lt;L7p:Operator operatorNull="null"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item dataType="included"&gt;
                        &lt;L7p:Type variableDataType="string"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;L7p:item regex="included"&gt;
                        &lt;L7p:Pattern stringValue="^(true|false)$"/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="ZmFsc2U="/&gt;
                &lt;L7p:VariableToSet stringValue="refresh"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Ensure ${refresh} is set, default=false"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="Z2VuZXJpY0VudGl0aWVzLnNvcnRlZA=="/&gt;
            &lt;L7p:VariableToSet stringValue="cacheKey"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${refresh}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="string"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:RightValue stringValue="true"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:CacheLookup&gt;
                    &lt;L7p:CacheEntryKey stringValue="${cacheKey}"/&gt;
                    &lt;L7p:CacheId stringValue="genericEntityList"/&gt;
                    &lt;L7p:ContentTypeOverride stringValue=""/&gt;
                    &lt;L7p:MaxEntryAgeSeconds stringValue="${cacheAge}"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="genericEntities.sorted"/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                &lt;/L7p:CacheLookup&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="Y2FjaGU="/&gt;
                    &lt;L7p:VariableToSet stringValue="source"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// FINE"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; Found genericEntities.sorted in the cache"/&gt;
                    &lt;L7p:Level stringValue="FINE"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Look in cache unless asked to refresh cache"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:Encapsulated&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// GET genericEntities"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="c8a5a0d5-1ae2-4144-b538-5c311efc1560"/&gt;
                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Call Restman"/&gt;
                    &lt;L7p:Parameters mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="element"/&gt;
                            &lt;L7p:value stringValue="GenericEntity"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="message"/&gt;
                            &lt;L7p:value stringValue=""/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="method"/&gt;
                            &lt;L7p:value stringValue="GET"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="resource"/&gt;
                            &lt;L7p:value stringValue="genericEntities"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Parameters&gt;
                &lt;/L7p:Encapsulated&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:VariablePrefix stringValue="genericEntities"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:List/l7:Item/l7:Resource/l7:GenericEntity"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:TrueAssertion/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Extract the list of generic entities, never fail"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz48R2VuZXJpY0VudGl0aWVzPg=="/&gt;
                    &lt;L7p:VariableToSet stringValue="genericEntities.sorted"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:ForEachLoop L7p:Usage="Required"
                    loopVariable="genericEntities.elements" variablePrefix="genericEntity"&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cast to message type for parsing"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:Base64Expression stringValue="JHtnZW5lcmljRW50aXR5LmN1cnJlbnR9"/&gt;
                        &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                        &lt;L7p:DataType variableDataType="message"/&gt;
                        &lt;L7p:VariableToSet stringValue="genericEntity.xml"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Retrieve the generic entity ID"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="id"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="genericEntity.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:GenericEntity/@id"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// retrieve the generic entity name"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="name"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="genericEntity.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:GenericEntity/l7:Name"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                        &lt;L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// retrieve the generic entity name"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:VariablePrefix stringValue="description"/&gt;
                            &lt;L7p:XmlMsgSrc stringValue="genericEntity.xml"/&gt;
                            &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                &lt;L7p:Expression stringValue="/l7:GenericEntity/l7:Description"/&gt;
                                &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Namespaces&gt;
                                &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                            &lt;/L7p:XpathExpression&gt;
                        &lt;/L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue=""/&gt;
                            &lt;L7p:VariableToSet stringValue="description.result"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Description is option"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Retrieve the generic entity class name"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="entityClassName"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="genericEntity.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:GenericEntity/l7:EntityClassName"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Retrieve the generic entity enabled state"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="enabled"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="genericEntity.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:GenericEntity/l7:Enabled"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="JHtnZW5lcmljRW50aXRpZXMuc29ydGVkfTxHZW5lcmljRW50aXR5IGlkPSIke2lkLnJlc3VsdH0iPjxOYW1lPjwhW0NEQVRBWyR7bmFtZS5yZXN1bHR9XV0+PC9OYW1lPjxFbnRpdHlDbGFzc05hbWU+JHtlbnRpdHlDbGFzc05hbWUucmVzdWx0fTwvRW50aXR5Q2xhc3NOYW1lPjxEZXNjcmlwdGlvbj48IVtDREFUQVske2Rlc2NyaXB0aW9uLnJlc3VsdH1dXT48L0Rlc2NyaXB0aW9uPjxFbmFibGVkPiR7ZW5hYmxlZC5yZXN1bHR9PC9FbmFibGVkPjwvR2VuZXJpY0VudGl0eT4="/&gt;
                        &lt;L7p:VariableToSet stringValue="genericEntities.sorted"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Build the list of generic entities"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/L7p:ForEachLoop&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtnZW5lcmljRW50aXRpZXMuc29ydGVkfTwvR2VuZXJpY0VudGl0aWVzPg=="/&gt;
                    &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                    &lt;L7p:DataType variableDataType="message"/&gt;
                    &lt;L7p:VariableToSet stringValue="genericEntities.sorted"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:XslTransformation&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Sort the generic entities by name"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Direction intValue="-1"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="genericEntities.sorted"/&gt;
                    &lt;L7p:ResourceInfo staticResourceInfo="included"&gt;
                        &lt;L7p:Document stringValueReference="inline"&gt;&lt;![CDATA[&lt;xsl:stylesheet version="1.0" xmlns:l7="http://ns.l7tech.com/2010/04/gateway-management" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;

&lt;xsl:template match="/GenericEntities"&gt;
    &lt;xsl:copy&gt;
        &lt;xsl:for-each select="GenericEntity"&gt;
            &lt;xsl:sort select="./Name"/&gt;
            &lt;xsl:copy-of select="."/&gt;
        &lt;/xsl:for-each&gt;
    &lt;/xsl:copy&gt;
&lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;]]&gt;&lt;/L7p:Document&gt;
                    &lt;/L7p:ResourceInfo&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                    &lt;L7p:TransformName stringValue=""/&gt;
                    &lt;L7p:XsltVersion stringValue="1.0"/&gt;
                &lt;/L7p:XslTransformation&gt;
                &lt;L7p:CacheStorage&gt;
                    &lt;L7p:CacheEntryKey stringValue="${cacheKey}"/&gt;
                    &lt;L7p:CacheId stringValue="genericEntityList"/&gt;
                    &lt;L7p:MaxEntries stringValue="1"/&gt;
                    &lt;L7p:MaxEntryAgeSeconds stringValue="${cacheAge}"/&gt;
                    &lt;L7p:MaxEntrySizeBytes stringValue="200000"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="genericEntities.sorted"/&gt;
                    &lt;L7p:StoreSoapFaults booleanValue="true"/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                &lt;/L7p:CacheStorage&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="c3lzdGVt"/&gt;
                    &lt;L7p:VariableToSet stringValue="source"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// FINE"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; Loaded genericEntities.sorted from system and stored to cache"/&gt;
                    &lt;L7p:Level stringValue="FINE"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Retrieve new list and cache"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="RXJyb3Igd2hlbiBsaXN0aW5nIGdlbmVyaWMgZW50aXRpZXM="/&gt;
                    &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// WARNING"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; Error listing generic entities in ${policy.name}"/&gt;
                    &lt;L7p:Level stringValue="WARNING"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:FalseAssertion/&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Failure - set ${error.msg}"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Caching logic"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:Regex&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Add source attribute to /GenericEntities element"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:AutoTarget booleanValue="false"/&gt;
            &lt;L7p:OtherTargetMessageVariable stringValue="genericEntities.sorted"/&gt;
            &lt;L7p:Regex stringValue="&amp;lt;GenericEntities&gt;"/&gt;
            &lt;L7p:Replace booleanValue="true"/&gt;
            &lt;L7p:Replacement stringValue="&amp;lt;GenericEntities source=&amp;quot;${source}&amp;quot;&gt;"/&gt;
            &lt;L7p:Target target="OTHER"/&gt;
        &lt;/L7p:Regex&gt;
        &lt;L7p:AuditDetailAssertion&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// FINE"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Detail stringValue="==&gt; Leaving Utility Fragment: ${policy.name}"/&gt;
            &lt;L7p:Level stringValue="FINE"/&gt;
        &lt;/L7p:AuditDetailAssertion&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
                        </l7:ResourceSet>
                    </l7:Resources>
                </l7:Policy>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Utility: List Policy Backed Services</l7:Name>
            <l7:Id>3c21f93d84b26244a446414e97757263</l7:Id>
            <l7:Type>POLICY</l7:Type>
            <l7:TimeStamp>2022-04-29T11:42:05.066-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Policy guid="1beb446f-b5b0-41f5-89d1-79e8fe122577" id="3c21f93d84b26244a446414e97757263" version="0">
                    <l7:PolicyDetail folderId="c4706d99077459bed7ca5ef6c9e62ecb" guid="1beb446f-b5b0-41f5-89d1-79e8fe122577" id="3c21f93d84b26244a446414e97757263" version="0">
                        <l7:Name>Utility: List Policy Backed Services</l7:Name>
                        <l7:PolicyType>Include</l7:PolicyType>
                        <l7:Properties>
                            <l7:Property key="revision">
                                <l7:LongValue>1</l7:LongValue>
                            </l7:Property>
                            <l7:Property key="soap">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                        </l7:Properties>
                    </l7:PolicyDetail>
                    <l7:Resources>
                        <l7:ResourceSet tag="policy">
                            <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Policy fragment for &amp;quot;Utility: List Policy Backed Services&amp;quot; encapsulated assertion"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Call Restman and generate a sorted list of policy backed services"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** - Assumes an admin role user has been authenticated"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** - Caches results for ${cacheAge} seconds (default=300). To refresh the cache set ${refresh}=true when calling"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** - Returns a text/xml message variable in ${policyBackedServices.sorted}"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Inputs:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - refresh (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - cacheAge (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Outputs:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - policyBackedServices.sorted (message)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - error.msg (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v1.0.0 - Jay MacDonald - 20201107 - Initial Version"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:AuditDetailAssertion&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// FINE"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Detail stringValue="==&gt; Entering Utility Fragment: ${policy.name} (refresh=${refresh})"/&gt;
            &lt;L7p:Level stringValue="FINE"/&gt;
        &lt;/L7p:AuditDetailAssertion&gt;
        &lt;wsp:All wsp:Usage="Required"&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** ${policyBackedServices.sorted} has the following schema:"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** "/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** &amp;lt;PolicyBackedServices source=&amp;quot;system|cache&amp;quot;&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   &amp;lt;PolicyBackedService id=&amp;quot;string&amp;quot;&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;Name&gt;string&amp;lt;/Name&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;InterfaceName&gt;string&amp;lt;/InterfaceName&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;PolicyID&gt;string&amp;lt;/PolicyId&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   &amp;lt;/PolicyBackedService&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   ..."/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** &amp;lt;/PolicyBackedServices&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Description of ${policyBackedServices.sorted}"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:All&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// true or false"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${cacheAge}"/&gt;
                &lt;L7p:Operator operatorNull="null"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item dataType="included"&gt;
                        &lt;L7p:Type variableDataType="int"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;L7p:item binary="included"&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Operator operator="GT"/&gt;
                        &lt;L7p:RightValue stringValue="0"/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="MzAw"/&gt;
                &lt;L7p:DataType variableDataType="int"/&gt;
                &lt;L7p:VariableToSet stringValue="cacheAge"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Ensure ${cacheAge} is set, default=300"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// true or false"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${refresh}"/&gt;
                &lt;L7p:Operator operatorNull="null"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item dataType="included"&gt;
                        &lt;L7p:Type variableDataType="string"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;L7p:item regex="included"&gt;
                        &lt;L7p:Pattern stringValue="^(true|false)$"/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="ZmFsc2U="/&gt;
                &lt;L7p:VariableToSet stringValue="refresh"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Ensure ${refresh} is set, default=false"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="cG9saWN5QmFja2VkU2VydmljZXMuc29ydGVk"/&gt;
            &lt;L7p:VariableToSet stringValue="cacheKey"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${refresh}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="string"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:RightValue stringValue="true"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:CacheLookup&gt;
                    &lt;L7p:CacheEntryKey stringValue="${cacheKey}"/&gt;
                    &lt;L7p:CacheId stringValue="policyBackedServiceList"/&gt;
                    &lt;L7p:ContentTypeOverride stringValue=""/&gt;
                    &lt;L7p:MaxEntryAgeSeconds stringValue="${cacheAge}"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="policyBackedServices.sorted"/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                &lt;/L7p:CacheLookup&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="Y2FjaGU="/&gt;
                    &lt;L7p:VariableToSet stringValue="source"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// FINE"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; Found policyBackedServices.sorted in the cache"/&gt;
                    &lt;L7p:Level stringValue="FINE"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Look in cache unless asked to refresh cache"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:Encapsulated&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// GET policyBackedServices"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="c8a5a0d5-1ae2-4144-b538-5c311efc1560"/&gt;
                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Call Restman"/&gt;
                    &lt;L7p:Parameters mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="element"/&gt;
                            &lt;L7p:value stringValue="PolicyBackedService"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="message"/&gt;
                            &lt;L7p:value stringValue=""/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="method"/&gt;
                            &lt;L7p:value stringValue="Get"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="resource"/&gt;
                            &lt;L7p:value stringValue="policyBackedServices"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Parameters&gt;
                &lt;/L7p:Encapsulated&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:VariablePrefix stringValue="policyBackedServices"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:List/l7:Item/l7:Resource/l7:PolicyBackedService"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:TrueAssertion/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Extract the list of policy backed services, never fail"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz48UG9saWN5QmFja2VkU2VydmljZXM+"/&gt;
                    &lt;L7p:VariableToSet stringValue="policyBackedServices.sorted"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:ForEachLoop L7p:Usage="Required"
                    loopVariable="policyBackedServices.elements" variablePrefix="policyBackedService"&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cast to message type for parsing"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:Base64Expression stringValue="JHtwb2xpY3lCYWNrZWRTZXJ2aWNlLmN1cnJlbnR9"/&gt;
                        &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                        &lt;L7p:DataType variableDataType="message"/&gt;
                        &lt;L7p:VariableToSet stringValue="policyBackedService.xml"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Retrieve the policy backed service ID"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="id"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="policyBackedService.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:PolicyBackedService/@id"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// retrieve the policy backed service name"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="name"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="policyBackedService.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:PolicyBackedService/l7:Name"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// retrieve the policy backed service policyId"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="policyId"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="policyBackedService.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:PolicyBackedService/l7:PolicyBackedServiceOperations/l7:PolicyBackedServiceOperation/l7:PolicyId"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// retrieve the policy backed service interface name"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="interfaceName"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="policyBackedService.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:PolicyBackedService/l7:InterfaceName"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="JHtwb2xpY3lCYWNrZWRTZXJ2aWNlcy5zb3J0ZWR9PFBvbGljeUJhY2tlZFNlcnZpY2UgaWQ9IiR7aWQucmVzdWx0fSI+PE5hbWU+PCFbQ0RBVEFbJHtuYW1lLnJlc3VsdH1dXT48L05hbWU+PEludGVyZmFjZU5hbWU+JHtpbnRlcmZhY2VOYW1lLnJlc3VsdH08L0ludGVyZmFjZU5hbWU+PFBvbGljeUlkPiR7cG9saWN5SWQucmVzdWx0fTwvUG9saWN5SWQ+PC9Qb2xpY3lCYWNrZWRTZXJ2aWNlPlBvbGljeUJhY2tlZFNlcnZpY2U+"/&gt;
                        &lt;L7p:VariableToSet stringValue="policyBackedServices.sorted"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Build the list of policy backed services"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/L7p:ForEachLoop&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtwb2xpY3lCYWNrZWRTZXJ2aWNlcy5zb3J0ZWR9PC9Qb2xpY3lCYWNrZWRTZXJ2aWNlcz4="/&gt;
                    &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                    &lt;L7p:DataType variableDataType="message"/&gt;
                    &lt;L7p:VariableToSet stringValue="policyBackedServices.sorted"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:XslTransformation&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Sort the policy backed service by name"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Direction intValue="-1"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="policyBackedServices.sorted"/&gt;
                    &lt;L7p:ResourceInfo staticResourceInfo="included"&gt;
                        &lt;L7p:Document stringValueReference="inline"&gt;&lt;![CDATA[&lt;xsl:stylesheet version="1.0" xmlns:l7="http://ns.l7tech.com/2010/04/gateway-management" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;

&lt;xsl:template match="/PolicyBackedServices"&gt;
    &lt;xsl:copy&gt;
        &lt;xsl:for-each select="PolicyBackedService"&gt;
            &lt;xsl:sort select="./Name"/&gt;
            &lt;xsl:copy-of select="."/&gt;
        &lt;/xsl:for-each&gt;
    &lt;/xsl:copy&gt;
&lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;]]&gt;&lt;/L7p:Document&gt;
                    &lt;/L7p:ResourceInfo&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                    &lt;L7p:TransformName stringValue=""/&gt;
                    &lt;L7p:XsltVersion stringValue="1.0"/&gt;
                &lt;/L7p:XslTransformation&gt;
                &lt;L7p:CacheStorage&gt;
                    &lt;L7p:CacheEntryKey stringValue="${cacheKey}"/&gt;
                    &lt;L7p:CacheId stringValue="policyBackedServiceList"/&gt;
                    &lt;L7p:MaxEntries stringValue="1"/&gt;
                    &lt;L7p:MaxEntryAgeSeconds stringValue="${cacheAge}"/&gt;
                    &lt;L7p:MaxEntrySizeBytes stringValue="200000"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="policyBackedServices.sorted"/&gt;
                    &lt;L7p:StoreSoapFaults booleanValue="true"/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                &lt;/L7p:CacheStorage&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="c3lzdGVt"/&gt;
                    &lt;L7p:VariableToSet stringValue="source"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// FINE"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; Loaded policyBackedServices.sorted from system and stored to cache"/&gt;
                    &lt;L7p:Level stringValue="FINE"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Retrieve new list and cache"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="RXJyb3Igd2hlbiBsaXN0aW5nIHBvbGljeSBiYWNrZWQgc2VydmljZXM="/&gt;
                    &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// WARNING"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; Error listing policy backed services in ${policy.name}"/&gt;
                    &lt;L7p:Level stringValue="WARNING"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:FalseAssertion/&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Failure - set ${error.msg}"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Caching logic"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:Regex&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Add source attribute to /PolicyBackedServices element"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:AutoTarget booleanValue="false"/&gt;
            &lt;L7p:OtherTargetMessageVariable stringValue="policyBackedServices.sorted"/&gt;
            &lt;L7p:Regex stringValue="&amp;lt;PolicyBackedServices&gt;"/&gt;
            &lt;L7p:Replace booleanValue="true"/&gt;
            &lt;L7p:Replacement stringValue="&amp;lt;PolicyBackedServices source=&amp;quot;${source}&amp;quot;&gt;"/&gt;
            &lt;L7p:Target target="OTHER"/&gt;
        &lt;/L7p:Regex&gt;
        &lt;L7p:AuditDetailAssertion&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// FINE"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Detail stringValue="==&gt; Leaving Utility Fragment: ${policy.name}"/&gt;
            &lt;L7p:Level stringValue="FINE"/&gt;
        &lt;/L7p:AuditDetailAssertion&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
                        </l7:ResourceSet>
                    </l7:Resources>
                </l7:Policy>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Utility: List Scheduled Tasks</l7:Name>
            <l7:Id>3c21f93d84b26244a446414e97757a31</l7:Id>
            <l7:Type>POLICY</l7:Type>
            <l7:TimeStamp>2022-04-29T11:42:05.075-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Policy guid="3b9346d2-cc38-41ef-aac3-965942d95749" id="3c21f93d84b26244a446414e97757a31" version="0">
                    <l7:PolicyDetail folderId="c4706d99077459bed7ca5ef6c9e62ecb" guid="3b9346d2-cc38-41ef-aac3-965942d95749" id="3c21f93d84b26244a446414e97757a31" version="0">
                        <l7:Name>Utility: List Scheduled Tasks</l7:Name>
                        <l7:PolicyType>Include</l7:PolicyType>
                        <l7:Properties>
                            <l7:Property key="revision">
                                <l7:LongValue>1</l7:LongValue>
                            </l7:Property>
                            <l7:Property key="soap">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                        </l7:Properties>
                    </l7:PolicyDetail>
                    <l7:Resources>
                        <l7:ResourceSet tag="policy">
                            <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Policy fragment for &amp;quot;Utility: List Scheduled Taskss&amp;quot; encapsulated assertion"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Call Restman and generate a sorted list of scheduled tasks"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** - Assumes an admin role user has been authenticated"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** - Caches results for ${cacheAge} seconds (default=300). To refresh the cache set ${refresh}=true when calling"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** - Returns a text/xml message variable in ${scheduledTasks.sorted}"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Inputs:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - refresh (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - cacheAge (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Outputs:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - scheduledTasks.sorted (message)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - error.msg (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v1.0.0 - Jay MacDonald - 20201107 - Initial Version"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:AuditDetailAssertion&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// FINE"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Detail stringValue="==&gt; Entering Utility Fragment: ${policy.name} (refresh=${refresh})"/&gt;
            &lt;L7p:Level stringValue="FINE"/&gt;
        &lt;/L7p:AuditDetailAssertion&gt;
        &lt;wsp:All wsp:Usage="Required"&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** ${scheduledTasks.sorted} has the following schema:"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** "/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** &amp;lt;ScheduledTasks source=&amp;quot;system|cache&amp;quot;&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   &amp;lt;ScheduledTask id=&amp;quot;string&amp;quot;&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;Name&gt;string&amp;lt;/Name&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;PolicyID&gt;string&amp;lt;/PolicyId&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   &amp;lt;/ScheduledTask&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   ..."/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** &amp;lt;/ScheduledTasks&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Description of ${scheduledTasks.sorted}"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:All&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// true or false"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${cacheAge}"/&gt;
                &lt;L7p:Operator operatorNull="null"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item dataType="included"&gt;
                        &lt;L7p:Type variableDataType="int"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;L7p:item binary="included"&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Operator operator="GT"/&gt;
                        &lt;L7p:RightValue stringValue="0"/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="MzAw"/&gt;
                &lt;L7p:DataType variableDataType="int"/&gt;
                &lt;L7p:VariableToSet stringValue="cacheAge"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Ensure ${cacheAge} is set, default=300"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// true or false"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${refresh}"/&gt;
                &lt;L7p:Operator operatorNull="null"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item dataType="included"&gt;
                        &lt;L7p:Type variableDataType="string"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;L7p:item regex="included"&gt;
                        &lt;L7p:Pattern stringValue="^(true|false)$"/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="ZmFsc2U="/&gt;
                &lt;L7p:VariableToSet stringValue="refresh"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Ensure ${refresh} is set, default=false"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="c2NoZWR1bGVkVGFza3Muc29ydGVk"/&gt;
            &lt;L7p:VariableToSet stringValue="cacheKey"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${refresh}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="string"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:RightValue stringValue="true"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:CacheLookup&gt;
                    &lt;L7p:CacheEntryKey stringValue="${cacheKey}"/&gt;
                    &lt;L7p:CacheId stringValue="scheduledTaskList"/&gt;
                    &lt;L7p:ContentTypeOverride stringValue=""/&gt;
                    &lt;L7p:MaxEntryAgeSeconds stringValue="${cacheAge}"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="scheduledTasks.sorted"/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                &lt;/L7p:CacheLookup&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="Y2FjaGU="/&gt;
                    &lt;L7p:VariableToSet stringValue="source"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// FINE"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; Found scheduledTasks.sorted in the cache"/&gt;
                    &lt;L7p:Level stringValue="FINE"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Look in cache unless asked to refresh cache"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:Encapsulated&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// GET scheduledTasks"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="c8a5a0d5-1ae2-4144-b538-5c311efc1560"/&gt;
                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Call Restman"/&gt;
                    &lt;L7p:Parameters mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="element"/&gt;
                            &lt;L7p:value stringValue="ScheduledTask"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="message"/&gt;
                            &lt;L7p:value stringValue=""/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="method"/&gt;
                            &lt;L7p:value stringValue="GET"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="resource"/&gt;
                            &lt;L7p:value stringValue="scheduledTasks"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Parameters&gt;
                &lt;/L7p:Encapsulated&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:VariablePrefix stringValue="scheduledTasks"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:List/l7:Item/l7:Resource/l7:ScheduledTask"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:TrueAssertion/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Extract the list of scheduled tasks, never fail"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz48U2NoZWR1bGVkVGFza3M+"/&gt;
                    &lt;L7p:VariableToSet stringValue="scheduledTasks.sorted"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:ForEachLoop L7p:Usage="Required"
                    loopVariable="scheduledTasks.elements" variablePrefix="scheduledTask"&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cast to message type for parsing"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:Base64Expression stringValue="JHtzY2hlZHVsZWRUYXNrLmN1cnJlbnR9"/&gt;
                        &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                        &lt;L7p:DataType variableDataType="message"/&gt;
                        &lt;L7p:VariableToSet stringValue="scheduledTask.xml"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Retrieve the scheduled task ID"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="id"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="scheduledTask.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:ScheduledTask/@id"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// retrieve the scheduled task name"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="name"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="scheduledTask.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:ScheduledTask/l7:Name"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// retrieve the scheduled task policy reference Id"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="policyId"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="scheduledTask.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:ScheduledTask/l7:PolicyReference/@id"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="JHtzY2hlZHVsZWRUYXNrcy5zb3J0ZWR9PFNjaGVkdWxlZFRhc2sgaWQ9IiR7aWQucmVzdWx0fSI+PE5hbWU+PCFbQ0RBVEFbJHtuYW1lLnJlc3VsdH1dXT48L05hbWU+PFBvbGljeUlkPiR7cG9saWN5SWQucmVzdWx0fTwvUG9saWN5SWQ+PC9TY2hlZHVsZWRUYXNrPg=="/&gt;
                        &lt;L7p:VariableToSet stringValue="scheduledTasks.sorted"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Build the list of scheduled tasks"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/L7p:ForEachLoop&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtzY2hlZHVsZWRUYXNrcy5zb3J0ZWR9PC9TY2hlZHVsZWRUYXNrcz4="/&gt;
                    &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                    &lt;L7p:DataType variableDataType="message"/&gt;
                    &lt;L7p:VariableToSet stringValue="scheduledTasks.sorted"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:XslTransformation&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Sort the scheduled tasks by name"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Direction intValue="-1"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="scheduledTasks.sorted"/&gt;
                    &lt;L7p:ResourceInfo staticResourceInfo="included"&gt;
                        &lt;L7p:Document stringValueReference="inline"&gt;&lt;![CDATA[&lt;xsl:stylesheet version="1.0" xmlns:l7="http://ns.l7tech.com/2010/04/gateway-management" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;

&lt;xsl:template match="/ScheduledTasks"&gt;
    &lt;xsl:copy&gt;
        &lt;xsl:for-each select="ScheduledTask"&gt;
            &lt;xsl:sort select="./Name"/&gt;
            &lt;xsl:copy-of select="."/&gt;
        &lt;/xsl:for-each&gt;
    &lt;/xsl:copy&gt;
&lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;]]&gt;&lt;/L7p:Document&gt;
                    &lt;/L7p:ResourceInfo&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                    &lt;L7p:TransformName stringValue=""/&gt;
                    &lt;L7p:XsltVersion stringValue="1.0"/&gt;
                &lt;/L7p:XslTransformation&gt;
                &lt;L7p:CacheStorage&gt;
                    &lt;L7p:CacheEntryKey stringValue="${cacheKey}"/&gt;
                    &lt;L7p:CacheId stringValue="scheduledTaskList"/&gt;
                    &lt;L7p:MaxEntries stringValue="1"/&gt;
                    &lt;L7p:MaxEntryAgeSeconds stringValue="${cacheAge}"/&gt;
                    &lt;L7p:MaxEntrySizeBytes stringValue="200000"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="scheduledTasks.sorted"/&gt;
                    &lt;L7p:StoreSoapFaults booleanValue="true"/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                &lt;/L7p:CacheStorage&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="c3lzdGVt"/&gt;
                    &lt;L7p:VariableToSet stringValue="source"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// FINE"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; Loaded scheduledTasks.sorted from system and stored to cache"/&gt;
                    &lt;L7p:Level stringValue="FINE"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Retrieve new list and cache"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="RXJyb3Igd2hlbiBsaXN0aW5nIHNjaGVkdWxlZCB0YXNrcw=="/&gt;
                    &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// WARNING"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; Error listing scheduled tasks in ${policy.name}"/&gt;
                    &lt;L7p:Level stringValue="WARNING"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:FalseAssertion/&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Failure - set ${error.msg}"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Caching logic"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:Regex&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Add source attribute to /ScheduledTasks element"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:AutoTarget booleanValue="false"/&gt;
            &lt;L7p:OtherTargetMessageVariable stringValue="scheduledTasks.sorted"/&gt;
            &lt;L7p:Regex stringValue="&amp;lt;ScheduledTasks&gt;"/&gt;
            &lt;L7p:Replace booleanValue="true"/&gt;
            &lt;L7p:Replacement stringValue="&amp;lt;ScheduledTasks source=&amp;quot;${source}&amp;quot;&gt;"/&gt;
            &lt;L7p:Target target="OTHER"/&gt;
        &lt;/L7p:Regex&gt;
        &lt;L7p:AuditDetailAssertion&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// FINE"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Detail stringValue="==&gt; Leaving Utility Fragment: ${policy.name}"/&gt;
            &lt;L7p:Level stringValue="FINE"/&gt;
        &lt;/L7p:AuditDetailAssertion&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
                        </l7:ResourceSet>
                    </l7:Resources>
                </l7:Policy>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Utility: List Listen Ports</l7:Name>
            <l7:Id>3c21f93d84b26244a446414e9775919d</l7:Id>
            <l7:Type>POLICY</l7:Type>
            <l7:TimeStamp>2022-04-29T11:42:05.082-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Policy guid="d076c049-b5b3-4990-aad3-d9c35c3e17ef" id="3c21f93d84b26244a446414e9775919d" version="0">
                    <l7:PolicyDetail folderId="c4706d99077459bed7ca5ef6c9e62ecb" guid="d076c049-b5b3-4990-aad3-d9c35c3e17ef" id="3c21f93d84b26244a446414e9775919d" version="0">
                        <l7:Name>Utility: List Listen Ports</l7:Name>
                        <l7:PolicyType>Include</l7:PolicyType>
                        <l7:Properties>
                            <l7:Property key="revision">
                                <l7:LongValue>1</l7:LongValue>
                            </l7:Property>
                            <l7:Property key="soap">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                        </l7:Properties>
                    </l7:PolicyDetail>
                    <l7:Resources>
                        <l7:ResourceSet tag="policy">
                            <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Policy fragment for &amp;quot;Utility: List Listen Ports&amp;quot; encapsulated assertion"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Call Restman and generate a sorted list of listen ports"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** - Assumes an admin role user has been authenticated"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** - Caches results for ${cacheAge} seconds (default=300). To refresh the cache set ${refresh}=true when calling"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** - Returns a text/xml message variable in ${listenPorts.sorted}"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Inputs:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - refresh (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - cacheAge (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Outputs:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - listenPorts.sorted (message)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - error.msg (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v1.0.0 - Jay MacDonald - 20201107 - Initial Version"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:AuditDetailAssertion&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// FINE"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Detail stringValue="==&gt; Entering Utility Fragment: ${policy.name} (refresh=${refresh})"/&gt;
            &lt;L7p:Level stringValue="FINE"/&gt;
        &lt;/L7p:AuditDetailAssertion&gt;
        &lt;wsp:All wsp:Usage="Required"&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** ${listenPorts.sorted} has the following schema:"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** "/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** &amp;lt;ListenPorts source=&amp;quot;system|cache&amp;quot;&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   &amp;lt;ListenPort id=&amp;quot;string&amp;quot;&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;Name&gt;string&amp;lt;/Name&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;Protocol&gt;string&amp;lt;/Protocol&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;Port&gt;string&amp;lt;/Port&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;Enabled&gt;string&amp;lt;/Enabled&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   &amp;lt;/ListenPort&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   ..."/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** &amp;lt;/ListenPorts&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Description of ${listenPorts.sorted}"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:All&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// true or false"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${cacheAge}"/&gt;
                &lt;L7p:Operator operatorNull="null"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item dataType="included"&gt;
                        &lt;L7p:Type variableDataType="int"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;L7p:item binary="included"&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Operator operator="GT"/&gt;
                        &lt;L7p:RightValue stringValue="0"/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="MzAw"/&gt;
                &lt;L7p:DataType variableDataType="int"/&gt;
                &lt;L7p:VariableToSet stringValue="cacheAge"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Ensure ${cacheAge} is set, default=300"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// true or false"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${refresh}"/&gt;
                &lt;L7p:Operator operatorNull="null"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item dataType="included"&gt;
                        &lt;L7p:Type variableDataType="string"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;L7p:item regex="included"&gt;
                        &lt;L7p:Pattern stringValue="^(true|false)$"/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="ZmFsc2U="/&gt;
                &lt;L7p:VariableToSet stringValue="refresh"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Ensure ${refresh} is set, default=false"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="bGlzdGVuUG9ydHMuc29ydGVk"/&gt;
            &lt;L7p:VariableToSet stringValue="cacheKey"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${refresh}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="string"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:RightValue stringValue="true"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:CacheLookup&gt;
                    &lt;L7p:CacheEntryKey stringValue="${cacheKey}"/&gt;
                    &lt;L7p:CacheId stringValue="listenPortList"/&gt;
                    &lt;L7p:ContentTypeOverride stringValue=""/&gt;
                    &lt;L7p:MaxEntryAgeSeconds stringValue="${cacheAge}"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="listenPorts.sorted"/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                &lt;/L7p:CacheLookup&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="Y2FjaGU="/&gt;
                    &lt;L7p:VariableToSet stringValue="source"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// FINE"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; Found listenPorts.sorted in the cache"/&gt;
                    &lt;L7p:Level stringValue="FINE"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Look in cache unless asked to refresh cache"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:Encapsulated&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// GET listenPorts"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="c8a5a0d5-1ae2-4144-b538-5c311efc1560"/&gt;
                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Call Restman"/&gt;
                    &lt;L7p:Parameters mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="element"/&gt;
                            &lt;L7p:value stringValue="ListenPort"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="message"/&gt;
                            &lt;L7p:value stringValue=""/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="method"/&gt;
                            &lt;L7p:value stringValue="GET"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="resource"/&gt;
                            &lt;L7p:value stringValue="listenPorts"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Parameters&gt;
                &lt;/L7p:Encapsulated&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:VariablePrefix stringValue="listenPorts"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:List/l7:Item/l7:Resource/l7:ListenPort"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:TrueAssertion/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Extract the list of listen ports, never fail"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz48TGlzdGVuUG9ydHM+"/&gt;
                    &lt;L7p:VariableToSet stringValue="listenPorts.sorted"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:ForEachLoop L7p:Usage="Required"
                    loopVariable="listenPorts.elements" variablePrefix="listenPort"&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cast to message type for parsing"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:Base64Expression stringValue="JHtsaXN0ZW5Qb3J0LmN1cnJlbnR9"/&gt;
                        &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                        &lt;L7p:DataType variableDataType="message"/&gt;
                        &lt;L7p:VariableToSet stringValue="listenPort.xml"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Retrieve the listen port ID"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="id"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="listenPort.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:ListenPort/@id"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// retrieve the listen port name"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="name"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="listenPort.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:ListenPort/l7:Name"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// retrieve the listen port enabled state"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="enabled"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="listenPort.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:ListenPort/l7:Enabled"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// retrieve the listen port protocol"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="protocol"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="listenPort.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:ListenPort/l7:Protocol"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// retrieve the listen port port"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="port"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="listenPort.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:ListenPort/l7:Port"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="JHtsaXN0ZW5Qb3J0cy5zb3J0ZWR9PExpc3RlblBvcnQgaWQ9IiR7aWQucmVzdWx0fSI+PE5hbWU+PCFbQ0RBVEFbJHtuYW1lLnJlc3VsdH1dXT48L05hbWU+PFByb3RvY29sPiR7cHJvdG9jb2wucmVzdWx0fTwvUHJvdG9jb2w+PFBvcnQ+JHtwb3J0LnJlc3VsdH08L1BvcnQ+PEVuYWJsZWQ+JHtlbmFibGVkLnJlc3VsdH08L0VuYWJsZWQ+PC9MaXN0ZW5Qb3J0Pg=="/&gt;
                        &lt;L7p:VariableToSet stringValue="listenPorts.sorted"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Build the list of listen ports"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/L7p:ForEachLoop&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtsaXN0ZW5Qb3J0cy5zb3J0ZWR9PC9MaXN0ZW5Qb3J0cz4="/&gt;
                    &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                    &lt;L7p:DataType variableDataType="message"/&gt;
                    &lt;L7p:VariableToSet stringValue="listenPorts.sorted"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:XslTransformation&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Sort the listen ports by name"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Direction intValue="-1"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="listenPorts.sorted"/&gt;
                    &lt;L7p:ResourceInfo staticResourceInfo="included"&gt;
                        &lt;L7p:Document stringValueReference="inline"&gt;&lt;![CDATA[&lt;xsl:stylesheet version="1.0" xmlns:l7="http://ns.l7tech.com/2010/04/gateway-management" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;

&lt;xsl:template match="/ListenPorts"&gt;
    &lt;xsl:copy&gt;
        &lt;xsl:for-each select="ListenPort"&gt;
            &lt;xsl:sort select="./Name"/&gt;
            &lt;xsl:copy-of select="."/&gt;
        &lt;/xsl:for-each&gt;
    &lt;/xsl:copy&gt;
&lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;]]&gt;&lt;/L7p:Document&gt;
                    &lt;/L7p:ResourceInfo&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                    &lt;L7p:TransformName stringValue=""/&gt;
                    &lt;L7p:XsltVersion stringValue="1.0"/&gt;
                &lt;/L7p:XslTransformation&gt;
                &lt;L7p:CacheStorage&gt;
                    &lt;L7p:CacheEntryKey stringValue="${cacheKey}"/&gt;
                    &lt;L7p:CacheId stringValue="listenPortList"/&gt;
                    &lt;L7p:MaxEntries stringValue="1"/&gt;
                    &lt;L7p:MaxEntryAgeSeconds stringValue="${cacheAge}"/&gt;
                    &lt;L7p:MaxEntrySizeBytes stringValue="200000"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="listenPorts.sorted"/&gt;
                    &lt;L7p:StoreSoapFaults booleanValue="true"/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                &lt;/L7p:CacheStorage&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="c3lzdGVt"/&gt;
                    &lt;L7p:VariableToSet stringValue="source"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// FINE"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; Loaded listenPorts.sorted from system and stored to cache"/&gt;
                    &lt;L7p:Level stringValue="FINE"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Retrieve new list and cache"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="RXJyb3Igd2hlbiBsaXN0aW5nIGxpc3RlbiBwb3J0cw=="/&gt;
                    &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// WARNING"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; Error listing listen ports in ${policy.name}"/&gt;
                    &lt;L7p:Level stringValue="WARNING"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:FalseAssertion/&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Failure - set ${error.msg}"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Caching logic"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:Regex&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Add source attribute to /ListenPorts element"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:AutoTarget booleanValue="false"/&gt;
            &lt;L7p:OtherTargetMessageVariable stringValue="listenPorts.sorted"/&gt;
            &lt;L7p:Regex stringValue="&amp;lt;ListenPorts&gt;"/&gt;
            &lt;L7p:Replace booleanValue="true"/&gt;
            &lt;L7p:Replacement stringValue="&amp;lt;ListenPorts source=&amp;quot;${source}&amp;quot;&gt;"/&gt;
            &lt;L7p:Target target="OTHER"/&gt;
        &lt;/L7p:Regex&gt;
        &lt;L7p:AuditDetailAssertion&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// FINE"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Detail stringValue="==&gt; Leaving Utility Fragment: ${policy.name}"/&gt;
            &lt;L7p:Level stringValue="FINE"/&gt;
        &lt;/L7p:AuditDetailAssertion&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
                        </l7:ResourceSet>
                    </l7:Resources>
                </l7:Policy>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Utility: Get All Policy XML</l7:Name>
            <l7:Id>c4706d99077459bed7ca5ef6c9e532e8</l7:Id>
            <l7:Type>POLICY</l7:Type>
            <l7:TimeStamp>2022-04-29T11:42:05.090-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Policy guid="9deeaade-8769-4ff0-a112-6e1494d0f65d" id="c4706d99077459bed7ca5ef6c9e532e8" version="0">
                    <l7:PolicyDetail folderId="c4706d99077459bed7ca5ef6c9e62ecb" guid="9deeaade-8769-4ff0-a112-6e1494d0f65d" id="c4706d99077459bed7ca5ef6c9e532e8" version="0">
                        <l7:Name>Utility: Get All Policy XML</l7:Name>
                        <l7:PolicyType>Include</l7:PolicyType>
                        <l7:Properties>
                            <l7:Property key="revision">
                                <l7:LongValue>1</l7:LongValue>
                            </l7:Property>
                            <l7:Property key="soap">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                        </l7:Properties>
                    </l7:PolicyDetail>
                    <l7:Resources>
                        <l7:ResourceSet tag="policy">
                            <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Policy fragment for &amp;quot;Utility: Get All Policy XML&amp;quot; encapsulated assertion"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Call Restman and get policy XML for both policies and services"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** - Assumes an admin role user has been authenticated"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** - Caches results for ${cacheAge} seconds (default=300). To refresh the cache set ${refresh}=true when calling"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** - Returns a text/xml message variable in ${allPolicyXML}"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Inputs:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - refresh (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - cacheAge (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Outputs:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - allPolicyXML (message)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - error.msg (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v1.0.0 - Jay MacDonald - 20201107 - Initial Version"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:AuditDetailAssertion&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// FINE"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Detail stringValue="==&gt; Entering Utility Fragment: ${policy.name} (refresh=${refresh})"/&gt;
            &lt;L7p:Level stringValue="FINE"/&gt;
        &lt;/L7p:AuditDetailAssertion&gt;
        &lt;wsp:All wsp:Usage="Required"&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** ${allPolicyXML} has the following schema:"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** "/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** &amp;lt;AllPolicyXML source=&amp;quot;cache|system&amp;quot;&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   &amp;lt;PolicyXML ownerId=&amp;quot;string&amp;quot; ownerType=&amp;quot;string&amp;quot;&gt;PolicyXML&amp;lt;/PolicyXML&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   ..."/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** &amp;lt;/AllPolicyXML&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Description of ${allPolicyXML}"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:All&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// true or false"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${cacheAge}"/&gt;
                &lt;L7p:Operator operatorNull="null"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item dataType="included"&gt;
                        &lt;L7p:Type variableDataType="int"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;L7p:item binary="included"&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Operator operator="GT"/&gt;
                        &lt;L7p:RightValue stringValue="0"/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="MzAw"/&gt;
                &lt;L7p:DataType variableDataType="int"/&gt;
                &lt;L7p:VariableToSet stringValue="cacheAge"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Ensure ${cacheAge} is set, default=300"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// true or false"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${refresh}"/&gt;
                &lt;L7p:Operator operatorNull="null"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item dataType="included"&gt;
                        &lt;L7p:Type variableDataType="string"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;L7p:item regex="included"&gt;
                        &lt;L7p:Pattern stringValue="^(true|false)$"/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="ZmFsc2U="/&gt;
                &lt;L7p:VariableToSet stringValue="refresh"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Ensure ${refresh} is set, default=false"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="YWxsUG9saWN5WE1M"/&gt;
            &lt;L7p:VariableToSet stringValue="cacheKey"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${refresh}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="string"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:RightValue stringValue="true"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:CacheLookup&gt;
                    &lt;L7p:CacheEntryKey stringValue="${cacheKey}"/&gt;
                    &lt;L7p:CacheId stringValue="allPolicyXML"/&gt;
                    &lt;L7p:ContentTypeOverride stringValue=""/&gt;
                    &lt;L7p:MaxEntryAgeSeconds stringValue="${cacheAge}"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="allPolicyXML"/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                &lt;/L7p:CacheLookup&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="Y2FjaGU="/&gt;
                    &lt;L7p:VariableToSet stringValue="source"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// FINE"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; Found allPolicyXML in the cache"/&gt;
                    &lt;L7p:Level stringValue="FINE"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Look in cache unless asked to refresh cache"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxBbGxQb2xpY3lYTUw+"/&gt;
                    &lt;L7p:VariableToSet stringValue="allPolicyXML"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:Encapsulated&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// GET policies"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="c8a5a0d5-1ae2-4144-b538-5c311efc1560"/&gt;
                        &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Call Restman"/&gt;
                        &lt;L7p:Parameters mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="element"/&gt;
                                &lt;L7p:value stringValue="Policy"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="message"/&gt;
                                &lt;L7p:value stringValue=""/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="method"/&gt;
                                &lt;L7p:value stringValue="GET"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="resource"/&gt;
                                &lt;L7p:value stringValue="policies"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Parameters&gt;
                    &lt;/L7p:Encapsulated&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                        &lt;L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:VariablePrefix stringValue="objects"/&gt;
                            &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                &lt;L7p:Expression stringValue="/l7:List/l7:Item/l7:Resource/l7:Policy"/&gt;
                                &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Namespaces&gt;
                                &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                            &lt;/L7p:XpathExpression&gt;
                        &lt;/L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:TrueAssertion/&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Extract the list of policies, never fail"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;L7p:ForEachLoop L7p:Usage="Required"
                        loopVariable="objects.elements" variablePrefix="object"&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="JHtvYmplY3QuY3VycmVudH0="/&gt;
                            &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                            &lt;L7p:DataType variableDataType="message"/&gt;
                            &lt;L7p:VariableToSet stringValue="object.xml"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:VariablePrefix stringValue="id"/&gt;
                            &lt;L7p:XmlMsgSrc stringValue="object.xml"/&gt;
                            &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                &lt;L7p:Expression stringValue="/l7:Policy/@id"/&gt;
                                &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Namespaces&gt;
                                &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                            &lt;/L7p:XpathExpression&gt;
                        &lt;/L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:VariablePrefix stringValue="policy.xml"/&gt;
                            &lt;L7p:XmlMsgSrc stringValue="object.xml"/&gt;
                            &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                &lt;L7p:Expression stringValue="//l7:Resource[@type=&amp;quot;policy&amp;quot;]/text()"/&gt;
                                &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Namespaces&gt;
                                &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                            &lt;/L7p:XpathExpression&gt;
                        &lt;/L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:Regex&gt;
                            &lt;L7p:AutoTarget booleanValue="false"/&gt;
                            &lt;L7p:OtherTargetMessageVariable stringValue="policy.xml.result"/&gt;
                            &lt;L7p:Regex stringValue="&amp;amp;"/&gt;
                            &lt;L7p:Replace booleanValue="true"/&gt;
                            &lt;L7p:Replacement stringValue="&amp;amp;amp;"/&gt;
                            &lt;L7p:Target target="OTHER"/&gt;
                        &lt;/L7p:Regex&gt;
                        &lt;L7p:Regex&gt;
                            &lt;L7p:AutoTarget booleanValue="false"/&gt;
                            &lt;L7p:OtherTargetMessageVariable stringValue="policy.xml.result"/&gt;
                            &lt;L7p:Regex stringValue="&amp;lt;"/&gt;
                            &lt;L7p:Replace booleanValue="true"/&gt;
                            &lt;L7p:Replacement stringValue="&amp;amp;lt;"/&gt;
                            &lt;L7p:Target target="OTHER"/&gt;
                        &lt;/L7p:Regex&gt;
                        &lt;L7p:Regex&gt;
                            &lt;L7p:AutoTarget booleanValue="false"/&gt;
                            &lt;L7p:OtherTargetMessageVariable stringValue="policy.xml.result"/&gt;
                            &lt;L7p:Regex stringValue="&gt;"/&gt;
                            &lt;L7p:Replace booleanValue="true"/&gt;
                            &lt;L7p:Replacement stringValue="&amp;amp;gt;"/&gt;
                            &lt;L7p:Target target="OTHER"/&gt;
                        &lt;/L7p:Regex&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="JHthbGxQb2xpY3lYTUx9DQogIDxQb2xpY3lYTUwgc291cmNlSWQ9IiR7aWQucmVzdWx0fSIgc291cmNlVHlwZT0iUE9MSUNZIj4ke3BvbGljeS54bWwucmVzdWx0fTwvUG9saWN5WE1MPg=="/&gt;
                            &lt;L7p:VariableToSet stringValue="allPolicyXML"/&gt;
                        &lt;/L7p:SetVariable&gt;
                    &lt;/L7p:ForEachLoop&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Get policy XML for Policies and append to ${allPolicyXML}"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:Encapsulated&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// GET services"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="c8a5a0d5-1ae2-4144-b538-5c311efc1560"/&gt;
                        &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Call Restman"/&gt;
                        &lt;L7p:Parameters mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="element"/&gt;
                                &lt;L7p:value stringValue="Service"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="message"/&gt;
                                &lt;L7p:value stringValue=""/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="method"/&gt;
                                &lt;L7p:value stringValue="GET"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="resource"/&gt;
                                &lt;L7p:value stringValue="services"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Parameters&gt;
                    &lt;/L7p:Encapsulated&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                        &lt;L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:VariablePrefix stringValue="objects"/&gt;
                            &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                &lt;L7p:Expression stringValue="/l7:List/l7:Item/l7:Resource/l7:Service"/&gt;
                                &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Namespaces&gt;
                                &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                            &lt;/L7p:XpathExpression&gt;
                        &lt;/L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:TrueAssertion/&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Extract the list of services, never fail"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;L7p:ForEachLoop L7p:Usage="Required"
                        loopVariable="objects.elements" variablePrefix="object"&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="JHtvYmplY3QuY3VycmVudH0="/&gt;
                            &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                            &lt;L7p:DataType variableDataType="message"/&gt;
                            &lt;L7p:VariableToSet stringValue="object.xml"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:VariablePrefix stringValue="id"/&gt;
                            &lt;L7p:XmlMsgSrc stringValue="object.xml"/&gt;
                            &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                &lt;L7p:Expression stringValue="/l7:Service/@id"/&gt;
                                &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Namespaces&gt;
                                &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                            &lt;/L7p:XpathExpression&gt;
                        &lt;/L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:VariablePrefix stringValue="policy.xml"/&gt;
                            &lt;L7p:XmlMsgSrc stringValue="object.xml"/&gt;
                            &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                &lt;L7p:Expression stringValue="//l7:Resource[@type=&amp;quot;policy&amp;quot;]/text()"/&gt;
                                &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Namespaces&gt;
                                &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                            &lt;/L7p:XpathExpression&gt;
                        &lt;/L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:Regex&gt;
                            &lt;L7p:AutoTarget booleanValue="false"/&gt;
                            &lt;L7p:OtherTargetMessageVariable stringValue="policy.xml.result"/&gt;
                            &lt;L7p:Regex stringValue="&amp;amp;"/&gt;
                            &lt;L7p:Replace booleanValue="true"/&gt;
                            &lt;L7p:Replacement stringValue="&amp;amp;amp;"/&gt;
                            &lt;L7p:Target target="OTHER"/&gt;
                        &lt;/L7p:Regex&gt;
                        &lt;L7p:Regex&gt;
                            &lt;L7p:AutoTarget booleanValue="false"/&gt;
                            &lt;L7p:OtherTargetMessageVariable stringValue="policy.xml.result"/&gt;
                            &lt;L7p:Regex stringValue="&amp;lt;"/&gt;
                            &lt;L7p:Replace booleanValue="true"/&gt;
                            &lt;L7p:Replacement stringValue="&amp;amp;lt;"/&gt;
                            &lt;L7p:Target target="OTHER"/&gt;
                        &lt;/L7p:Regex&gt;
                        &lt;L7p:Regex&gt;
                            &lt;L7p:AutoTarget booleanValue="false"/&gt;
                            &lt;L7p:OtherTargetMessageVariable stringValue="policy.xml.result"/&gt;
                            &lt;L7p:Regex stringValue="&gt;"/&gt;
                            &lt;L7p:Replace booleanValue="true"/&gt;
                            &lt;L7p:Replacement stringValue="&amp;amp;gt;"/&gt;
                            &lt;L7p:Target target="OTHER"/&gt;
                        &lt;/L7p:Regex&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="JHthbGxQb2xpY3lYTUx9DQogIDxQb2xpY3lYTUwgc291cmNlSWQ9IiR7aWQucmVzdWx0fSIgc291cmNlVHlwZT0iU0VSVklDRSI+JHtwb2xpY3kueG1sLnJlc3VsdH08L1BvbGljeVhNTD4="/&gt;
                            &lt;L7p:VariableToSet stringValue="allPolicyXML"/&gt;
                        &lt;/L7p:SetVariable&gt;
                    &lt;/L7p:ForEachLoop&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Get policy XML for Services and append to ${allPolicyXML}"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHthbGxQb2xpY3lYTUx9DQo8L0FsbFBvbGljeVhNTD4="/&gt;
                    &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                    &lt;L7p:DataType variableDataType="message"/&gt;
                    &lt;L7p:VariableToSet stringValue="allPolicyXML"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:CacheStorage&gt;
                    &lt;L7p:CacheEntryKey stringValue="${cacheKey}"/&gt;
                    &lt;L7p:CacheId stringValue="allPolicyXML"/&gt;
                    &lt;L7p:MaxEntries stringValue="1"/&gt;
                    &lt;L7p:MaxEntryAgeSeconds stringValue="${cacheAge}"/&gt;
                    &lt;L7p:MaxEntrySizeBytes stringValue="25000000"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="allPolicyXML"/&gt;
                    &lt;L7p:StoreSoapFaults booleanValue="true"/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                &lt;/L7p:CacheStorage&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="c3lzdGVt"/&gt;
                    &lt;L7p:VariableToSet stringValue="source"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// FINE"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; Loaded policies.sorted from system and stored to cache"/&gt;
                    &lt;L7p:Level stringValue="FINE"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Retrieve new list and cache"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="RXJyb3Igd2hlbiBvYnRhaW5pbmcgcG9saWN5IFhNTA=="/&gt;
                    &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// WARNING"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; Error obtaining policy XML in ${policy.name}"/&gt;
                    &lt;L7p:Level stringValue="WARNING"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:FalseAssertion/&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Failure - set ${error.msg}"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Caching logic"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:Regex&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Add source attribute to /Policies element"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:AutoTarget booleanValue="false"/&gt;
            &lt;L7p:OtherTargetMessageVariable stringValue="allPolicyXML"/&gt;
            &lt;L7p:Regex stringValue="&amp;lt;AllPolicyXML&gt;"/&gt;
            &lt;L7p:Replace booleanValue="true"/&gt;
            &lt;L7p:Replacement stringValue="&amp;lt;AllPolicyXML source=&amp;quot;${source}&amp;quot;&gt;"/&gt;
            &lt;L7p:Target target="OTHER"/&gt;
        &lt;/L7p:Regex&gt;
        &lt;L7p:AuditDetailAssertion&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// FINE"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Detail stringValue="==&gt; Leaving Utility Fragment: ${policy.name}"/&gt;
            &lt;L7p:Level stringValue="FINE"/&gt;
        &lt;/L7p:AuditDetailAssertion&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
                        </l7:ResourceSet>
                    </l7:Resources>
                </l7:Policy>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Utility: Get All Policy XML</l7:Name>
            <l7:Id>c4706d99077459bed7ca5ef6c9e53443</l7:Id>
            <l7:Type>ENCAPSULATED_ASSERTION</l7:Type>
            <l7:TimeStamp>2022-04-29T11:42:05.090-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:EncapsulatedAssertion id="c4706d99077459bed7ca5ef6c9e53443" version="0">
                    <l7:Name>Utility: Get All Policy XML</l7:Name>
                    <l7:Guid>420909da-0e72-4996-a6ed-cf3c21b8bc59</l7:Guid>
                    <l7:PolicyReference id="c4706d99077459bed7ca5ef6c9e532e8" resourceUri="http://ns.l7tech.com/2010/04/gateway-management/policies"/>
                    <l7:EncapsulatedArguments>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>1</l7:Ordinal>
                            <l7:ArgumentName>refresh</l7:ArgumentName>
                            <l7:ArgumentType>string</l7:ArgumentType>
                            <l7:GuiLabel>Refresh Cache? (true|false) (optional): </l7:GuiLabel>
                            <l7:GuiPrompt>true</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>2</l7:Ordinal>
                            <l7:ArgumentName>cacheAge</l7:ArgumentName>
                            <l7:ArgumentType>string</l7:ArgumentType>
                            <l7:GuiLabel>Cache Age (optional): </l7:GuiLabel>
                            <l7:GuiPrompt>true</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                    </l7:EncapsulatedArguments>
                    <l7:EncapsulatedResults>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>allPolicyXML</l7:ResultName>
                            <l7:ResultType>message</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>error.msg</l7:ResultName>
                            <l7:ResultType>string</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                    </l7:EncapsulatedResults>
                    <l7:Properties>
                        <l7:Property key="allowTracing">
                            <l7:StringValue>false</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="description">
                            <l7:StringValue>Call restman to get policy XML for all policies and services</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="paletteFolder">
                            <l7:StringValue>internalAssertions</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="paletteIconResourceName">
                            <l7:StringValue>Refresh16.gif</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="passMetricsToParent">
                            <l7:StringValue>false</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="policyGuid">
                            <l7:StringValue>9deeaade-8769-4ff0-a112-6e1494d0f65d</l7:StringValue>
                        </l7:Property>
                    </l7:Properties>
                </l7:EncapsulatedAssertion>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Utility: List Folders</l7:Name>
            <l7:Id>7215d076e3f7201974e2be3edf13f575</l7:Id>
            <l7:Type>POLICY</l7:Type>
            <l7:TimeStamp>2022-04-29T11:42:05.100-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Policy guid="219cafb1-ca3d-40e9-8270-f7d95673c74b" id="7215d076e3f7201974e2be3edf13f575" version="0">
                    <l7:PolicyDetail folderId="c4706d99077459bed7ca5ef6c9e62ecb" guid="219cafb1-ca3d-40e9-8270-f7d95673c74b" id="7215d076e3f7201974e2be3edf13f575" version="0">
                        <l7:Name>Utility: List Folders</l7:Name>
                        <l7:PolicyType>Include</l7:PolicyType>
                        <l7:Properties>
                            <l7:Property key="revision">
                                <l7:LongValue>1</l7:LongValue>
                            </l7:Property>
                            <l7:Property key="soap">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                        </l7:Properties>
                    </l7:PolicyDetail>
                    <l7:Resources>
                        <l7:ResourceSet tag="policy">
                            <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Policy fragment for &amp;quot;Utility: List Folders&amp;quot; encapsulated assertion"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Call Restman and generate a sorted list of folders"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** - Assumes an admin role user has been authenticated"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** - Caches results for ${cacheAge} seconds (default=300). To refresh the cache set ${refresh}=true when calling"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** - Returns a text/xml message variable in ${folders.sorted}"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Inputs:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - refresh (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - cacheAge (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Outputs:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - folders.sorted (message)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - error.msg (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v1.0.0 - Jay MacDonald - 20201107 - Initial Version"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:AuditDetailAssertion&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// FINE"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Detail stringValue="==&gt; Entering Utility Fragment: ${policy.name} (refresh=${refresh})"/&gt;
            &lt;L7p:Level stringValue="FINE"/&gt;
        &lt;/L7p:AuditDetailAssertion&gt;
        &lt;wsp:All wsp:Usage="Required"&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** ${folders.sorted} has the following schema:"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** "/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** &amp;lt;Folders source=&amp;quot;system|cache&amp;quot; rootId=&amp;quot;string&amp;quot;&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   &amp;lt;Folder id=&amp;quot;string&amp;quot; folderId=&amp;quot;string&amp;quot;&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;Name&gt;string&amp;lt;/Name&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;FolderPath&gt;string&amp;lt;/FolderPath&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;IdPath&gt;string&amp;lt;/IdPath&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   &amp;lt;/Folder&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   ..."/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** &amp;lt;/Folders&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** "/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** Where:"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   Name = the name of the folder (i.e. no path)"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   FolderPath = the path to the folder without the folder's name"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   IdPath = the path to this folder expressed as folder ids"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   FullPath = the path to the folder with the folder's name"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** "/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** Content of folder element is the full path to the folder"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Description of ${folders.sorted}"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:All&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// true or false"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${cacheAge}"/&gt;
                &lt;L7p:Operator operatorNull="null"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item dataType="included"&gt;
                        &lt;L7p:Type variableDataType="int"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;L7p:item binary="included"&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Operator operator="GT"/&gt;
                        &lt;L7p:RightValue stringValue="0"/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="MzAw"/&gt;
                &lt;L7p:DataType variableDataType="int"/&gt;
                &lt;L7p:VariableToSet stringValue="cacheAge"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Ensure ${cacheAge} is set, default=300"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// true or false"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${refresh}"/&gt;
                &lt;L7p:Operator operatorNull="null"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item dataType="included"&gt;
                        &lt;L7p:Type variableDataType="string"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;L7p:item regex="included"&gt;
                        &lt;L7p:Pattern stringValue="^(true|false)$"/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="ZmFsc2U="/&gt;
                &lt;L7p:VariableToSet stringValue="refresh"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Ensure ${refresh} is set, default=false"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="Zm9sZGVycy5zb3J0ZWQ="/&gt;
            &lt;L7p:VariableToSet stringValue="cacheKey"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="PCEtLSBUZW1wbGF0ZSBvZiAxMDAwIGluZGV4ZXMgdG8gY3JlYXRlIGEgZm9yIGxvb3AgLS0+DQo8Zm9yTG9vcFRlbXBsYXRlPg0KICA8aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPg0KICA8aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPg0KICA8aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPg0KICA8aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPg0KICA8aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPg0KICA8aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPg0KICA8aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPg0KICA8aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPg0KICA8aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPg0KICA8aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPg0KICA8aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPg0KICA8aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPg0KICA8aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPg0KICA8aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPg0KICA8aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPg0KICA8aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPg0KICA8aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPg0KICA8aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPg0KICA8aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPg0KICA8aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPg0KICA8aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPg0KICA8aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPg0KICA8aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPg0KICA8aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPg0KICA8aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPg0KICA8aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPg0KICA8aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPg0KICA8aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPg0KICA8aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPg0KICA8aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPg0KICA8aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPg0KICA8aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPg0KICA8aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPg0KICA8aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPg0KICA8aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPg0KICA8aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPg0KICA8aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPg0KICA8aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPg0KICA8aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPg0KICA8aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPg0KICA8aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPg0KICA8aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPg0KICA8aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPg0KICA8aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPg0KICA8aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPg0KICA8aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPg0KICA8aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPg0KICA8aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPg0KICA8aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPg0KICA8aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPjxpLz48aS8+PGkvPg0KPC9mb3JMb29wVGVtcGxhdGU+"/&gt;
            &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
            &lt;L7p:DataType variableDataType="message"/&gt;
            &lt;L7p:VariableToSet stringValue="forLoop.template"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:ResponseXpathAssertion&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Create ${forLoop.results} for looping up to 1000 times"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:VariablePrefix stringValue="forLoop"/&gt;
            &lt;L7p:XmlMsgSrc stringValue="forLoop.template"/&gt;
            &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                &lt;L7p:Expression stringValue="/forLoopTemplate/i"/&gt;
                &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
            &lt;/L7p:XpathExpression&gt;
        &lt;/L7p:ResponseXpathAssertion&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${refresh}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="string"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:RightValue stringValue="true"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:CacheLookup&gt;
                    &lt;L7p:CacheEntryKey stringValue="${cacheKey}"/&gt;
                    &lt;L7p:CacheId stringValue="folderList"/&gt;
                    &lt;L7p:ContentTypeOverride stringValue=""/&gt;
                    &lt;L7p:MaxEntryAgeSeconds stringValue="${cacheAge}"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="folders.sorted"/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                &lt;/L7p:CacheLookup&gt;
                &lt;L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:VariablePrefix stringValue="rootId"/&gt;
                    &lt;L7p:XmlMsgSrc stringValue="folders.sorted"/&gt;
                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                        &lt;L7p:Expression stringValue="/Folders/@rootId"/&gt;
                        &lt;L7p:Namespaces mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="s"/&gt;
                                &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Namespaces&gt;
                        &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                    &lt;/L7p:XpathExpression&gt;
                &lt;/L7p:ResponseXpathAssertion&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="Y2FjaGU="/&gt;
                    &lt;L7p:VariableToSet stringValue="source"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtyb290SWQucmVzdWx0fQ=="/&gt;
                    &lt;L7p:VariableToSet stringValue="folders.rootId"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// FINE"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; Found folders.sorted in the cache"/&gt;
                    &lt;L7p:Level stringValue="FINE"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Look in cache unless asked to refresh cache"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:Encapsulated&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// GET folders"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="c8a5a0d5-1ae2-4144-b538-5c311efc1560"/&gt;
                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Call Restman"/&gt;
                    &lt;L7p:Parameters mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="element"/&gt;
                            &lt;L7p:value stringValue="Folder"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="message"/&gt;
                            &lt;L7p:value stringValue=""/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="method"/&gt;
                            &lt;L7p:value stringValue="GET"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="resource"/&gt;
                            &lt;L7p:value stringValue="folders"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Parameters&gt;
                &lt;/L7p:Encapsulated&gt;
                &lt;L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:VariablePrefix stringValue="folders"/&gt;
                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                        &lt;L7p:Expression stringValue="/l7:List/l7:Item[l7:Type='FOLDER']/l7:Resource/l7:Folder"/&gt;
                        &lt;L7p:Namespaces mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="l7"/&gt;
                                &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Namespaces&gt;
                        &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                    &lt;/L7p:XpathExpression&gt;
                &lt;/L7p:ResponseXpathAssertion&gt;
                &lt;L7p:ForEachLoop L7p:Usage="Required"
                    loopVariable="folders.elements" variablePrefix="folder.getroot"&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cast to message type for parsing"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:Base64Expression stringValue="JHtmb2xkZXIuZ2V0cm9vdC5jdXJyZW50fQ=="/&gt;
                        &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                        &lt;L7p:DataType variableDataType="message"/&gt;
                        &lt;L7p:VariableToSet stringValue="folder.xml"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                        &lt;L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:VariablePrefix stringValue=""/&gt;
                            &lt;L7p:XmlMsgSrc stringValue="folder.xml"/&gt;
                            &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                &lt;L7p:Expression stringValue="/l7:Folder/@folderId"/&gt;
                                &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Namespaces&gt;
                                &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                            &lt;/L7p:XpathExpression&gt;
                        &lt;/L7p:ResponseXpathAssertion&gt;
                        &lt;wsp:All wsp:Usage="Required"&gt;
                            &lt;L7p:ResponseXpathAssertion&gt;
                                &lt;L7p:VariablePrefix stringValue="rootId"/&gt;
                                &lt;L7p:XmlMsgSrc stringValue="folder.xml"/&gt;
                                &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/l7:Folder/@id"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                &lt;/L7p:XpathExpression&gt;
                            &lt;/L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="JHtyb290SWQucmVzdWx0fQ=="/&gt;
                                &lt;L7p:VariableToSet stringValue="folders.rootId"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="dHJ1ZQ=="/&gt;
                                &lt;L7p:VariableToSet stringValue="folder.getroot.break"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Set ${folders.rootId}"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:All&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// If we find @folderId then this is not the root node, else assign and break"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Determine ID of root node -&gt; ${rootId}"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/L7p:ForEachLoop&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz48Rm9sZGVycz4="/&gt;
                    &lt;L7p:VariableToSet stringValue="folders.sorted"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:ForEachLoop L7p:Usage="Required"
                    loopVariable="folders.elements" variablePrefix="folder"&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cast to message type for parsing"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:Base64Expression stringValue="JHtmb2xkZXIuY3VycmVudH0="/&gt;
                        &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                        &lt;L7p:DataType variableDataType="message"/&gt;
                        &lt;L7p:VariableToSet stringValue="folder.xml"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// retrieve the folder name"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="name"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="folder.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:Folder/l7:Name"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Retrieve the folder ID"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="id"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="folder.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:Folder/@id"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Root node is always &amp;lt; 0"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${id.result}"/&gt;
                            &lt;L7p:Expression2 stringValue="${folders.rootId}"/&gt;
                            &lt;L7p:Negate booleanValue="true"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:RightValue stringValue="${folders.rootId}"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue=""/&gt;
                            &lt;L7p:VariableToSet stringValue="name.result"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Handle Root Node"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                        &lt;L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Retrieve the parent folder ID"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:VariablePrefix stringValue="folderId"/&gt;
                            &lt;L7p:XmlMsgSrc stringValue="folder.xml"/&gt;
                            &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                &lt;L7p:Expression stringValue="/l7:Folder/@folderId"/&gt;
                                &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Namespaces&gt;
                                &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                            &lt;/L7p:XpathExpression&gt;
                        &lt;/L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue=""/&gt;
                            &lt;L7p:VariableToSet stringValue="folderId.result"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Extract folderId to get parent, set to empty if not founf (i.e. root folder)"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;L7p:CommentAssertion&gt;
                        &lt;L7p:Comment stringValue="** Build out the folder path."/&gt;
                    &lt;/L7p:CommentAssertion&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:CommentAssertion&gt;
                            &lt;L7p:Comment stringValue="*********************************************************************************************"/&gt;
                        &lt;/L7p:CommentAssertion&gt;
                        &lt;L7p:CommentAssertion&gt;
                            &lt;L7p:Comment stringValue="** Each folder's definition only indicates it own ID and the ID of its parent folder. To build out"/&gt;
                        &lt;/L7p:CommentAssertion&gt;
                        &lt;L7p:CommentAssertion&gt;
                            &lt;L7p:Comment stringValue="**   the full path we must iterate back from the folder to the root. This is done by setting up an"/&gt;
                        &lt;/L7p:CommentAssertion&gt;
                        &lt;L7p:CommentAssertion&gt;
                            &lt;L7p:Comment stringValue="**   arbitrarily long loop condition (using the ${forLoop.template} variable) and use recursion to"/&gt;
                        &lt;/L7p:CommentAssertion&gt;
                        &lt;L7p:CommentAssertion&gt;
                            &lt;L7p:Comment stringValue="**   work back to the root, pulling the parent folder from the response and"/&gt;
                        &lt;/L7p:CommentAssertion&gt;
                        &lt;L7p:CommentAssertion&gt;
                            &lt;L7p:Comment stringValue="**   prepending the folder name to the path each time. We take advantage of the fact that the"/&gt;
                        &lt;/L7p:CommentAssertion&gt;
                        &lt;L7p:CommentAssertion&gt;
                            &lt;L7p:Comment stringValue="**   root node does not have a parent folder declared so the XPath will fail when it is reached,"/&gt;
                        &lt;/L7p:CommentAssertion&gt;
                        &lt;L7p:CommentAssertion&gt;
                            &lt;L7p:Comment stringValue="**   thus terminating the Run Assertion for Each item loop. By wrapping that in an At Least One"/&gt;
                        &lt;/L7p:CommentAssertion&gt;
                        &lt;L7p:CommentAssertion&gt;
                            &lt;L7p:Comment stringValue="**   folder we ensure success by appending the folder itself to the path."/&gt;
                        &lt;/L7p:CommentAssertion&gt;
                        &lt;L7p:CommentAssertion&gt;
                            &lt;L7p:Comment stringValue="** "/&gt;
                        &lt;/L7p:CommentAssertion&gt;
                        &lt;L7p:CommentAssertion&gt;
                            &lt;L7p:Comment stringValue="** Note that the Root Node has to be handled explicitly when encountered."/&gt;
                        &lt;/L7p:CommentAssertion&gt;
                        &lt;L7p:CommentAssertion&gt;
                            &lt;L7p:Comment stringValue="** "/&gt;
                        &lt;/L7p:CommentAssertion&gt;
                        &lt;L7p:CommentAssertion&gt;
                            &lt;L7p:Comment stringValue="**                         Easy Peasy, eh?"/&gt;
                        &lt;/L7p:CommentAssertion&gt;
                        &lt;L7p:CommentAssertion&gt;
                            &lt;L7p:Comment stringValue="*********************************************************************************************"/&gt;
                        &lt;/L7p:CommentAssertion&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Comment block to describe how paths are built"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Initialize the path variable to empty"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:Base64Expression stringValue=""/&gt;
                        &lt;L7p:VariableToSet stringValue="path"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Initialize the path variable to empty"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:Base64Expression stringValue="JHtpZC5yZXN1bHR9"/&gt;
                        &lt;L7p:VariableToSet stringValue="idPath"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Set a starting point for the iteration"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:Base64Expression stringValue="JHtmb2xkZXIueG1sLm1haW5wYXJ0fQ=="/&gt;
                        &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                        &lt;L7p:DataType variableDataType="message"/&gt;
                        &lt;L7p:VariableToSet stringValue="this.folder"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                        &lt;L7p:ForEachLoop L7p:Usage="Required"
                            loopVariable="forLoop.results" variablePrefix="i"&gt;
                            &lt;L7p:ResponseXpathAssertion&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Retrieve the folder's parent ID"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:VariablePrefix stringValue="parentId"/&gt;
                                &lt;L7p:XmlMsgSrc stringValue="this.folder"/&gt;
                                &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/l7:Folder/@folderId"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                &lt;/L7p:XpathExpression&gt;
                            &lt;/L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:ResponseXpathAssertion&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get the parent folder from the Response"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:VariablePrefix stringValue="parentFolder"/&gt;
                                &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/l7:List/l7:Item/l7:Resource/l7:Folder[@id=$parentId.result]"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                &lt;/L7p:XpathExpression&gt;
                            &lt;/L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cast as a message type"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:Base64Expression stringValue="JHtwYXJlbnRGb2xkZXIuZWxlbWVudH0="/&gt;
                                &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                                &lt;L7p:DataType variableDataType="message"/&gt;
                                &lt;L7p:VariableToSet stringValue="this.folder"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:ResponseXpathAssertion&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// retrieve the folder name"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:VariablePrefix stringValue="parentName"/&gt;
                                &lt;L7p:XmlMsgSrc stringValue="this.folder"/&gt;
                                &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/l7:Folder/l7:Name"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                &lt;/L7p:XpathExpression&gt;
                            &lt;/L7p:ResponseXpathAssertion&gt;
                            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${parentId.result}"/&gt;
                                    &lt;L7p:Expression2 stringValue="${folders.rootId}"/&gt;
                                    &lt;L7p:Negate booleanValue="true"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:RightValue stringValue="${folders.rootId}"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt;
                                &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue=""/&gt;
                                    &lt;L7p:VariableToSet stringValue="parentName.result"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue=""/&gt;
                                    &lt;L7p:VariableToSet stringValue="parentId.result"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Blank out ${parentName.result} and ${parentId.result}"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                &lt;/wsp:All&gt;
                                &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Handle Root Node"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt;
                            &lt;/wsp:OneOrMore&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="JHtwYXJlbnRJZC5yZXN1bHR9LyR7aWRQYXRofQ=="/&gt;
                                &lt;L7p:VariableToSet stringValue="idPath"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="JHtwYXJlbnROYW1lLnJlc3VsdH0vJHtwYXRofQ=="/&gt;
                                &lt;L7p:VariableToSet stringValue="path"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${forLoop.result} was set earlier"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/L7p:ForEachLoop&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Append the folder name to the path"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:Base64Expression stringValue="JHtwYXRofSR7bmFtZS5yZXN1bHR9Lw=="/&gt;
                            &lt;L7p:VariableToSet stringValue="path"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// The Run for Each will always fail once the root folder is encountered, at which point append the folder name"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="JHtmb2xkZXJzLnNvcnRlZH08Rm9sZGVyIGlkPSIke2lkLnJlc3VsdH0iIGZvbGRlcklkPSIke2ZvbGRlcklkLnJlc3VsdH0iPjxOYW1lPjwhW0NEQVRBWyR7bmFtZS5yZXN1bHR9XV0+PC9OYW1lPjxGb2xkZXJQYXRoPjwhW0NEQVRBWyR7cGF0aH1dXT48L0ZvbGRlclBhdGg+PElkUGF0aD4ke2lkUGF0aH08L0lkUGF0aD48L0ZvbGRlcj4="/&gt;
                        &lt;L7p:VariableToSet stringValue="folders.sorted"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Build the list of folders"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/L7p:ForEachLoop&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtmb2xkZXJzLnNvcnRlZH08L0ZvbGRlcnM+"/&gt;
                    &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                    &lt;L7p:DataType variableDataType="message"/&gt;
                    &lt;L7p:VariableToSet stringValue="folders.sorted"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:XslTransformation&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Sort the folders by name"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Direction intValue="-1"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="folders.sorted"/&gt;
                    &lt;L7p:ResourceInfo staticResourceInfo="included"&gt;
                        &lt;L7p:Document stringValueReference="inline"&gt;&lt;![CDATA[&lt;xsl:stylesheet version="1.0" xmlns:l7="http://ns.l7tech.com/2010/04/gateway-management" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;

&lt;xsl:template match="/Folders"&gt;
    &lt;xsl:copy&gt;
        &lt;xsl:for-each select="Folder"&gt;
            &lt;xsl:sort select="./FolderPath"/&gt;
            &lt;xsl:sort select="./Name"/&gt;
            &lt;xsl:copy-of select="."/&gt;
        &lt;/xsl:for-each&gt;
    &lt;/xsl:copy&gt;
&lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;]]&gt;&lt;/L7p:Document&gt;
                    &lt;/L7p:ResourceInfo&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                    &lt;L7p:TransformName stringValue=""/&gt;
                    &lt;L7p:XsltVersion stringValue="1.0"/&gt;
                &lt;/L7p:XslTransformation&gt;
                &lt;L7p:Regex&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Add rootId attribute to /Folders element"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:AutoTarget booleanValue="false"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="folders.sorted"/&gt;
                    &lt;L7p:Regex stringValue="&amp;lt;Folders&gt;"/&gt;
                    &lt;L7p:Replace booleanValue="true"/&gt;
                    &lt;L7p:Replacement stringValue="&amp;lt;Folders rootId=&amp;quot;${folders.rootId}&amp;quot;&gt;"/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                &lt;/L7p:Regex&gt;
                &lt;L7p:CacheStorage&gt;
                    &lt;L7p:CacheEntryKey stringValue="${cacheKey}"/&gt;
                    &lt;L7p:CacheId stringValue="folderList"/&gt;
                    &lt;L7p:MaxEntries stringValue="1"/&gt;
                    &lt;L7p:MaxEntryAgeSeconds stringValue="${cacheAge}"/&gt;
                    &lt;L7p:MaxEntrySizeBytes stringValue="200000"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="folders.sorted"/&gt;
                    &lt;L7p:StoreSoapFaults booleanValue="true"/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                &lt;/L7p:CacheStorage&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="c3lzdGVt"/&gt;
                    &lt;L7p:VariableToSet stringValue="source"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// FINE"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; Loaded folders.sorted from system and stored to cache"/&gt;
                    &lt;L7p:Level stringValue="FINE"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Retrieve new list and cache"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="RXJyb3Igd2hlbiBsaXN0aW5nIGZvbGRlcnM="/&gt;
                    &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// WARNING"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; Error listing folders in ${policy.name}"/&gt;
                    &lt;L7p:Level stringValue="WARNING"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:FalseAssertion/&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Failure - set ${error.msg}"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Caching logic"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:Regex&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Add source attribute to /Folders element"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:AutoTarget booleanValue="false"/&gt;
            &lt;L7p:OtherTargetMessageVariable stringValue="folders.sorted"/&gt;
            &lt;L7p:Regex stringValue="&amp;lt;Folders rootId"/&gt;
            &lt;L7p:Replace booleanValue="true"/&gt;
            &lt;L7p:Replacement stringValue="&amp;lt;Folders source=&amp;quot;${source}&amp;quot; rootId"/&gt;
            &lt;L7p:Target target="OTHER"/&gt;
        &lt;/L7p:Regex&gt;
        &lt;L7p:AuditDetailAssertion&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// FINE"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Detail stringValue="==&gt; Leaving Utility Fragment: ${policy.name}"/&gt;
            &lt;L7p:Level stringValue="FINE"/&gt;
        &lt;/L7p:AuditDetailAssertion&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
                        </l7:ResourceSet>
                    </l7:Resources>
                </l7:Policy>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Utility: List Folders</l7:Name>
            <l7:Id>7215d076e3f7201974e2be3edf147215</l7:Id>
            <l7:Type>ENCAPSULATED_ASSERTION</l7:Type>
            <l7:TimeStamp>2022-04-29T11:42:05.100-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:EncapsulatedAssertion id="7215d076e3f7201974e2be3edf147215" version="0">
                    <l7:Name>Utility: List Folders</l7:Name>
                    <l7:Guid>fbb4b1d3-54a5-4ab4-95af-814267236d17</l7:Guid>
                    <l7:PolicyReference id="7215d076e3f7201974e2be3edf13f575" resourceUri="http://ns.l7tech.com/2010/04/gateway-management/policies"/>
                    <l7:EncapsulatedArguments>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>1</l7:Ordinal>
                            <l7:ArgumentName>refresh</l7:ArgumentName>
                            <l7:ArgumentType>string</l7:ArgumentType>
                            <l7:GuiLabel>Refresh Cache? (true|false) (optional): </l7:GuiLabel>
                            <l7:GuiPrompt>true</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>2</l7:Ordinal>
                            <l7:ArgumentName>cacheAge</l7:ArgumentName>
                            <l7:ArgumentType>string</l7:ArgumentType>
                            <l7:GuiLabel>Cache Age (optional): </l7:GuiLabel>
                            <l7:GuiPrompt>true</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                    </l7:EncapsulatedArguments>
                    <l7:EncapsulatedResults>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>error.msg</l7:ResultName>
                            <l7:ResultType>string</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>folders.sorted</l7:ResultName>
                            <l7:ResultType>message</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                    </l7:EncapsulatedResults>
                    <l7:Properties>
                        <l7:Property key="allowTracing">
                            <l7:StringValue>false</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="description">
                            <l7:StringValue>Assertion to call restman and generate a sorted list of folders on the Gateway</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="paletteFolder">
                            <l7:StringValue>internalAssertions</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="paletteIconResourceName">
                            <l7:StringValue>Refresh16.gif</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="passMetricsToParent">
                            <l7:StringValue>false</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="policyGuid">
                            <l7:StringValue>219cafb1-ca3d-40e9-8270-f7d95673c74b</l7:StringValue>
                        </l7:Property>
                    </l7:Properties>
                </l7:EncapsulatedAssertion>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Utility: List Policies</l7:Name>
            <l7:Id>7215d076e3f7201974e2be3edf155afc</l7:Id>
            <l7:Type>POLICY</l7:Type>
            <l7:TimeStamp>2022-04-29T11:42:05.108-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Policy guid="13743744-1348-481a-9c6b-f8ed3f6a89b6" id="7215d076e3f7201974e2be3edf155afc" version="0">
                    <l7:PolicyDetail folderId="c4706d99077459bed7ca5ef6c9e62ecb" guid="13743744-1348-481a-9c6b-f8ed3f6a89b6" id="7215d076e3f7201974e2be3edf155afc" version="0">
                        <l7:Name>Utility: List Policies</l7:Name>
                        <l7:PolicyType>Include</l7:PolicyType>
                        <l7:Properties>
                            <l7:Property key="revision">
                                <l7:LongValue>1</l7:LongValue>
                            </l7:Property>
                            <l7:Property key="soap">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                        </l7:Properties>
                    </l7:PolicyDetail>
                    <l7:Resources>
                        <l7:ResourceSet tag="policy">
                            <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Policy fragment for &amp;quot;Utility: List Policies&amp;quot; encapsulated assertion"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Call Restman and generate a sorted list of policies"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** - Assumes an admin role user has been authenticated"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** - Caches results for ${cacheAge} seconds (default=300). To refresh the cache set ${refresh}=true when calling"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** - Returns a text/xml message variable in ${policies.sorted}"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Set ${folderId} to isolate listing to a single folder, else list all policies"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Inputs:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - refresh (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - folderId (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - cacheAge (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Outputs:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - policies.sorted (message)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - error.msg (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v1.0.0 - Jay MacDonald - 20201107 - Initial Version"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:AuditDetailAssertion&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// FINE"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Detail stringValue="==&gt; Entering Utility Fragment: ${policy.name} (refresh=${refresh})"/&gt;
            &lt;L7p:Level stringValue="FINE"/&gt;
        &lt;/L7p:AuditDetailAssertion&gt;
        &lt;wsp:All wsp:Usage="Required"&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** ${policies.sorted} has the following schema:"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** "/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** &amp;lt;Policies source=&amp;quot;cache|system&amp;quot;&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   &amp;lt;Policy id=&amp;quot;string&amp;quot; folderId=&amp;quot;string&amp;quot;&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;Name&gt;string&amp;lt;/Name&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;GUID&gt;string&amp;lt;/GUID&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;Type&gt;string&amp;lt;/Type&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;FolderPath&gt;string&amp;lt;/FolderPath&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   &amp;lt;/Policy&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   ..."/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** &amp;lt;/Policies&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Description of ${policies.sorted}"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:All&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// true or false"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${cacheAge}"/&gt;
                &lt;L7p:Operator operatorNull="null"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item dataType="included"&gt;
                        &lt;L7p:Type variableDataType="int"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;L7p:item binary="included"&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Operator operator="GT"/&gt;
                        &lt;L7p:RightValue stringValue="0"/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="MzAw"/&gt;
                &lt;L7p:DataType variableDataType="int"/&gt;
                &lt;L7p:VariableToSet stringValue="cacheAge"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Ensure ${cacheAge} is set, default=300"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${folderId}"/&gt;
                &lt;L7p:Expression2 stringValue="0"/&gt;
                &lt;L7p:Negate booleanValue="true"/&gt;
                &lt;L7p:Operator operator="EMPTY"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Negated booleanValue="true"/&gt;
                        &lt;L7p:Operator operator="EMPTY"/&gt;
                        &lt;L7p:RightValue stringValue="0"/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// 0 means report all policies"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:Base64Expression stringValue="MA=="/&gt;
                &lt;L7p:VariableToSet stringValue="folderId"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Set default ${folderId}=0 (all)"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// true or false"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${refresh}"/&gt;
                &lt;L7p:Operator operatorNull="null"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item dataType="included"&gt;
                        &lt;L7p:Type variableDataType="string"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;L7p:item regex="included"&gt;
                        &lt;L7p:Pattern stringValue="^(true|false)$"/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="ZmFsc2U="/&gt;
                &lt;L7p:VariableToSet stringValue="refresh"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Ensure ${refresh} is set, default=false"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="cG9saWNpZXMuc29ydGVkLSR7Zm9sZGVySWR9"/&gt;
            &lt;L7p:VariableToSet stringValue="cacheKey"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${refresh}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="string"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:RightValue stringValue="true"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:CacheLookup&gt;
                    &lt;L7p:CacheEntryKey stringValue="${cacheKey}"/&gt;
                    &lt;L7p:CacheId stringValue="policyList"/&gt;
                    &lt;L7p:ContentTypeOverride stringValue=""/&gt;
                    &lt;L7p:MaxEntryAgeSeconds stringValue="${cacheAge}"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="policies.sorted"/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                &lt;/L7p:CacheLookup&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="Y2FjaGU="/&gt;
                    &lt;L7p:VariableToSet stringValue="source"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// FINE"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; Found policies.sorted in the cache"/&gt;
                    &lt;L7p:Level stringValue="FINE"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Look in cache unless asked to refresh cache"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:Encapsulated&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Want this for full folder paths when reporting"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="fbb4b1d3-54a5-4ab4-95af-814267236d17"/&gt;
                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: List Folders"/&gt;
                    &lt;L7p:Parameters mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="cacheAge"/&gt;
                            &lt;L7p:value stringValue="${cacheAge}"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="refresh"/&gt;
                            &lt;L7p:value stringValue="${refresh}"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Parameters&gt;
                &lt;/L7p:Encapsulated&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="cG9saWNpZXM="/&gt;
                    &lt;L7p:VariableToSet stringValue="resource"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${folderId}"/&gt;
                        &lt;L7p:Expression2 stringValue="0"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="0"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="JHtyZXNvdXJjZX0/cGFyZW50Rm9sZGVyLmlkPSR7Zm9sZGVySWR9"/&gt;
                        &lt;L7p:VariableToSet stringValue="resource"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Append parentFolder.id to ${resource} if set"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:Encapsulated&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// GET ${resource}"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="c8a5a0d5-1ae2-4144-b538-5c311efc1560"/&gt;
                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Call Restman"/&gt;
                    &lt;L7p:Parameters mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="element"/&gt;
                            &lt;L7p:value stringValue="Policy"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="message"/&gt;
                            &lt;L7p:value stringValue=""/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="method"/&gt;
                            &lt;L7p:value stringValue="GET"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="resource"/&gt;
                            &lt;L7p:value stringValue="${resource}"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Parameters&gt;
                &lt;/L7p:Encapsulated&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:VariablePrefix stringValue="policies"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:List/l7:Item/l7:Resource/l7:Policy"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:TrueAssertion/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Extract the list of policies, never fail"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxQb2xpY2llcz4="/&gt;
                    &lt;L7p:VariableToSet stringValue="policies.sorted"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:ForEachLoop L7p:Usage="Required"
                    loopVariable="policies.elements" variablePrefix="policy"&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="JHtwb2xpY3kuY3VycmVudH0="/&gt;
                        &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                        &lt;L7p:DataType variableDataType="message"/&gt;
                        &lt;L7p:VariableToSet stringValue="policy.xml"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:VariablePrefix stringValue="folderId"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="policy.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:Policy/l7:PolicyDetail/@folderId"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${folderId}"/&gt;
                            &lt;L7p:Operator operatorNull="null"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="int"/&gt;
                                &lt;/L7p:item&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:RightValue stringValue="0"/&gt;
                                &lt;/L7p:item&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:RightValue stringValue="${folderId.result}"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;wsp:All wsp:Usage="Required"&gt;
                            &lt;L7p:ResponseXpathAssertion&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get the policy's ID"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:VariablePrefix stringValue="id"/&gt;
                                &lt;L7p:XmlMsgSrc stringValue="policy.xml"/&gt;
                                &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/l7:Policy/l7:PolicyDetail/@id"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                &lt;/L7p:XpathExpression&gt;
                            &lt;/L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:ResponseXpathAssertion&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get the policy's GUID"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:VariablePrefix stringValue="guid"/&gt;
                                &lt;L7p:XmlMsgSrc stringValue="policy.xml"/&gt;
                                &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/l7:Policy/l7:PolicyDetail/@guid"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                &lt;/L7p:XpathExpression&gt;
                            &lt;/L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:ResponseXpathAssertion&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get the policy's name"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:VariablePrefix stringValue="name"/&gt;
                                &lt;L7p:XmlMsgSrc stringValue="policy.xml"/&gt;
                                &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/l7:Policy/l7:PolicyDetail/l7:Name"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                &lt;/L7p:XpathExpression&gt;
                            &lt;/L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:ResponseXpathAssertion&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get the policy's type"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:VariablePrefix stringValue="policyType"/&gt;
                                &lt;L7p:XmlMsgSrc stringValue="policy.xml"/&gt;
                                &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/l7:Policy/l7:PolicyDetail/l7:PolicyType"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                &lt;/L7p:XpathExpression&gt;
                            &lt;/L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:ResponseXpathAssertion&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get the folder path for the policy"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:VariablePrefix stringValue="folderPath"/&gt;
                                &lt;L7p:XmlMsgSrc stringValue="folders.sorted"/&gt;
                                &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/Folders/Folder[@id=$folderId.result]/FolderPath"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                &lt;/L7p:XpathExpression&gt;
                            &lt;/L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="JHtwb2xpY2llcy5zb3J0ZWR9PFBvbGljeSBpZD0iJHtpZC5yZXN1bHR9IiBmb2xkZXJJZD0iJHtmb2xkZXJJZC5yZXN1bHR9Ij48TmFtZT48IVtDREFUQVske25hbWUucmVzdWx0fV1dPjwvTmFtZT48R1VJRD4ke2d1aWQucmVzdWx0fTwvR1VJRD48VHlwZT4ke3BvbGljeVR5cGUucmVzdWx0fTwvVHlwZT48Rm9sZGVyUGF0aD48IVtDREFUQVske2ZvbGRlclBhdGgucmVzdWx0fV1dPjwvRm9sZGVyUGF0aD48L1BvbGljeT4="/&gt;
                                &lt;L7p:VariableToSet stringValue="policies.sorted"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Process it"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:All&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Only process if ${folderId} = 0 or matches ${folderId.result}"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:OneOrMore&gt;
                &lt;/L7p:ForEachLoop&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtwb2xpY2llcy5zb3J0ZWR9PC9Qb2xpY2llcz4="/&gt;
                    &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                    &lt;L7p:DataType variableDataType="message"/&gt;
                    &lt;L7p:VariableToSet stringValue="policies.sorted"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:XslTransformation&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Sort the folders by display path"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Direction intValue="-1"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="policies.sorted"/&gt;
                    &lt;L7p:ResourceInfo staticResourceInfo="included"&gt;
                        &lt;L7p:Document stringValueReference="inline"&gt;&lt;![CDATA[&lt;xsl:stylesheet version="1.0" xmlns:l7="http://ns.l7tech.com/2010/04/gateway-management" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;

&lt;xsl:template match="/Policies"&gt;
    &lt;xsl:copy&gt;
        &lt;xsl:for-each select="Policy"&gt;
            &lt;xsl:sort select="./FolderPath"/&gt;
            &lt;xsl:sort select="./Name"/&gt;
            &lt;xsl:copy-of select="."/&gt;
        &lt;/xsl:for-each&gt;
    &lt;/xsl:copy&gt;
&lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;]]&gt;&lt;/L7p:Document&gt;
                    &lt;/L7p:ResourceInfo&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                    &lt;L7p:TransformName stringValue=""/&gt;
                    &lt;L7p:XsltVersion stringValue="1.0"/&gt;
                &lt;/L7p:XslTransformation&gt;
                &lt;L7p:CacheStorage&gt;
                    &lt;L7p:CacheEntryKey stringValue="${cacheKey}"/&gt;
                    &lt;L7p:CacheId stringValue="policyList"/&gt;
                    &lt;L7p:MaxEntries stringValue="20"/&gt;
                    &lt;L7p:MaxEntryAgeSeconds stringValue="${cacheAge}"/&gt;
                    &lt;L7p:MaxEntrySizeBytes stringValue="200000"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="policies.sorted"/&gt;
                    &lt;L7p:StoreSoapFaults booleanValue="true"/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                &lt;/L7p:CacheStorage&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="c3lzdGVt"/&gt;
                    &lt;L7p:VariableToSet stringValue="source"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// FINE"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; Loaded policies.sorted from system and stored to cache"/&gt;
                    &lt;L7p:Level stringValue="FINE"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Retrieve new list and cache"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="RXJyb3Igd2hlbiBsaXN0aW5nIHBvbGljaWVz"/&gt;
                    &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// WARNING"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; Error listing policies in ${policy.name}"/&gt;
                    &lt;L7p:Level stringValue="WARNING"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:FalseAssertion/&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Failure - set ${error.msg}"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Caching logic"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:Regex&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Add source attribute to /Policies element"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:AutoTarget booleanValue="false"/&gt;
            &lt;L7p:OtherTargetMessageVariable stringValue="policies.sorted"/&gt;
            &lt;L7p:Regex stringValue="&amp;lt;Policies&gt;"/&gt;
            &lt;L7p:Replace booleanValue="true"/&gt;
            &lt;L7p:Replacement stringValue="&amp;lt;Policies source=&amp;quot;${source}&amp;quot;&gt;"/&gt;
            &lt;L7p:Target target="OTHER"/&gt;
        &lt;/L7p:Regex&gt;
        &lt;L7p:AuditDetailAssertion&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// FINE"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Detail stringValue="==&gt; Leaving Utility Fragment: ${policy.name}"/&gt;
            &lt;L7p:Level stringValue="FINE"/&gt;
        &lt;/L7p:AuditDetailAssertion&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
                        </l7:ResourceSet>
                    </l7:Resources>
                </l7:Policy>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Utility: List Policies</l7:Name>
            <l7:Id>7215d076e3f7201974e2be3edf155c14</l7:Id>
            <l7:Type>ENCAPSULATED_ASSERTION</l7:Type>
            <l7:TimeStamp>2022-04-29T11:42:05.108-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:EncapsulatedAssertion id="7215d076e3f7201974e2be3edf155c14" version="0">
                    <l7:Name>Utility: List Policies</l7:Name>
                    <l7:Guid>da84740e-cee3-47d8-b6f7-0a9eb1fd9638</l7:Guid>
                    <l7:PolicyReference id="7215d076e3f7201974e2be3edf155afc" resourceUri="http://ns.l7tech.com/2010/04/gateway-management/policies"/>
                    <l7:EncapsulatedArguments>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>1</l7:Ordinal>
                            <l7:ArgumentName>folderId</l7:ArgumentName>
                            <l7:ArgumentType>string</l7:ArgumentType>
                            <l7:GuiLabel>Parent Folder ID (optional):</l7:GuiLabel>
                            <l7:GuiPrompt>true</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>2</l7:Ordinal>
                            <l7:ArgumentName>refresh</l7:ArgumentName>
                            <l7:ArgumentType>string</l7:ArgumentType>
                            <l7:GuiLabel>Refresh Cache? (true|false) (optional): </l7:GuiLabel>
                            <l7:GuiPrompt>true</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>3</l7:Ordinal>
                            <l7:ArgumentName>cacheAge</l7:ArgumentName>
                            <l7:ArgumentType>string</l7:ArgumentType>
                            <l7:GuiLabel>Cache Age (optional): </l7:GuiLabel>
                            <l7:GuiPrompt>true</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                    </l7:EncapsulatedArguments>
                    <l7:EncapsulatedResults>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>error.msg</l7:ResultName>
                            <l7:ResultType>string</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>policies.sorted</l7:ResultName>
                            <l7:ResultType>message</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                    </l7:EncapsulatedResults>
                    <l7:Properties>
                        <l7:Property key="allowTracing">
                            <l7:StringValue>false</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="description">
                            <l7:StringValue>Assertion to call restman and generate a sorted list of policies on the Gateway</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="paletteFolder">
                            <l7:StringValue>internalAssertions</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="paletteIconResourceName">
                            <l7:StringValue>Refresh16.gif</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="passMetricsToParent">
                            <l7:StringValue>false</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="policyGuid">
                            <l7:StringValue>13743744-1348-481a-9c6b-f8ed3f6a89b6</l7:StringValue>
                        </l7:Property>
                    </l7:Properties>
                </l7:EncapsulatedAssertion>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Utility: List Services</l7:Name>
            <l7:Id>7215d076e3f7201974e2be3edf2288aa</l7:Id>
            <l7:Type>POLICY</l7:Type>
            <l7:TimeStamp>2022-04-29T11:42:05.120-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Policy guid="485cd1ad-9ef9-4705-9424-d463f2bb39d4" id="7215d076e3f7201974e2be3edf2288aa" version="0">
                    <l7:PolicyDetail folderId="c4706d99077459bed7ca5ef6c9e62ecb" guid="485cd1ad-9ef9-4705-9424-d463f2bb39d4" id="7215d076e3f7201974e2be3edf2288aa" version="0">
                        <l7:Name>Utility: List Services</l7:Name>
                        <l7:PolicyType>Include</l7:PolicyType>
                        <l7:Properties>
                            <l7:Property key="revision">
                                <l7:LongValue>1</l7:LongValue>
                            </l7:Property>
                            <l7:Property key="soap">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                        </l7:Properties>
                    </l7:PolicyDetail>
                    <l7:Resources>
                        <l7:ResourceSet tag="policy">
                            <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Policy fragment for &amp;quot;Utility: List Services&amp;quot; encapsulated assertion"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Call Restman and generate a sorted list of services"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** - Assumes an admin role user has been authenticated"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** - Caches results for ${cacheAge} seconds (default=300). To refresh the cache set ${refresh}=true when calling"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** - Returns a text/xml message variable in ${services.sorted}"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Set ${folderId} to isolate listing to a single folder, else list all services"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Inputs:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - folderId (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - refresh (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - cacheAge (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Outputs:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - services.sorted (message)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - error.msg (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v1.0.0 - Jay MacDonald - 20201107 - Initial Version"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:AuditDetailAssertion&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// FINE"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Detail stringValue="==&gt; Entering Utility Fragment: ${policy.name} (refresh=${refresh})"/&gt;
            &lt;L7p:Level stringValue="FINE"/&gt;
        &lt;/L7p:AuditDetailAssertion&gt;
        &lt;wsp:All wsp:Usage="Required"&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** ${services.sorted} has the following schema:"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** "/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** &amp;lt;Services source=&amp;quot;cache|system&amp;quot;&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   &amp;lt;Service id=&amp;quot;string&amp;quot; folderId=&amp;quot;string&amp;quot;&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;Name&gt;string&amp;lt;/Name&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;ServiceState&gt;string&amp;lt;/ServiceState&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;ServicePath&gt;string&amp;lt;/ServicePath&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;FolderPath&gt;string&amp;lt;/FolderPath&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;FullPath&gt;string&amp;lt;/FullPath&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   &amp;lt;/Service&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   ..."/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** &amp;lt;/Services&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Description of ${services.sorted}"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:All&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// true or false"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${cacheAge}"/&gt;
                &lt;L7p:Operator operatorNull="null"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item dataType="included"&gt;
                        &lt;L7p:Type variableDataType="int"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;L7p:item binary="included"&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Operator operator="GT"/&gt;
                        &lt;L7p:RightValue stringValue="0"/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="MzAw"/&gt;
                &lt;L7p:DataType variableDataType="int"/&gt;
                &lt;L7p:VariableToSet stringValue="cacheAge"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Ensure ${cacheAge} is set, default=300"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${folderId}"/&gt;
                &lt;L7p:Expression2 stringValue="0"/&gt;
                &lt;L7p:Negate booleanValue="true"/&gt;
                &lt;L7p:Operator operator="EMPTY"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Negated booleanValue="true"/&gt;
                        &lt;L7p:Operator operator="EMPTY"/&gt;
                        &lt;L7p:RightValue stringValue="0"/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// 0 means report all services"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:Base64Expression stringValue="MA=="/&gt;
                &lt;L7p:VariableToSet stringValue="folderId"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Set default ${folderId}=0 (all)"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// true or false"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${refresh}"/&gt;
                &lt;L7p:Operator operatorNull="null"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item dataType="included"&gt;
                        &lt;L7p:Type variableDataType="string"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;L7p:item regex="included"&gt;
                        &lt;L7p:Pattern stringValue="^(true|false)$"/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="ZmFsc2U="/&gt;
                &lt;L7p:VariableToSet stringValue="refresh"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Ensure ${refresh} is set, default=false"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="c2VydmljZXMuc29ydGVkLSR7Zm9sZGVySWR9"/&gt;
            &lt;L7p:VariableToSet stringValue="cacheKey"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${refresh}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="string"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:RightValue stringValue="true"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:CacheLookup&gt;
                    &lt;L7p:CacheEntryKey stringValue="${cacheKey}"/&gt;
                    &lt;L7p:CacheId stringValue="serviceList"/&gt;
                    &lt;L7p:ContentTypeOverride stringValue=""/&gt;
                    &lt;L7p:MaxEntryAgeSeconds stringValue="${cacheAge}"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="services.sorted"/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                &lt;/L7p:CacheLookup&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="Y2FjaGU="/&gt;
                    &lt;L7p:VariableToSet stringValue="source"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// FINE"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; Found services.sorted in the cache"/&gt;
                    &lt;L7p:Level stringValue="FINE"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Look in cache unless asked to refresh cache"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:Encapsulated&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Want this for full folder paths when reporting"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="fbb4b1d3-54a5-4ab4-95af-814267236d17"/&gt;
                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: List Folders"/&gt;
                    &lt;L7p:Parameters mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="cacheAge"/&gt;
                            &lt;L7p:value stringValue="${cacheAge}"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="refresh"/&gt;
                            &lt;L7p:value stringValue="${refresh}"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Parameters&gt;
                &lt;/L7p:Encapsulated&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="c2VydmljZXM="/&gt;
                    &lt;L7p:VariableToSet stringValue="resource"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${folderId}"/&gt;
                        &lt;L7p:Expression2 stringValue="0"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="0"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="JHtyZXNvdXJjZX0/cGFyZW50Rm9sZGVyLmlkPSR7Zm9sZGVySWR9"/&gt;
                        &lt;L7p:VariableToSet stringValue="resource"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Append parentFolder.id to ${resource} if set"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:Encapsulated&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// GET ${resource}"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="c8a5a0d5-1ae2-4144-b538-5c311efc1560"/&gt;
                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Call Restman"/&gt;
                    &lt;L7p:Parameters mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="element"/&gt;
                            &lt;L7p:value stringValue="Service"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="message"/&gt;
                            &lt;L7p:value stringValue=""/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="method"/&gt;
                            &lt;L7p:value stringValue="GET"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="resource"/&gt;
                            &lt;L7p:value stringValue="${resource}"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Parameters&gt;
                &lt;/L7p:Encapsulated&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:VariablePrefix stringValue="services"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:List/l7:Item/l7:Resource/l7:Service"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:TrueAssertion/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Extract the list of services, never fail"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz48U2VydmljZXM+"/&gt;
                    &lt;L7p:VariableToSet stringValue="services.sorted"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:ForEachLoop L7p:Usage="Required"
                    loopVariable="services.elements" variablePrefix="service"&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="JHtzZXJ2aWNlLmN1cnJlbnR9"/&gt;
                        &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                        &lt;L7p:DataType variableDataType="message"/&gt;
                        &lt;L7p:VariableToSet stringValue="service.xml"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:VariablePrefix stringValue="folderId"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="service.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:Service/l7:ServiceDetail/@folderId"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${folderId}"/&gt;
                            &lt;L7p:Operator operatorNull="null"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="int"/&gt;
                                &lt;/L7p:item&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:RightValue stringValue="0"/&gt;
                                &lt;/L7p:item&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:RightValue stringValue="${folderId.result}"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;wsp:All wsp:Usage="Required"&gt;
                            &lt;L7p:ResponseXpathAssertion&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get the service's ID"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:VariablePrefix stringValue="id"/&gt;
                                &lt;L7p:XmlMsgSrc stringValue="service.xml"/&gt;
                                &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/l7:Service/l7:ServiceDetail/@id"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                &lt;/L7p:XpathExpression&gt;
                            &lt;/L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:ResponseXpathAssertion&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get the service's name"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:VariablePrefix stringValue="name"/&gt;
                                &lt;L7p:XmlMsgSrc stringValue="service.xml"/&gt;
                                &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/l7:Service/l7:ServiceDetail/l7:Name"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                &lt;/L7p:XpathExpression&gt;
                            &lt;/L7p:ResponseXpathAssertion&gt;
                            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:VariablePrefix stringValue=""/&gt;
                                    &lt;L7p:XmlMsgSrc stringValue="service.xml"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/l7:Service/l7:ServiceDetail[l7:Enabled='true']"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="RW5hYmxlZA=="/&gt;
                                    &lt;L7p:VariableToSet stringValue="serviceState"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Test if true"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                &lt;/wsp:All&gt;
                                &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="RGlzYWJsZWQ="/&gt;
                                    &lt;L7p:VariableToSet stringValue="serviceState"/&gt;
                                &lt;/L7p:SetVariable&gt;
                                &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Set ${serviceState} from value of Enabled element"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt;
                            &lt;/wsp:OneOrMore&gt;
                            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get the service's path"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:VariablePrefix stringValue="servicePath"/&gt;
                                    &lt;L7p:XmlMsgSrc stringValue="service.xml"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/l7:Service/l7:ServiceDetail/l7:ServiceMappings/l7:HttpMapping/l7:UrlPattern"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="JHtzZXJ2aWNlUGF0aC5yZXN1bHR9"/&gt;
                                    &lt;L7p:VariableToSet stringValue="servicePath"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// UrlPattern is defined"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                &lt;/wsp:All&gt;
                                &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get the service's path"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:VariablePrefix stringValue=""/&gt;
                                    &lt;L7p:XmlMsgSrc stringValue="service.xml"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/l7:Service/l7:ServiceDetail/l7:ServiceMappings/l7:HttpMapping"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="L3NzZy9zb2Fw"/&gt;
                                    &lt;L7p:VariableToSet stringValue="servicePath"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// No UrlPattern, check that HttpMapping is set and set to /ssg/soap"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                &lt;/wsp:All&gt;
                                &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get path. If no UrlPattern is defined then it is at /ssg/soap"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt;
                            &lt;/wsp:OneOrMore&gt;
                            &lt;L7p:ResponseXpathAssertion&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get the folder path for the policy"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:VariablePrefix stringValue="folderPath"/&gt;
                                &lt;L7p:XmlMsgSrc stringValue="folders.sorted"/&gt;
                                &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/Folders/Folder[@id=$folderId.result]/FolderPath"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                &lt;/L7p:XpathExpression&gt;
                            &lt;/L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="JHtzZXJ2aWNlcy5zb3J0ZWR9PFNlcnZpY2UgaWQ9IiR7aWQucmVzdWx0fSIgZm9sZGVySWQ9IiR7Zm9sZGVySWQucmVzdWx0fSI+PE5hbWU+PCFbQ0RBVEFbJHtuYW1lLnJlc3VsdH1dXT48L05hbWU+PFNlcnZpY2VTdGF0ZT4ke3NlcnZpY2VTdGF0ZX08L1NlcnZpY2VTdGF0ZT48U2VydmljZVBhdGg+JHtzZXJ2aWNlUGF0aC5yZXN1bHR9PC9TZXJ2aWNlUGF0aD48Rm9sZGVyUGF0aD48IVtDREFUQVske2ZvbGRlclBhdGgucmVzdWx0fV1dPjwvRm9sZGVyUGF0aD48RnVsbFBhdGg+PCFbQ0RBVEFbJHtmb2xkZXJQYXRoLnJlc3VsdH0ke25hbWUucmVzdWx0fV1dPjwvRnVsbFBhdGg+PC9TZXJ2aWNlPg=="/&gt;
                                &lt;L7p:VariableToSet stringValue="services.sorted"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Process it"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:All&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Only process if ${folderId} = 0 or matches ${folderId.result}"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:OneOrMore&gt;
                &lt;/L7p:ForEachLoop&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtzZXJ2aWNlcy5zb3J0ZWR9PC9TZXJ2aWNlcz4="/&gt;
                    &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                    &lt;L7p:DataType variableDataType="message"/&gt;
                    &lt;L7p:VariableToSet stringValue="services.sorted"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:XslTransformation&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Sort the folders by display path"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Direction intValue="-1"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="services.sorted"/&gt;
                    &lt;L7p:ResourceInfo staticResourceInfo="included"&gt;
                        &lt;L7p:Document stringValueReference="inline"&gt;&lt;![CDATA[&lt;xsl:stylesheet version="1.0" xmlns:l7="http://ns.l7tech.com/2010/04/gateway-management" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;

&lt;xsl:template match="/Services"&gt;
    &lt;xsl:copy&gt;
        &lt;xsl:for-each select="Service"&gt;
            &lt;xsl:sort select="./FolderPath"/&gt;
            &lt;xsl:sort select="./Name"/&gt;
            &lt;xsl:copy-of select="."/&gt;
        &lt;/xsl:for-each&gt;
    &lt;/xsl:copy&gt;
&lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;]]&gt;&lt;/L7p:Document&gt;
                    &lt;/L7p:ResourceInfo&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                    &lt;L7p:TransformName stringValue=""/&gt;
                    &lt;L7p:XsltVersion stringValue="1.0"/&gt;
                &lt;/L7p:XslTransformation&gt;
                &lt;L7p:CacheStorage&gt;
                    &lt;L7p:CacheEntryKey stringValue="${cacheKey}"/&gt;
                    &lt;L7p:CacheId stringValue="serviceList"/&gt;
                    &lt;L7p:MaxEntryAgeSeconds stringValue="${cacheAge}"/&gt;
                    &lt;L7p:MaxEntrySizeBytes stringValue="100000"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="services.sorted"/&gt;
                    &lt;L7p:StoreSoapFaults booleanValue="true"/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                &lt;/L7p:CacheStorage&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="c3lzdGVt"/&gt;
                    &lt;L7p:VariableToSet stringValue="source"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// FINE"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; Loaded services.sorted from system and stored to cache"/&gt;
                    &lt;L7p:Level stringValue="FINE"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Retrieve new list and cache"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="RXJyb3Igd2hlbiBsaXN0aW5nIHNlcnZpY2Vz"/&gt;
                    &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// WARNING"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; Error listing services in ${policy.name}"/&gt;
                    &lt;L7p:Level stringValue="WARNING"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:FalseAssertion/&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Failure - set ${error.msg}"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Caching logic"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:Regex&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Add source attribute to /Services element"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:AutoTarget booleanValue="false"/&gt;
            &lt;L7p:OtherTargetMessageVariable stringValue="services.sorted"/&gt;
            &lt;L7p:Regex stringValue="&amp;lt;Services&gt;"/&gt;
            &lt;L7p:Replace booleanValue="true"/&gt;
            &lt;L7p:Replacement stringValue="&amp;lt;Services source=&amp;quot;${source}&amp;quot;&gt;"/&gt;
            &lt;L7p:Target target="OTHER"/&gt;
        &lt;/L7p:Regex&gt;
        &lt;L7p:AuditDetailAssertion&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// FINE"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Detail stringValue="==&gt; Leaving Utility Fragment: ${policy.name}"/&gt;
            &lt;L7p:Level stringValue="FINE"/&gt;
        &lt;/L7p:AuditDetailAssertion&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
                        </l7:ResourceSet>
                    </l7:Resources>
                </l7:Policy>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Utility: List Services</l7:Name>
            <l7:Id>7215d076e3f7201974e2be3edf22c2f5</l7:Id>
            <l7:Type>ENCAPSULATED_ASSERTION</l7:Type>
            <l7:TimeStamp>2022-04-29T11:42:05.120-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:EncapsulatedAssertion id="7215d076e3f7201974e2be3edf22c2f5" version="0">
                    <l7:Name>Utility: List Services</l7:Name>
                    <l7:Guid>6fcf3e6c-eac9-4b2b-ac49-aa5fb2ff801f</l7:Guid>
                    <l7:PolicyReference id="7215d076e3f7201974e2be3edf2288aa" resourceUri="http://ns.l7tech.com/2010/04/gateway-management/policies"/>
                    <l7:EncapsulatedArguments>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>1</l7:Ordinal>
                            <l7:ArgumentName>folderId</l7:ArgumentName>
                            <l7:ArgumentType>string</l7:ArgumentType>
                            <l7:GuiLabel>Parent Folder ID (optional):</l7:GuiLabel>
                            <l7:GuiPrompt>true</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>2</l7:Ordinal>
                            <l7:ArgumentName>refresh</l7:ArgumentName>
                            <l7:ArgumentType>string</l7:ArgumentType>
                            <l7:GuiLabel>Refresh Cache? (true|false) (optional): </l7:GuiLabel>
                            <l7:GuiPrompt>true</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>3</l7:Ordinal>
                            <l7:ArgumentName>cacheAge</l7:ArgumentName>
                            <l7:ArgumentType>string</l7:ArgumentType>
                            <l7:GuiLabel>Cache Age (optional): </l7:GuiLabel>
                            <l7:GuiPrompt>true</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                    </l7:EncapsulatedArguments>
                    <l7:EncapsulatedResults>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>error.msg</l7:ResultName>
                            <l7:ResultType>string</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>services.sorted</l7:ResultName>
                            <l7:ResultType>message</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                    </l7:EncapsulatedResults>
                    <l7:Properties>
                        <l7:Property key="allowTracing">
                            <l7:StringValue>false</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="description">
                            <l7:StringValue>Assertion to call restman and generate a sorted list of services on the Gateway</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="paletteFolder">
                            <l7:StringValue>internalAssertions</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="paletteIconResourceName">
                            <l7:StringValue>Refresh16.gif</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="passMetricsToParent">
                            <l7:StringValue>false</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="policyGuid">
                            <l7:StringValue>485cd1ad-9ef9-4705-9424-d463f2bb39d4</l7:StringValue>
                        </l7:Property>
                    </l7:Properties>
                </l7:EncapsulatedAssertion>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Gateway Management Utilities Cacher</l7:Name>
            <l7:Id>6f93d02a97830d62c2715d6d3a003232</l7:Id>
            <l7:Type>POLICY</l7:Type>
            <l7:TimeStamp>2022-04-29T11:42:05.122-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Policy guid="6cfa0630-4eb2-4d25-a020-b9f751744783" id="6f93d02a97830d62c2715d6d3a003232" version="8">
                    <l7:PolicyDetail folderId="c4706d99077459bed7ca5ef6c9e62ecb" guid="6cfa0630-4eb2-4d25-a020-b9f751744783" id="6f93d02a97830d62c2715d6d3a003232" version="8">
                        <l7:Name>Gateway Management Utilities Cacher</l7:Name>
                        <l7:PolicyType>Service Operation</l7:PolicyType>
                        <l7:Properties>
                            <l7:Property key="revision">
                                <l7:LongValue>9</l7:LongValue>
                            </l7:Property>
                            <l7:Property key="soap">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                            <l7:Property key="subtag">
                                <l7:StringValue>run</l7:StringValue>
                            </l7:Property>
                            <l7:Property key="tag">
                                <l7:StringValue>com.l7tech.objectmodel.polback.BackgroundTask</l7:StringValue>
                            </l7:Property>
                        </l7:Properties>
                    </l7:PolicyDetail>
                    <l7:Resources>
                        <l7:ResourceSet tag="policy">
                            <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**************************************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Scheduled service to periodically load the three caches that make initial loading of the Dependency Analyzer"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   very slow."/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** To enable:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - Select Tasks -&gt; Global Settings -&gt; Manage Scheduled Tasks"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - Click Add button"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - Set 'Job Name' to &amp;quot;Update Gateway Management Utilities Cache&amp;quot;"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - Set 'Gateway Node' to &amp;quot;All Nodes&amp;quot;"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - Set 'Policy' to this policy (Gateway Management Utilities Cacher)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - Set 'Execution Time' to &amp;quot;Recurring&amp;quot; and &amp;quot;Every 2 hours&amp;quot;"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - Enable 'Execute policy with user' and set it to an administrative user"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - Click OK"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v1.0.0 - Jay MacDonald - 20220525 - Initial Version"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**************************************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:AuditDetailAssertion&gt;
            &lt;L7p:CustomLoggerSuffix stringValue="GatewayDependencyAnalyzer"/&gt;
            &lt;L7p:Detail stringValue="=&gt; Updating Gateway Dependency Analyzer caches"/&gt;
            &lt;L7p:LoggingOnly booleanValue="true"/&gt;
        &lt;/L7p:AuditDetailAssertion&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Set to a value 60 seconds longer than ${cacheAge} in the Dependency Analyzer"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Base64Expression stringValue="NzI2MA=="/&gt;
            &lt;L7p:DataType variableDataType="int"/&gt;
            &lt;L7p:VariableToSet stringValue="cacheAge"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:Encapsulated&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Retrieve all of the policy XML for searching references"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="420909da-0e72-4996-a6ed-cf3c21b8bc59"/&gt;
            &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Get All Policy XML"/&gt;
            &lt;L7p:Parameters mapValue="included"&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="cacheAge"/&gt;
                    &lt;L7p:value stringValue="${cacheAge}"/&gt;
                &lt;/L7p:entry&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="refresh"/&gt;
                    &lt;L7p:value stringValue="true"/&gt;
                &lt;/L7p:entry&gt;
            &lt;/L7p:Parameters&gt;
        &lt;/L7p:Encapsulated&gt;
        &lt;L7p:Encapsulated&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Need this to get folderpath, etc"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="da84740e-cee3-47d8-b6f7-0a9eb1fd9638"/&gt;
            &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: List Policies"/&gt;
            &lt;L7p:Parameters mapValue="included"&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="cacheAge"/&gt;
                    &lt;L7p:value stringValue="${cacheAge}"/&gt;
                &lt;/L7p:entry&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="folderId"/&gt;
                    &lt;L7p:value stringValue=""/&gt;
                &lt;/L7p:entry&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="policyList.refresh"/&gt;
                    &lt;L7p:value stringValue="${refresh}"/&gt;
                &lt;/L7p:entry&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="refresh"/&gt;
                    &lt;L7p:value stringValue="true"/&gt;
                &lt;/L7p:entry&gt;
            &lt;/L7p:Parameters&gt;
        &lt;/L7p:Encapsulated&gt;
        &lt;L7p:Encapsulated&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Need this to get folderpath, etc"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="6fcf3e6c-eac9-4b2b-ac49-aa5fb2ff801f"/&gt;
            &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: List Services"/&gt;
            &lt;L7p:Parameters mapValue="included"&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="cacheAge"/&gt;
                    &lt;L7p:value stringValue="${cacheAge}"/&gt;
                &lt;/L7p:entry&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="folderId"/&gt;
                    &lt;L7p:value stringValue=""/&gt;
                &lt;/L7p:entry&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="refresh"/&gt;
                    &lt;L7p:value stringValue="true"/&gt;
                &lt;/L7p:entry&gt;
            &lt;/L7p:Parameters&gt;
        &lt;/L7p:Encapsulated&gt;
        &lt;L7p:AuditDetailAssertion&gt;
            &lt;L7p:CustomLoggerSuffix stringValue="GatewayDependencyAnalyzer"/&gt;
            &lt;L7p:Detail stringValue="=&gt; Gateway Dependency Analyzer caches updated"/&gt;
            &lt;L7p:LoggingOnly booleanValue="true"/&gt;
        &lt;/L7p:AuditDetailAssertion&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
                        </l7:ResourceSet>
                    </l7:Resources>
                </l7:Policy>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Utility: Get Policy</l7:Name>
            <l7:Id>7215d076e3f7201974e2be3edf231684</l7:Id>
            <l7:Type>POLICY</l7:Type>
            <l7:TimeStamp>2022-04-29T11:42:05.127-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Policy guid="15f82eda-b44f-4688-b34f-180aaa5d2d26" id="7215d076e3f7201974e2be3edf231684" version="0">
                    <l7:PolicyDetail folderId="c4706d99077459bed7ca5ef6c9e62ecb" guid="15f82eda-b44f-4688-b34f-180aaa5d2d26" id="7215d076e3f7201974e2be3edf231684" version="0">
                        <l7:Name>Utility: Get Policy</l7:Name>
                        <l7:PolicyType>Include</l7:PolicyType>
                        <l7:Properties>
                            <l7:Property key="revision">
                                <l7:LongValue>1</l7:LongValue>
                            </l7:Property>
                            <l7:Property key="soap">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                        </l7:Properties>
                    </l7:PolicyDetail>
                    <l7:Resources>
                        <l7:ResourceSet tag="policy">
                            <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Policy fragment for &amp;quot;Utility: Get Policy&amp;quot; encapsulated assertion"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Call Restman to retrieve a policy definition"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** - Assumes an admin role user has been authenticated"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** - Caches results for ${cacheAge} seconds (default=300). To refresh the cache set ${refresh}=true when calling"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** - Returns a text/xml message variable in ${policy.definition}"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Inputs:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - policyId (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - refresh (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - cacheAge (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Outputs:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - policy.definition (message)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - policy.source (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - error.msg (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v1.0.0 - Jay MacDonald - 20201107 - Initial Version"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:AuditDetailAssertion&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// FINE"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Detail stringValue="==&gt; Entering Utility Fragment: ${policy.name} (refresh=${refresh})"/&gt;
            &lt;L7p:Level stringValue="FINE"/&gt;
        &lt;/L7p:AuditDetailAssertion&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${policyId}"/&gt;
                &lt;L7p:Operator operatorNull="null"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item dataType="included"&gt;
                        &lt;L7p:Type variableDataType="string"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;L7p:item binary="included"&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Negated booleanValue="true"/&gt;
                        &lt;L7p:Operator operator="EMPTY"/&gt;
                        &lt;L7p:RightValue stringValue="0"/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="cG9saWN5SWQgd2FzIG5vdCBzZXQ="/&gt;
                    &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// WARNING"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; policyId was not set before calling ${policy.name}"/&gt;
                    &lt;L7p:Level stringValue="WARNING"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:FalseAssertion/&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Failure - set ${error.msg}"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Confirm that ${policyId} is set, else fail with message set"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// true or false"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${cacheAge}"/&gt;
                &lt;L7p:Operator operatorNull="null"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item dataType="included"&gt;
                        &lt;L7p:Type variableDataType="int"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;L7p:item binary="included"&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Operator operator="GT"/&gt;
                        &lt;L7p:RightValue stringValue="0"/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="MzAw"/&gt;
                &lt;L7p:DataType variableDataType="int"/&gt;
                &lt;L7p:VariableToSet stringValue="cacheAge"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Ensure ${cacheAge} is set, default=300"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// true or false"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${refresh}"/&gt;
                &lt;L7p:Operator operatorNull="null"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item dataType="included"&gt;
                        &lt;L7p:Type variableDataType="string"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;L7p:item regex="included"&gt;
                        &lt;L7p:Pattern stringValue="^(true|false)$"/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="ZmFsc2U="/&gt;
                &lt;L7p:VariableToSet stringValue="refresh"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Ensure ${refresh} is set, default=false"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="cG9saWN5LSR7cG9saWN5SWR9"/&gt;
            &lt;L7p:VariableToSet stringValue="policyDefinition.cacheKey"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:AuditDetailAssertion&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// FINE"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Detail stringValue="==&gt; Retrieving policy for policyId=${policyId}"/&gt;
            &lt;L7p:Level stringValue="FINE"/&gt;
        &lt;/L7p:AuditDetailAssertion&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${refresh}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="string"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:RightValue stringValue="true"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:CacheLookup&gt;
                    &lt;L7p:CacheEntryKey stringValue="${policyDefinition.cacheKey}"/&gt;
                    &lt;L7p:CacheId stringValue="policyDefinition"/&gt;
                    &lt;L7p:ContentTypeOverride stringValue=""/&gt;
                    &lt;L7p:MaxEntryAgeSeconds stringValue="${cacheAge}"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="policy.definition"/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                &lt;/L7p:CacheLookup&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="Y2FjaGU="/&gt;
                    &lt;L7p:VariableToSet stringValue="policy.source"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Found in cache"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:Encapsulated&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// GET policies/${policyId}"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="c8a5a0d5-1ae2-4144-b538-5c311efc1560"/&gt;
                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Call Restman"/&gt;
                    &lt;L7p:Parameters mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="element"/&gt;
                            &lt;L7p:value stringValue=""/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="message"/&gt;
                            &lt;L7p:value stringValue=""/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="method"/&gt;
                            &lt;L7p:value stringValue="GET"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="resource"/&gt;
                            &lt;L7p:value stringValue="policies/${policyId}"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Parameters&gt;
                &lt;/L7p:Encapsulated&gt;
                &lt;L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:VariablePrefix stringValue="policy"/&gt;
                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                        &lt;L7p:Expression stringValue="/l7:Item/l7:Resource/l7:Policy"/&gt;
                        &lt;L7p:Namespaces mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="l7"/&gt;
                                &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Namespaces&gt;
                        &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                    &lt;/L7p:XpathExpression&gt;
                &lt;/L7p:ResponseXpathAssertion&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtwb2xpY3kuZWxlbWVudH0="/&gt;
                    &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                    &lt;L7p:DataType variableDataType="message"/&gt;
                    &lt;L7p:VariableToSet stringValue="policy.definition"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:CacheStorage&gt;
                    &lt;L7p:CacheEntryKey stringValue="${policyDefinition.cacheKey}"/&gt;
                    &lt;L7p:CacheId stringValue="policyDefinition"/&gt;
                    &lt;L7p:MaxEntries stringValue="100"/&gt;
                    &lt;L7p:MaxEntryAgeSeconds stringValue="${cacheAge}"/&gt;
                    &lt;L7p:MaxEntrySizeBytes stringValue="300000"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="policy.definition"/&gt;
                    &lt;L7p:StoreSoapFaults booleanValue="true"/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                &lt;/L7p:CacheStorage&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="c3lzdGVt"/&gt;
                    &lt;L7p:VariableToSet stringValue="policy.source"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Retrieve from restman and cache"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="RXJyb3Igd2hlbiByZXRyaWV2aW5nIHBvbGljeSAoSUQ9JHtwb2xpY3lJZH0p"/&gt;
                    &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// WARNING"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="Error retrieving policy in ${policy.name} (ID=${policyId})"/&gt;
                    &lt;L7p:Level stringValue="WARNING"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:FalseAssertion/&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Failure - set ${error.msg}"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Check if it's in the cache"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:AuditDetailAssertion&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// FINE"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Detail stringValue="==&gt; Leaving Utility Fragment: ${policy.name}"/&gt;
            &lt;L7p:Level stringValue="FINE"/&gt;
        &lt;/L7p:AuditDetailAssertion&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
                        </l7:ResourceSet>
                    </l7:Resources>
                </l7:Policy>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Utility: Get Service</l7:Name>
            <l7:Id>7215d076e3f7201974e2be3edf232fde</l7:Id>
            <l7:Type>POLICY</l7:Type>
            <l7:TimeStamp>2022-04-29T11:42:05.133-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Policy guid="59074fe9-1cee-442d-bea4-79d9e3da5381" id="7215d076e3f7201974e2be3edf232fde" version="0">
                    <l7:PolicyDetail folderId="c4706d99077459bed7ca5ef6c9e62ecb" guid="59074fe9-1cee-442d-bea4-79d9e3da5381" id="7215d076e3f7201974e2be3edf232fde" version="0">
                        <l7:Name>Utility: Get Service</l7:Name>
                        <l7:PolicyType>Include</l7:PolicyType>
                        <l7:Properties>
                            <l7:Property key="revision">
                                <l7:LongValue>1</l7:LongValue>
                            </l7:Property>
                            <l7:Property key="soap">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                        </l7:Properties>
                    </l7:PolicyDetail>
                    <l7:Resources>
                        <l7:ResourceSet tag="policy">
                            <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Policy fragment for &amp;quot;Utility: Get Service&amp;quot; encapsulated assertion"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Call Restman to retrieve a service definition"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** - Assumes an admin role user has been authenticated"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** - Caches results for ${cacheAge} seconds (default=300). To refresh the cache set ${refresh}=true when calling"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** - Returns a text/xml message variable in ${service.definition}"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Inputs:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - serviceId (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - refresh (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - cacheAge (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Outputs:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - service.definition (message)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - service.source (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - error.msg (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v1.0.0 - Jay MacDonald - 20201107 - Initial Version"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:AuditDetailAssertion&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// FINE"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Detail stringValue="==&gt; Entering Utility Fragment: ${policy.name} (refresh=${refresh})"/&gt;
            &lt;L7p:Level stringValue="FINE"/&gt;
        &lt;/L7p:AuditDetailAssertion&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${serviceId}"/&gt;
                &lt;L7p:Operator operatorNull="null"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item dataType="included"&gt;
                        &lt;L7p:Type variableDataType="string"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;L7p:item binary="included"&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Negated booleanValue="true"/&gt;
                        &lt;L7p:Operator operator="EMPTY"/&gt;
                        &lt;L7p:RightValue stringValue="0"/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="c2VydmljZUlkIHdhcyBub3Qgc2V0"/&gt;
                    &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// WARNING"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; serviceId was not set before calling ${policy.name}"/&gt;
                    &lt;L7p:Level stringValue="WARNING"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:FalseAssertion/&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Failure - set ${fragment.errorMsg}"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Confirm that ${serviceId} is set, else fail with message set"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// true or false"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${cacheAge}"/&gt;
                &lt;L7p:Operator operatorNull="null"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item dataType="included"&gt;
                        &lt;L7p:Type variableDataType="int"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;L7p:item binary="included"&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Operator operator="GT"/&gt;
                        &lt;L7p:RightValue stringValue="0"/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="MzAw"/&gt;
                &lt;L7p:DataType variableDataType="int"/&gt;
                &lt;L7p:VariableToSet stringValue="cacheAge"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Ensure ${cacheAge} is set, default=300"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// true or false"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${refresh}"/&gt;
                &lt;L7p:Operator operatorNull="null"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item dataType="included"&gt;
                        &lt;L7p:Type variableDataType="string"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;L7p:item regex="included"&gt;
                        &lt;L7p:Pattern stringValue="^(true|false)$"/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="ZmFsc2U="/&gt;
                &lt;L7p:VariableToSet stringValue="refresh"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Ensure ${refresh} is set, default=false"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="c2VydmljZS0ke3NlcnZpY2VJZH0="/&gt;
            &lt;L7p:VariableToSet stringValue="serviceDefinition.cacheKey"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:AuditDetailAssertion&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// FINE"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Detail stringValue="==&gt; Retrieving service for serviceId=${serviceId}"/&gt;
            &lt;L7p:Level stringValue="FINE"/&gt;
        &lt;/L7p:AuditDetailAssertion&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${refresh}"/&gt;
                    &lt;L7p:Expression2 stringValue="true"/&gt;
                    &lt;L7p:Negate booleanValue="true"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:RightValue stringValue="true"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:CacheLookup&gt;
                    &lt;L7p:CacheEntryKey stringValue="${serviceDefinition.cacheKey}"/&gt;
                    &lt;L7p:CacheId stringValue="serviceDefinition"/&gt;
                    &lt;L7p:ContentTypeOverride stringValue=""/&gt;
                    &lt;L7p:MaxEntryAgeSeconds stringValue="${cacheAge}"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="service.definition"/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                &lt;/L7p:CacheLookup&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="Y2FjaGU="/&gt;
                    &lt;L7p:VariableToSet stringValue="service.source"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Found in cache"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:Encapsulated&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// GET services/${serviceId}"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="c8a5a0d5-1ae2-4144-b538-5c311efc1560"/&gt;
                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Call Restman"/&gt;
                    &lt;L7p:Parameters mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="element"/&gt;
                            &lt;L7p:value stringValue=""/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="message"/&gt;
                            &lt;L7p:value stringValue=""/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="method"/&gt;
                            &lt;L7p:value stringValue="GET"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="resource"/&gt;
                            &lt;L7p:value stringValue="services/${serviceId}"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Parameters&gt;
                &lt;/L7p:Encapsulated&gt;
                &lt;L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:VariablePrefix stringValue="service"/&gt;
                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                        &lt;L7p:Expression stringValue="/l7:Item/l7:Resource/l7:Service"/&gt;
                        &lt;L7p:Namespaces mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="l7"/&gt;
                                &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Namespaces&gt;
                        &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                    &lt;/L7p:XpathExpression&gt;
                &lt;/L7p:ResponseXpathAssertion&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtzZXJ2aWNlLmVsZW1lbnR9"/&gt;
                    &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                    &lt;L7p:DataType variableDataType="message"/&gt;
                    &lt;L7p:VariableToSet stringValue="service.definition"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:CacheStorage&gt;
                    &lt;L7p:CacheEntryKey stringValue="${serviceDefinition.cacheKey}"/&gt;
                    &lt;L7p:CacheId stringValue="serviceDefinition"/&gt;
                    &lt;L7p:MaxEntries stringValue="100"/&gt;
                    &lt;L7p:MaxEntryAgeSeconds stringValue="${cacheAge}"/&gt;
                    &lt;L7p:MaxEntrySizeBytes stringValue="250000"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="service.definition"/&gt;
                    &lt;L7p:StoreSoapFaults booleanValue="true"/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                &lt;/L7p:CacheStorage&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="c3lzdGVt"/&gt;
                    &lt;L7p:VariableToSet stringValue="service.source"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Retrieve from restman and cache"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="RXJyb3Igd2hlbiByZXRyaWV2aW5nIHNlcnZpY2UgKElEPSR7c2VydmljZUlkfSk="/&gt;
                    &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// WARNING"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; Error retrieving service in ${policy.name} (ID=${serviceId})"/&gt;
                    &lt;L7p:Level stringValue="WARNING"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:FalseAssertion/&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Failure - set ${fragment.errorMsg}"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Check if it's in the cache"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:AuditDetailAssertion&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// FINE"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Detail stringValue="==&gt; Leaving Utility Fragment: ${policy.name}"/&gt;
            &lt;L7p:Level stringValue="FINE"/&gt;
        &lt;/L7p:AuditDetailAssertion&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
                        </l7:ResourceSet>
                    </l7:Resources>
                </l7:Policy>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Utility: List Encapsulated Assertions</l7:Name>
            <l7:Id>bc46b1606b0639d4d49278d55a44cd84</l7:Id>
            <l7:Type>POLICY</l7:Type>
            <l7:TimeStamp>2022-04-29T11:42:05.138-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Policy guid="63027bfb-ecd6-4219-944a-eb6661e11ebe" id="bc46b1606b0639d4d49278d55a44cd84" version="0">
                    <l7:PolicyDetail folderId="c4706d99077459bed7ca5ef6c9e62ecb" guid="63027bfb-ecd6-4219-944a-eb6661e11ebe" id="bc46b1606b0639d4d49278d55a44cd84" version="0">
                        <l7:Name>Utility: List Encapsulated Assertions</l7:Name>
                        <l7:PolicyType>Include</l7:PolicyType>
                        <l7:Properties>
                            <l7:Property key="revision">
                                <l7:LongValue>1</l7:LongValue>
                            </l7:Property>
                            <l7:Property key="soap">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                        </l7:Properties>
                    </l7:PolicyDetail>
                    <l7:Resources>
                        <l7:ResourceSet tag="policy">
                            <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Policy fragment for &amp;quot;Utility: List Encapsulated Assertions&amp;quot; encapsulated assertion"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Call Restman and generate a sorted list of encapsulated assertions"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** - Assumes an admin role user has been authenticated"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** - Caches results for ${cacheAge} seconds (default=300). To refresh the cache set ${refresh}=true when calling"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** - Returns a text/xml message variable in ${encapsulatedAssertions.sorted}"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Inputs:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - refresh (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - cacheAge (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Outputs:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - encapsulatedAssertions.sorted (message)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - error.msg (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v1.0.0 - Jay MacDonald - 20201107 - Initial Version"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:AuditDetailAssertion&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// FINE"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Detail stringValue="==&gt; Entering Utility Fragment: ${policy.name} (refresh=${refresh})"/&gt;
            &lt;L7p:Level stringValue="FINE"/&gt;
        &lt;/L7p:AuditDetailAssertion&gt;
        &lt;wsp:All wsp:Usage="Required"&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** ${encapsulatedAssertions.sorted} has the following schema:"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** "/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** &amp;lt;EncapsulatedAssertions source=&amp;quot;system|cache&amp;quot;&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   &amp;lt;EncapsulatedAssertion id=&amp;quot;string&amp;quot;&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;Name&gt;string&amp;lt;/Name&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;GUID&gt;string&amp;lt;/GUID&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;policyReference&gt;string&amp;lt;/policyReference&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   &amp;lt;/EncapsulatedAssertion&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   ..."/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** &amp;lt;/EncapsulatedAssertions&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** "/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** Where:"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   Name = the name of the encapsulated assertion"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   GUID = the GUID for the encapsulated assertion"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   PolicyReference = the ID of the policy that maps to the encapsulated assertion"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Description of ${encapsulatedAssertions.sorted}"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:All&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// true or false"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${cacheAge}"/&gt;
                &lt;L7p:Operator operatorNull="null"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item dataType="included"&gt;
                        &lt;L7p:Type variableDataType="int"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;L7p:item binary="included"&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Operator operator="GT"/&gt;
                        &lt;L7p:RightValue stringValue="0"/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="MzAw"/&gt;
                &lt;L7p:DataType variableDataType="int"/&gt;
                &lt;L7p:VariableToSet stringValue="cacheAge"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Ensure ${cacheAge} is set, default=300"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// true or false"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${refresh}"/&gt;
                &lt;L7p:Operator operatorNull="null"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item dataType="included"&gt;
                        &lt;L7p:Type variableDataType="string"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;L7p:item regex="included"&gt;
                        &lt;L7p:Pattern stringValue="^(true|false)$"/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="ZmFsc2U="/&gt;
                &lt;L7p:VariableToSet stringValue="refresh"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Ensure ${refresh} is set, default=false"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="ZW5jYXBzdWxhdGVkQXNzZXJ0aW9ucy5zb3J0ZWQ="/&gt;
            &lt;L7p:VariableToSet stringValue="cacheKey"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${refresh}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="string"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:RightValue stringValue="true"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:CacheLookup&gt;
                    &lt;L7p:CacheEntryKey stringValue="${cacheKey}"/&gt;
                    &lt;L7p:CacheId stringValue="encapsulatedAssertionList"/&gt;
                    &lt;L7p:ContentTypeOverride stringValue=""/&gt;
                    &lt;L7p:MaxEntryAgeSeconds stringValue="${cacheAge}"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="encapsulatedAssertions.sorted"/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                &lt;/L7p:CacheLookup&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="Y2FjaGU="/&gt;
                    &lt;L7p:VariableToSet stringValue="source"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// FINE"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; Found encapsulatedAssertions.sorted in the cache"/&gt;
                    &lt;L7p:Level stringValue="FINE"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Look in cache unless asked to refresh cache"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:Encapsulated&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// GET encapsulatedAssertions"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="c8a5a0d5-1ae2-4144-b538-5c311efc1560"/&gt;
                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Call Restman"/&gt;
                    &lt;L7p:Parameters mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="element"/&gt;
                            &lt;L7p:value stringValue="EncapsulatedAssertion"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="message"/&gt;
                            &lt;L7p:value stringValue=""/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="method"/&gt;
                            &lt;L7p:value stringValue="GET"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="resource"/&gt;
                            &lt;L7p:value stringValue="encapsulatedAssertions"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Parameters&gt;
                &lt;/L7p:Encapsulated&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:VariablePrefix stringValue="encapsulatedAssertions"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:List/l7:Item/l7:Resource/l7:EncapsulatedAssertion"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:TrueAssertion/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Extract the list of encapsulated assertions, never fail"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz48RW5jYXBzdWxhdGVkQXNzZXJ0aW9ucz4="/&gt;
                    &lt;L7p:VariableToSet stringValue="encapsulatedAssertions.sorted"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:ForEachLoop L7p:Usage="Required"
                    loopVariable="encapsulatedAssertions.elements" variablePrefix="encapsulatedAssertion"&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cast to message type for parsing"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:Base64Expression stringValue="JHtlbmNhcHN1bGF0ZWRBc3NlcnRpb24uY3VycmVudH0="/&gt;
                        &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                        &lt;L7p:DataType variableDataType="message"/&gt;
                        &lt;L7p:VariableToSet stringValue="encapsulatedAssertion.xml"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Retrieve the encapsulated assertion ID"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="id"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="encapsulatedAssertion.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:EncapsulatedAssertion/@id"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// retrieve the encapsulated assertion name"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="name"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="encapsulatedAssertion.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:EncapsulatedAssertion/l7:Name"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Retrieve the encapsulated assertion guid"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="guid"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="encapsulatedAssertion.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:EncapsulatedAssertion/l7:Guid"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Retrieve the encapsulated assertion guid"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="policyReference"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="encapsulatedAssertion.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:EncapsulatedAssertion/l7:PolicyReference/@id"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="JHtlbmNhcHN1bGF0ZWRBc3NlcnRpb25zLnNvcnRlZH08RW5jYXBzdWxhdGVkQXNzZXJ0aW9uIGlkPSIke2lkLnJlc3VsdH0iPjxOYW1lPjwhW0NEQVRBWyR7bmFtZS5yZXN1bHR9XV0+PC9OYW1lPjxHVUlEPiR7Z3VpZC5yZXN1bHR9PC9HVUlEPjxQb2xpY3lSZWZlcmVuY2U+JHtwb2xpY3lSZWZlcmVuY2UucmVzdWx0fTwvUG9saWN5UmVmZXJlbmNlPjwvRW5jYXBzdWxhdGVkQXNzZXJ0aW9uPg=="/&gt;
                        &lt;L7p:VariableToSet stringValue="encapsulatedAssertions.sorted"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Build the list of encapsulated assertions"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/L7p:ForEachLoop&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtlbmNhcHN1bGF0ZWRBc3NlcnRpb25zLnNvcnRlZH08L0VuY2Fwc3VsYXRlZEFzc2VydGlvbnM+"/&gt;
                    &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                    &lt;L7p:DataType variableDataType="message"/&gt;
                    &lt;L7p:VariableToSet stringValue="encapsulatedAssertions.sorted"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:XslTransformation&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Sort the encapsulated assertions by name"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Direction intValue="-1"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="encapsulatedAssertions.sorted"/&gt;
                    &lt;L7p:ResourceInfo staticResourceInfo="included"&gt;
                        &lt;L7p:Document stringValueReference="inline"&gt;&lt;![CDATA[&lt;xsl:stylesheet version="1.0" xmlns:l7="http://ns.l7tech.com/2010/04/gateway-management" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;

&lt;xsl:template match="/EncapsulatedAssertions"&gt;
    &lt;xsl:copy&gt;
        &lt;xsl:for-each select="EncapsulatedAssertion"&gt;
            &lt;xsl:sort select="./Name"/&gt;
            &lt;xsl:copy-of select="."/&gt;
        &lt;/xsl:for-each&gt;
    &lt;/xsl:copy&gt;
&lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;]]&gt;&lt;/L7p:Document&gt;
                    &lt;/L7p:ResourceInfo&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                    &lt;L7p:TransformName stringValue=""/&gt;
                    &lt;L7p:XsltVersion stringValue="1.0"/&gt;
                &lt;/L7p:XslTransformation&gt;
                &lt;L7p:CacheStorage&gt;
                    &lt;L7p:CacheEntryKey stringValue="${cacheKey}"/&gt;
                    &lt;L7p:CacheId stringValue="encapsulatedAssertionList"/&gt;
                    &lt;L7p:MaxEntries stringValue="1"/&gt;
                    &lt;L7p:MaxEntryAgeSeconds stringValue="${cacheAge}"/&gt;
                    &lt;L7p:MaxEntrySizeBytes stringValue="200000"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="encapsulatedAssertions.sorted"/&gt;
                    &lt;L7p:StoreSoapFaults booleanValue="true"/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                &lt;/L7p:CacheStorage&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="c3lzdGVt"/&gt;
                    &lt;L7p:VariableToSet stringValue="source"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// FINE"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; Loaded encapsulatedAssertions.sorted from system and stored to cache"/&gt;
                    &lt;L7p:Level stringValue="FINE"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Retrieve new list and cache"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="RXJyb3Igd2hlbiBsaXN0aW5nIGVuY2Fwc3VsYXRlZCBhc3NlcnRpb25z"/&gt;
                    &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// WARNING"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; Error listing encapsulated assertions in ${policy.name}"/&gt;
                    &lt;L7p:Level stringValue="WARNING"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:FalseAssertion/&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Failure - set ${error.msg}"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Caching logic"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:Regex&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Add source attribute to /EncapsulatedAssertions element"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:AutoTarget booleanValue="false"/&gt;
            &lt;L7p:OtherTargetMessageVariable stringValue="encapsulatedAssertions.sorted"/&gt;
            &lt;L7p:Regex stringValue="&amp;lt;EncapsulatedAssertions&gt;"/&gt;
            &lt;L7p:Replace booleanValue="true"/&gt;
            &lt;L7p:Replacement stringValue="&amp;lt;EncapsulatedAssertions source=&amp;quot;${source}&amp;quot;&gt;"/&gt;
            &lt;L7p:Target target="OTHER"/&gt;
        &lt;/L7p:Regex&gt;
        &lt;L7p:AuditDetailAssertion&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// FINE"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Detail stringValue="==&gt; Leaving Utility Fragment: ${policy.name}"/&gt;
            &lt;L7p:Level stringValue="FINE"/&gt;
        &lt;/L7p:AuditDetailAssertion&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
                        </l7:ResourceSet>
                    </l7:Resources>
                </l7:Policy>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Utility: List Cluster Properties</l7:Name>
            <l7:Id>bc46b1606b0639d4d49278d55a4909b9</l7:Id>
            <l7:Type>POLICY</l7:Type>
            <l7:TimeStamp>2022-04-29T11:42:05.144-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Policy guid="5d651487-691b-4060-8de1-b91c798cdd58" id="bc46b1606b0639d4d49278d55a4909b9" version="0">
                    <l7:PolicyDetail folderId="c4706d99077459bed7ca5ef6c9e62ecb" guid="5d651487-691b-4060-8de1-b91c798cdd58" id="bc46b1606b0639d4d49278d55a4909b9" version="0">
                        <l7:Name>Utility: List Cluster Properties</l7:Name>
                        <l7:PolicyType>Include</l7:PolicyType>
                        <l7:Properties>
                            <l7:Property key="revision">
                                <l7:LongValue>1</l7:LongValue>
                            </l7:Property>
                            <l7:Property key="soap">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                        </l7:Properties>
                    </l7:PolicyDetail>
                    <l7:Resources>
                        <l7:ResourceSet tag="policy">
                            <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Policy fragment for &amp;quot;Utility: List Cluster Properties&amp;quot; encapsulated assertion"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Call Restman and generate a sorted list of cluster properties"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** - Assumes an admin role user has been authenticated"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** - Caches results for ${cacheAge} seconds (default=300). To refresh the cache set ${refresh}=true when calling"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** - Returns a text/xml message variable in ${clusterProperties.sorted}"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Inputs:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - refresh (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - cacheAge (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Outputs:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - clusterProperties.sorted (message)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - error.msg (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v1.0.0 - Jay MacDonald - 20201107 - Initial Version"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:AuditDetailAssertion&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// FINE"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Detail stringValue="==&gt; Entering Utility Fragment: ${policy.name} (refresh=${refresh})"/&gt;
            &lt;L7p:Level stringValue="FINE"/&gt;
        &lt;/L7p:AuditDetailAssertion&gt;
        &lt;wsp:All wsp:Usage="Required"&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** ${clusterProperties.sorted} has the following schema:"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** "/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** &amp;lt;ClusterProperties source=&amp;quot;system|cache&amp;quot;&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   &amp;lt;ClusterProperty id=&amp;quot;string&amp;quot;&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;Name&gt;string&amp;lt;/Name&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;Value&gt;string&amp;lt;/Value&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   &amp;lt;/ClusterProperty&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   ..."/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** &amp;lt;/ClusterProperties&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** "/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** Where:"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   Name = the name of the cluster property"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   Value = the value of the cluster property"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Description of ${clusterProperties.sorted}"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:All&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// true or false"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${cacheAge}"/&gt;
                &lt;L7p:Operator operatorNull="null"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item dataType="included"&gt;
                        &lt;L7p:Type variableDataType="int"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;L7p:item binary="included"&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Operator operator="GT"/&gt;
                        &lt;L7p:RightValue stringValue="0"/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="MzAw"/&gt;
                &lt;L7p:DataType variableDataType="int"/&gt;
                &lt;L7p:VariableToSet stringValue="cacheAge"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Ensure ${cacheAge} is set, default=300"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// true or false"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${refresh}"/&gt;
                &lt;L7p:Operator operatorNull="null"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item dataType="included"&gt;
                        &lt;L7p:Type variableDataType="string"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;L7p:item regex="included"&gt;
                        &lt;L7p:Pattern stringValue="^(true|false)$"/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="ZmFsc2U="/&gt;
                &lt;L7p:VariableToSet stringValue="refresh"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Ensure ${refresh} is set, default=false"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="Y2x1c3RlclByb3BlcnRpZXMuc29ydGVk"/&gt;
            &lt;L7p:VariableToSet stringValue="cacheKey"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${refresh}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="string"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:RightValue stringValue="true"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:CacheLookup&gt;
                    &lt;L7p:CacheEntryKey stringValue="${cacheKey}"/&gt;
                    &lt;L7p:CacheId stringValue="clusterPropertyList"/&gt;
                    &lt;L7p:ContentTypeOverride stringValue=""/&gt;
                    &lt;L7p:MaxEntryAgeSeconds stringValue="${cacheAge}"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="clusterProperties.sorted"/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                &lt;/L7p:CacheLookup&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="Y2FjaGU="/&gt;
                    &lt;L7p:VariableToSet stringValue="source"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// FINE"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; Found clusterProperties.sorted in the cache"/&gt;
                    &lt;L7p:Level stringValue="FINE"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Look in cache unless asked to refresh cache"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:Encapsulated&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// GET clusterProperties"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="c8a5a0d5-1ae2-4144-b538-5c311efc1560"/&gt;
                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Call Restman"/&gt;
                    &lt;L7p:Parameters mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="element"/&gt;
                            &lt;L7p:value stringValue="ClusterProperty"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="message"/&gt;
                            &lt;L7p:value stringValue=""/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="method"/&gt;
                            &lt;L7p:value stringValue="GET"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="resource"/&gt;
                            &lt;L7p:value stringValue="clusterProperties"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Parameters&gt;
                &lt;/L7p:Encapsulated&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:VariablePrefix stringValue="clusterProperties"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:List/l7:Item/l7:Resource/l7:ClusterProperty"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:TrueAssertion/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Extract the list of cluster properties, never fail"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz48Q2x1c3RlclByb3BlcnRpZXM+"/&gt;
                    &lt;L7p:VariableToSet stringValue="clusterProperties.sorted"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:ForEachLoop L7p:Usage="Required"
                    loopVariable="clusterProperties.elements" variablePrefix="clusterProperty"&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cast to message type for parsing"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:Base64Expression stringValue="JHtjbHVzdGVyUHJvcGVydHkuY3VycmVudH0="/&gt;
                        &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                        &lt;L7p:DataType variableDataType="message"/&gt;
                        &lt;L7p:VariableToSet stringValue="clusterProperty.xml"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Retrieve the cluster property ID"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="id"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="clusterProperty.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:ClusterProperty/@id"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// retrieve the cluster property name"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="name"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="clusterProperty.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:ClusterProperty/l7:Name"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Retrieve the cluster property value"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="value"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="clusterProperty.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:ClusterProperty/l7:Value"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="JHtjbHVzdGVyUHJvcGVydGllcy5zb3J0ZWR9PENsdXN0ZXJQcm9wZXJ0eSBpZD0iJHtpZC5yZXN1bHR9Ij48TmFtZT48IVtDREFUQVske25hbWUucmVzdWx0fV1dPjwvTmFtZT48VmFsdWU+PCFbQ0RBVEFbJHt2YWx1ZS5yZXN1bHR9XV0+PC9WYWx1ZT48L0NsdXN0ZXJQcm9wZXJ0eT4="/&gt;
                        &lt;L7p:VariableToSet stringValue="clusterProperties.sorted"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Build the list of cluster properties"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/L7p:ForEachLoop&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtjbHVzdGVyUHJvcGVydGllcy5zb3J0ZWR9PC9DbHVzdGVyUHJvcGVydGllcz4="/&gt;
                    &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                    &lt;L7p:DataType variableDataType="message"/&gt;
                    &lt;L7p:VariableToSet stringValue="clusterProperties.sorted"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:XslTransformation&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Sort the cluster properties by name"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Direction intValue="-1"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="clusterProperties.sorted"/&gt;
                    &lt;L7p:ResourceInfo staticResourceInfo="included"&gt;
                        &lt;L7p:Document stringValueReference="inline"&gt;&lt;![CDATA[&lt;xsl:stylesheet version="1.0" xmlns:l7="http://ns.l7tech.com/2010/04/gateway-management" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;

&lt;xsl:template match="/ClusterProperties"&gt;
    &lt;xsl:copy&gt;
        &lt;xsl:for-each select="ClusterProperty"&gt;
            &lt;xsl:sort select="./Name"/&gt;
            &lt;xsl:copy-of select="."/&gt;
        &lt;/xsl:for-each&gt;
    &lt;/xsl:copy&gt;
&lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;]]&gt;&lt;/L7p:Document&gt;
                    &lt;/L7p:ResourceInfo&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                    &lt;L7p:TransformName stringValue=""/&gt;
                    &lt;L7p:XsltVersion stringValue="1.0"/&gt;
                &lt;/L7p:XslTransformation&gt;
                &lt;L7p:CacheStorage&gt;
                    &lt;L7p:CacheEntryKey stringValue="${cacheKey}"/&gt;
                    &lt;L7p:CacheId stringValue="clusterPropertyList"/&gt;
                    &lt;L7p:MaxEntries stringValue="1"/&gt;
                    &lt;L7p:MaxEntryAgeSeconds stringValue="${cacheAge}"/&gt;
                    &lt;L7p:MaxEntrySizeBytes stringValue="200000"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="clusterProperties.sorted"/&gt;
                    &lt;L7p:StoreSoapFaults booleanValue="true"/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                &lt;/L7p:CacheStorage&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="c3lzdGVt"/&gt;
                    &lt;L7p:VariableToSet stringValue="source"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// FINE"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; Loaded clusterProperties.sorted from system and stored to cache"/&gt;
                    &lt;L7p:Level stringValue="FINE"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Retrieve new list and cache"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="RXJyb3Igd2hlbiBsaXN0aW5nIGNsdXN0ZXIgcHJvcGVydGllcw=="/&gt;
                    &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// WARNING"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; Error listing cluster properties in ${policy.name}"/&gt;
                    &lt;L7p:Level stringValue="WARNING"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:FalseAssertion/&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Failure - set ${error.msg}"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Caching logic"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:Regex&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Add source attribute to /ClusterProperties element"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:AutoTarget booleanValue="false"/&gt;
            &lt;L7p:OtherTargetMessageVariable stringValue="clusterProperties.sorted"/&gt;
            &lt;L7p:Regex stringValue="&amp;lt;ClusterProperties&gt;"/&gt;
            &lt;L7p:Replace booleanValue="true"/&gt;
            &lt;L7p:Replacement stringValue="&amp;lt;ClusterProperties source=&amp;quot;${source}&amp;quot;&gt;"/&gt;
            &lt;L7p:Target target="OTHER"/&gt;
        &lt;/L7p:Regex&gt;
        &lt;L7p:AuditDetailAssertion&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// FINE"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Detail stringValue="==&gt; Leaving Utility Fragment: ${policy.name}"/&gt;
            &lt;L7p:Level stringValue="FINE"/&gt;
        &lt;/L7p:AuditDetailAssertion&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
                        </l7:ResourceSet>
                    </l7:Resources>
                </l7:Policy>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Internal Identity Provider</l7:Name>
            <l7:Id>0000000000000000fffffffffffffffe</l7:Id>
            <l7:Type>ID_PROVIDER_CONFIG</l7:Type>
            <l7:TimeStamp>2022-04-29T11:42:05.144-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:IdentityProvider id="0000000000000000fffffffffffffffe" version="0">
                    <l7:Name>Internal Identity Provider</l7:Name>
                    <l7:IdentityProviderType>Internal</l7:IdentityProviderType>
                </l7:IdentityProvider>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Utility: Form and Session Authentication</l7:Name>
            <l7:Id>c4706d99077459bed7ca5ef6c9e4e922</l7:Id>
            <l7:Type>POLICY</l7:Type>
            <l7:TimeStamp>2022-04-29T11:42:05.155-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Policy guid="fefc1213-858e-4be0-82cd-67e980463597" id="c4706d99077459bed7ca5ef6c9e4e922" version="0">
                    <l7:PolicyDetail folderId="c4706d99077459bed7ca5ef6c9e62ecb" guid="fefc1213-858e-4be0-82cd-67e980463597" id="c4706d99077459bed7ca5ef6c9e4e922" version="0">
                        <l7:Name>Utility: Form and Session Authentication</l7:Name>
                        <l7:PolicyType>Include</l7:PolicyType>
                        <l7:Properties>
                            <l7:Property key="revision">
                                <l7:LongValue>1</l7:LongValue>
                            </l7:Property>
                            <l7:Property key="soap">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                        </l7:Properties>
                    </l7:PolicyDetail>
                    <l7:Resources>
                        <l7:ResourceSet tag="policy">
                            <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Policy fragment for &amp;quot;Utility: Form and Session Authentication&amp;quot; encapsulated assertion"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Check for logout request, else check if session is cached and validate, else check if form was"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   submitted and validate, else assume user is not logged in."/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Inputs:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - sessionTTL (string) - overrule default 600 second session TTL"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - verifyAdmin (boolean) - Verify that the authenticated user is a member of Administrator role"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Outputs:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - loggedIn"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - logout"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - form.message (a string to display in the login form)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - redirectUrl"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v1.0.0 - Jay MacDonald - 20201107 - Initial Version"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:AuditDetailAssertion&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// FINE"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Detail stringValue="==&gt; Entering Utility Fragment: ${policy.name}"/&gt;
            &lt;L7p:Level stringValue="FINE"/&gt;
        &lt;/L7p:AuditDetailAssertion&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:SslAssertion/&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtyZXF1ZXN0LnVybH0="/&gt;
                    &lt;L7p:VariableToSet stringValue="redirectUrl"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:Regex&gt;
                    &lt;L7p:AutoTarget booleanValue="false"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="redirectUrl"/&gt;
                    &lt;L7p:Regex stringValue="^https?://"/&gt;
                    &lt;L7p:Replace booleanValue="true"/&gt;
                    &lt;L7p:Replacement stringValue="https://"/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                &lt;/L7p:Regex&gt;
                &lt;L7p:Regex&gt;
                    &lt;L7p:AutoTarget booleanValue="false"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="redirectUrl"/&gt;
                    &lt;L7p:Regex stringValue=":8080/"/&gt;
                    &lt;L7p:Replace booleanValue="true"/&gt;
                    &lt;L7p:Replacement stringValue=":8443/"/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                &lt;/L7p:Regex&gt;
                &lt;L7p:CustomizeErrorResponse&gt;
                    &lt;L7p:Content stringValueReference="inline"&gt;&lt;![CDATA[&lt;html&gt;
&lt;head&gt;
  &lt;title&gt;SSL/TLS required&lt;/title&gt;
&lt;/head&gt;

&lt;body&gt;
  &lt;h1&gt;SSL/TLS required&lt;/h1&gt;

  &lt;p&gt;&lt;a href="${redirectUrl}"&gt;Continue&lt;/a&gt;&lt;/p&gt;
  &lt;hr /&gt;
&lt;/body&gt;
&lt;/html&gt;]]&gt;&lt;/L7p:Content&gt;
                    &lt;L7p:ContentType stringValue="text/html; charset=UTF-8"/&gt;
                    &lt;L7p:ExtraHeaders nameValuePairArray="included"&gt;
                        &lt;L7p:item nameValuePair="included"&gt;
                            &lt;L7p:Key stringValue="Location"/&gt;
                            &lt;L7p:Value stringValue="${redirectUrl}"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:ExtraHeaders&gt;
                    &lt;L7p:HttpStatus stringValue="302"/&gt;
                &lt;/L7p:CustomizeErrorResponse&gt;
                &lt;L7p:FalseAssertion/&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Set up redirect as error response and fail"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Verify SSL else redirect to SSL link"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Default message on the login form"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Base64Expression stringValue="V2VsY29tZSE="/&gt;
            &lt;L7p:VariableToSet stringValue="form.message"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Initialise here"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Base64Expression stringValue="ZmFsc2U="/&gt;
            &lt;L7p:VariableToSet stringValue="logout"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Initialise here"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Base64Expression stringValue="ZmFsc2U="/&gt;
            &lt;L7p:VariableToSet stringValue="loggedin"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${sessionTTL}"/&gt;
                &lt;L7p:Expression2 stringValue=""/&gt;
                &lt;L7p:Negate booleanValue="true"/&gt;
                &lt;L7p:Operator operator="EMPTY"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Negated booleanValue="true"/&gt;
                        &lt;L7p:Operator operator="EMPTY"/&gt;
                        &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="NjAw"/&gt;
                &lt;L7p:VariableToSet stringValue="sessionTTL"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Ensure sessionTTL is set, default 600"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${request.http.parameter.action}"/&gt;
                    &lt;L7p:Expression2 stringValue="logout"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:RightValue stringValue="logout"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// FINE"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; Logout requested"/&gt;
                    &lt;L7p:Level stringValue="FINE"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="VXNlciBsb2dnZWQgb3V0"/&gt;
                    &lt;L7p:VariableToSet stringValue="form.message"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="dHJ1ZQ=="/&gt;
                    &lt;L7p:VariableToSet stringValue="logout"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Logout"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:CookieCredentialSource&gt;
                    &lt;L7p:CookieName stringValue="sessionKey"/&gt;
                &lt;/L7p:CookieCredentialSource&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// FINE"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; Found sessionKey cookie in request: ${cookie.sessionKey}"/&gt;
                    &lt;L7p:Level stringValue="FINE"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;L7p:CacheLookup&gt;
                        &lt;L7p:CacheEntryKey stringValue="${cookie.sessionKey}"/&gt;
                        &lt;L7p:CacheId stringValue="loginCache"/&gt;
                        &lt;L7p:ContentTypeOverride stringValue=""/&gt;
                        &lt;L7p:MaxEntryAgeSeconds stringValue="${sessionTTL}"/&gt;
                        &lt;L7p:OtherTargetMessageVariable stringValue="sessionDetail"/&gt;
                        &lt;L7p:Target target="OTHER"/&gt;
                    &lt;/L7p:CacheLookup&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="TWlzc2luZyBzZXNzaW9u"/&gt;
                            &lt;L7p:VariableToSet stringValue="form.message"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:ManageCookie&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Remove cookie from browser by setting TTL to 0"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:CookieAttributes mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="path"/&gt;
                                    &lt;L7p:value nameValuePair="included"&gt;
                                    &lt;L7p:Key stringValue="path"/&gt;
                                    &lt;L7p:Value stringValue="${request.url.path}"/&gt;
                                    &lt;/L7p:value&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="name"/&gt;
                                    &lt;L7p:value nameValuePair="included"&gt;
                                    &lt;L7p:Key stringValue="name"/&gt;
                                    &lt;L7p:Value stringValue="sessionKey"/&gt;
                                    &lt;/L7p:value&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="max-age"/&gt;
                                    &lt;L7p:value nameValuePair="included"&gt;
                                    &lt;L7p:Key stringValue="max-age"/&gt;
                                    &lt;L7p:Value stringValue="0"/&gt;
                                    &lt;/L7p:value&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="httpOnly"/&gt;
                                    &lt;L7p:value nameValuePair="included"&gt;
                                    &lt;L7p:Key stringValue="httpOnly"/&gt;
                                    &lt;L7p:Value stringValue="true"/&gt;
                                    &lt;/L7p:value&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="secure"/&gt;
                                    &lt;L7p:value nameValuePair="included"&gt;
                                    &lt;L7p:Key stringValue="secure"/&gt;
                                    &lt;L7p:Value stringValue="true"/&gt;
                                    &lt;/L7p:value&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="value"/&gt;
                                    &lt;L7p:value nameValuePair="included"&gt;
                                    &lt;L7p:Key stringValue="value"/&gt;
                                    &lt;L7p:Value stringValue="${cookie.sessionKey}"/&gt;
                                    &lt;/L7p:value&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:CookieAttributes&gt;
                            &lt;L7p:Operation operation="ADD_OR_REPLACE"/&gt;
                            &lt;L7p:Target target="RESPONSE"/&gt;
                        &lt;/L7p:ManageCookie&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="ZmFsc2U="/&gt;
                            &lt;L7p:VariableToSet stringValue="loggedin"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:FalseAssertion/&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Fail due to missing session in cache"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Get session from cache else fail"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:VariablePrefix stringValue="username"/&gt;
                    &lt;L7p:XmlMsgSrc stringValue="sessionDetail"/&gt;
                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                        &lt;L7p:Expression stringValue="//Username"/&gt;
                        &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                    &lt;/L7p:XpathExpression&gt;
                &lt;/L7p:ResponseXpathAssertion&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHt1c2VybmFtZS5yZXN1bHR9"/&gt;
                    &lt;L7p:VariableToSet stringValue="username"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:VariablePrefix stringValue="password"/&gt;
                    &lt;L7p:XmlMsgSrc stringValue="sessionDetail"/&gt;
                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                        &lt;L7p:Expression stringValue="//Password"/&gt;
                        &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                    &lt;/L7p:XpathExpression&gt;
                &lt;/L7p:ResponseXpathAssertion&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtwYXNzd29yZC5yZXN1bHR9"/&gt;
                    &lt;L7p:VariableToSet stringValue="password"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:XpathCredentialSource&gt;
                    &lt;L7p:PasswordExpression xpathExpressionValue="included"&gt;
                        &lt;L7p:Expression stringValue="$password"/&gt;
                    &lt;/L7p:PasswordExpression&gt;
                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                        &lt;L7p:Expression stringValue="$username"/&gt;
                    &lt;/L7p:XpathExpression&gt;
                &lt;/L7p:XpathCredentialSource&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;L7p:Authentication&gt;
                        &lt;L7p:IdentityProviderOid goidValue="0000000000000000fffffffffffffffe"/&gt;
                    &lt;/L7p:Authentication&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="SW52YWxpZCBjcmVkZW50aWFscy4gTG9nZ2luZyBvdXQ="/&gt;
                            &lt;L7p:VariableToSet stringValue="form.message"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:ManageCookie&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Remove cookie from browser by setting TTL to 0"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:CookieAttributes mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="path"/&gt;
                                    &lt;L7p:value nameValuePair="included"&gt;
                                    &lt;L7p:Key stringValue="path"/&gt;
                                    &lt;L7p:Value stringValue="${request.url.path}"/&gt;
                                    &lt;/L7p:value&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="name"/&gt;
                                    &lt;L7p:value nameValuePair="included"&gt;
                                    &lt;L7p:Key stringValue="name"/&gt;
                                    &lt;L7p:Value stringValue="sessionKey"/&gt;
                                    &lt;/L7p:value&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="max-age"/&gt;
                                    &lt;L7p:value nameValuePair="included"&gt;
                                    &lt;L7p:Key stringValue="max-age"/&gt;
                                    &lt;L7p:Value stringValue="0"/&gt;
                                    &lt;/L7p:value&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="httpOnly"/&gt;
                                    &lt;L7p:value nameValuePair="included"&gt;
                                    &lt;L7p:Key stringValue="httpOnly"/&gt;
                                    &lt;L7p:Value stringValue="true"/&gt;
                                    &lt;/L7p:value&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="secure"/&gt;
                                    &lt;L7p:value nameValuePair="included"&gt;
                                    &lt;L7p:Key stringValue="secure"/&gt;
                                    &lt;L7p:Value stringValue="true"/&gt;
                                    &lt;/L7p:value&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="value"/&gt;
                                    &lt;L7p:value nameValuePair="included"&gt;
                                    &lt;L7p:Key stringValue="value"/&gt;
                                    &lt;L7p:Value stringValue="${cookie.sessionKey}"/&gt;
                                    &lt;/L7p:value&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:CookieAttributes&gt;
                            &lt;L7p:Operation operation="ADD_OR_REPLACE"/&gt;
                            &lt;L7p:Target target="RESPONSE"/&gt;
                        &lt;/L7p:ManageCookie&gt;
                        &lt;L7p:CacheStorage&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Remove from cache by setting TTL to 0"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:CacheEntryKey stringValue="${cookie.sessionKey}"/&gt;
                            &lt;L7p:CacheId stringValue="loginCache"/&gt;
                            &lt;L7p:MaxEntries stringValue="25"/&gt;
                            &lt;L7p:MaxEntryAgeSeconds stringValue="0"/&gt;
                            &lt;L7p:MaxEntrySizeBytes stringValue="1000"/&gt;
                            &lt;L7p:OtherTargetMessageVariable stringValue="sessionDetail"/&gt;
                            &lt;L7p:Target target="OTHER"/&gt;
                        &lt;/L7p:CacheStorage&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="dHJ1ZQ=="/&gt;
                            &lt;L7p:VariableToSet stringValue="logout"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="ZmFsc2U="/&gt;
                            &lt;L7p:VariableToSet stringValue="loggedin"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:FalseAssertion/&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Fail due to Invalid credentials"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Authenticate credentials else fail"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtjb29raWUuc2Vzc2lvbktleX0="/&gt;
                    &lt;L7p:VariableToSet stringValue="sessionKey"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="dHJ1ZQ=="/&gt;
                    &lt;L7p:VariableToSet stringValue="loggedin"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Get session token and validate against cache"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:Expression1 stringValue="${request.http.parameter.action}"/&gt;
                    &lt;L7p:Expression2 stringValue="login"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:RightValue stringValue="login"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// FINE"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; Login form was submitted"/&gt;
                    &lt;L7p:Level stringValue="FINE"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtyZXF1ZXN0Lmh0dHAucGFyYW1ldGVyLnVzZXJuYW1lfQ=="/&gt;
                    &lt;L7p:VariableToSet stringValue="username"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtyZXF1ZXN0Lmh0dHAucGFyYW1ldGVyLnBhc3N3b3JkfQ=="/&gt;
                    &lt;L7p:VariableToSet stringValue="password"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:XpathCredentialSource&gt;
                    &lt;L7p:PasswordExpression xpathExpressionValue="included"&gt;
                        &lt;L7p:Expression stringValue="$password"/&gt;
                    &lt;/L7p:PasswordExpression&gt;
                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                        &lt;L7p:Expression stringValue="$username"/&gt;
                    &lt;/L7p:XpathExpression&gt;
                &lt;/L7p:XpathCredentialSource&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;L7p:Authentication&gt;
                        &lt;L7p:IdentityProviderOid goidValue="0000000000000000fffffffffffffffe"/&gt;
                    &lt;/L7p:Authentication&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="SW52YWxpZCBjcmVkZW50aWFscy4gUGxlYXNlIHRyeSBhZ2Fpbg=="/&gt;
                            &lt;L7p:VariableToSet stringValue="form.message"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="ZmFsc2U="/&gt;
                            &lt;L7p:VariableToSet stringValue="loggedin"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:FalseAssertion/&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Fail due to Invalid credentials"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Authenticate credentials else fail"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:UUIDGenerator&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// ${session}"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:TargetVariable stringValue="sessionKey"/&gt;
                &lt;/L7p:UUIDGenerator&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="PHNlc3Npb24gaWQ9IiR7c2Vzc2lvbktleX0iPjxVc2VybmFtZT4ke3JlcXVlc3QuaHR0cC5wYXJhbWV0ZXIudXNlcm5hbWV9PC9Vc2VybmFtZT48UGFzc3dvcmQ+JHtyZXF1ZXN0Lmh0dHAucGFyYW1ldGVyLnBhc3N3b3JkfTwvUGFzc3dvcmQ+PC9zZXNzaW9uPg=="/&gt;
                    &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                    &lt;L7p:DataType variableDataType="message"/&gt;
                    &lt;L7p:VariableToSet stringValue="sessionDetail"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="dHJ1ZQ=="/&gt;
                    &lt;L7p:VariableToSet stringValue="loggedin"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Form submitted, validate credential and cache"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:TrueAssertion/&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Authentication - override ${loggedIn} and ${logout}, never fail"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${loggedIn}"/&gt;
                &lt;L7p:Operator operatorNull="null"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item dataType="included"&gt;
                        &lt;L7p:Type variableDataType="boolean"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;L7p:item binary="included"&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:RightValue stringValue="false"/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${verifyAdmin}"/&gt;
                        &lt;L7p:Operator operatorNull="null"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item dataType="included"&gt;
                                &lt;L7p:Type variableDataType="boolean"/&gt;
                            &lt;/L7p:item&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="false"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:ManageCookie&gt;
                        &lt;L7p:CookieAttributes mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="name"/&gt;
                                &lt;L7p:value nameValuePair="included"&gt;
                                    &lt;L7p:Key stringValue="name"/&gt;
                                    &lt;L7p:Value stringValue="sessionKey"/&gt;
                                &lt;/L7p:value&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="max-age"/&gt;
                                &lt;L7p:value nameValuePair="included"&gt;
                                    &lt;L7p:Key stringValue="max-age"/&gt;
                                    &lt;L7p:Value stringValue="${sessionTTL}"/&gt;
                                &lt;/L7p:value&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="httpOnly"/&gt;
                                &lt;L7p:value nameValuePair="included"&gt;
                                    &lt;L7p:Key stringValue="httpOnly"/&gt;
                                    &lt;L7p:Value stringValue="true"/&gt;
                                &lt;/L7p:value&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="secure"/&gt;
                                &lt;L7p:value nameValuePair="included"&gt;
                                    &lt;L7p:Key stringValue="secure"/&gt;
                                    &lt;L7p:Value stringValue="true"/&gt;
                                &lt;/L7p:value&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="value"/&gt;
                                &lt;L7p:value nameValuePair="included"&gt;
                                    &lt;L7p:Key stringValue="value"/&gt;
                                    &lt;L7p:Value stringValue="${sessionKey}"/&gt;
                                &lt;/L7p:value&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:CookieAttributes&gt;
                        &lt;L7p:Operation operation="ADD_OR_REPLACE"/&gt;
                        &lt;L7p:Target target="RESPONSE"/&gt;
                    &lt;/L7p:ManageCookie&gt;
                    &lt;L7p:CacheStorage&gt;
                        &lt;L7p:CacheEntryKey stringValue="${sessionKey}"/&gt;
                        &lt;L7p:CacheId stringValue="loginCache"/&gt;
                        &lt;L7p:MaxEntries stringValue="25"/&gt;
                        &lt;L7p:MaxEntryAgeSeconds stringValue="${sessionTTL}"/&gt;
                        &lt;L7p:MaxEntrySizeBytes stringValue="1000"/&gt;
                        &lt;L7p:OtherTargetMessageVariable stringValue="sessionDetail"/&gt;
                        &lt;L7p:Target target="OTHER"/&gt;
                    &lt;/L7p:CacheStorage&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// ${verifyAdmin} == false - set the cookie and cache sessionDetail"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${verifyAdmin}"/&gt;
                        &lt;L7p:Operator operatorNull="null"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item dataType="included"&gt;
                                &lt;L7p:Type variableDataType="boolean"/&gt;
                            &lt;/L7p:item&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="true"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                        &lt;wsp:All wsp:Usage="Required"&gt;
                            &lt;L7p:Encapsulated&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// GET roles?name=Administrator"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="c8a5a0d5-1ae2-4144-b538-5c311efc1560"/&gt;
                                &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Call Restman"/&gt;
                                &lt;L7p:Parameters mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="element"/&gt;
                                    &lt;L7p:value stringValue=""/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="message"/&gt;
                                    &lt;L7p:value stringValue=""/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="method"/&gt;
                                    &lt;L7p:value stringValue="GET"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="resource"/&gt;
                                    &lt;L7p:value stringValue="roles?name=Administrator"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Parameters&gt;
                            &lt;/L7p:Encapsulated&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cast to string for XPath predicate"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:Base64Expression stringValue="JHtyZXF1ZXN0LmF1dGhlbnRpY2F0ZWR1c2VyLnByb3ZpZGVySWR9"/&gt;
                                &lt;L7p:VariableToSet stringValue="providerId"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cast to string for XPath predicate"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:Base64Expression stringValue="JHtyZXF1ZXN0LmF1dGhlbnRpY2F0ZWR1c2VyLmlkfQ=="/&gt;
                                &lt;L7p:VariableToSet stringValue="identityId"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:ResponseXpathAssertion&gt;
                                &lt;L7p:VariablePrefix stringValue="entityType"/&gt;
                                &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/l7:List/l7:Item/l7:Resource/l7:Role/l7:assignments/l7:assignment[(l7:providerId=$providerId) and (l7:identityId=$identityId)]"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                &lt;/L7p:XpathExpression&gt;
                            &lt;/L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:AuditDetailAssertion&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:Detail stringValue="==&gt; Confirmed that ${request.authenticateduser} is a member of Administrator role"/&gt;
                                &lt;L7p:Level stringValue="FINE"/&gt;
                            &lt;/L7p:AuditDetailAssertion&gt;
                            &lt;L7p:ManageCookie&gt;
                                &lt;L7p:CookieAttributes mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="name"/&gt;
                                    &lt;L7p:value nameValuePair="included"&gt;
                                    &lt;L7p:Key stringValue="name"/&gt;
                                    &lt;L7p:Value stringValue="sessionKey"/&gt;
                                    &lt;/L7p:value&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="max-age"/&gt;
                                    &lt;L7p:value nameValuePair="included"&gt;
                                    &lt;L7p:Key stringValue="max-age"/&gt;
                                    &lt;L7p:Value stringValue="${sessionTTL}"/&gt;
                                    &lt;/L7p:value&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="httpOnly"/&gt;
                                    &lt;L7p:value nameValuePair="included"&gt;
                                    &lt;L7p:Key stringValue="httpOnly"/&gt;
                                    &lt;L7p:Value stringValue="true"/&gt;
                                    &lt;/L7p:value&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="secure"/&gt;
                                    &lt;L7p:value nameValuePair="included"&gt;
                                    &lt;L7p:Key stringValue="secure"/&gt;
                                    &lt;L7p:Value stringValue="true"/&gt;
                                    &lt;/L7p:value&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="value"/&gt;
                                    &lt;L7p:value nameValuePair="included"&gt;
                                    &lt;L7p:Key stringValue="value"/&gt;
                                    &lt;L7p:Value stringValue="${sessionKey}"/&gt;
                                    &lt;/L7p:value&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:CookieAttributes&gt;
                                &lt;L7p:Operation operation="ADD_OR_REPLACE"/&gt;
                                &lt;L7p:Target target="RESPONSE"/&gt;
                            &lt;/L7p:ManageCookie&gt;
                            &lt;L7p:CacheStorage&gt;
                                &lt;L7p:CacheEntryKey stringValue="${sessionKey}"/&gt;
                                &lt;L7p:CacheId stringValue="loginCache"/&gt;
                                &lt;L7p:MaxEntries stringValue="25"/&gt;
                                &lt;L7p:MaxEntryAgeSeconds stringValue="${sessionTTL}"/&gt;
                                &lt;L7p:MaxEntrySizeBytes stringValue="1000"/&gt;
                                &lt;L7p:OtherTargetMessageVariable stringValue="sessionDetail"/&gt;
                                &lt;L7p:Target target="OTHER"/&gt;
                            &lt;/L7p:CacheStorage&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get Administrator role from restman and check is authenticated user is in it"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:All&gt;
                        &lt;wsp:All wsp:Usage="Required"&gt;
                            &lt;L7p:AuditDetailAssertion&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:Detail stringValue="==&gt; ${request.authenticateduser} is NOT a member of Administrator role"/&gt;
                                &lt;L7p:Level stringValue="FINE"/&gt;
                            &lt;/L7p:AuditDetailAssertion&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Default message on the login form"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:Base64Expression stringValue="JHtyZXF1ZXN0LmF1dGhlbnRpY2F0ZWR1c2VyfSBpcyBub3QgYW4gYWRtaW5pc3RyYXRvci4="/&gt;
                                &lt;L7p:VariableToSet stringValue="form.message"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="ZmFsc2U="/&gt;
                                &lt;L7p:VariableToSet stringValue="loggedIn"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Reset ${loggedIn} and ${form.message}"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:All&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Attempt restman call else reset ${loggedIn} to false and set ${form.message}"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// ${verifyAdmin} == true"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Handle ${verifyAdmin} cases"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:OneOrMore&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Set cookie and cache sessionDetail (and test access to restman if requested)  if ${loggedIn} == true"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${request.http.method}"/&gt;
                &lt;L7p:Expression2 stringValue="GET"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:RightValue stringValue="GET"/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${loggedIn}"/&gt;
                &lt;L7p:Operator operatorNull="null"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item dataType="included"&gt;
                        &lt;L7p:Type variableDataType="boolean"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;L7p:item binary="included"&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:RightValue stringValue="false"/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${loggedIn}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="boolean"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:RightValue stringValue="true"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:CustomizeErrorResponse&gt;
                    &lt;L7p:Content stringValueReference="inline"&gt;&lt;![CDATA[&lt;html&gt;
&lt;head&gt;
  &lt;title&gt;User logged in&lt;/title&gt;
&lt;/head&gt;

&lt;body&gt;
  &lt;h1&gt;User logged in&lt;/h1&gt;

  &lt;p&gt;&lt;a href="${request.url}"&gt;Continue&lt;/a&gt;&lt;/p&gt;
  &lt;hr /&gt;
&lt;/body&gt;
&lt;/html&gt;]]&gt;&lt;/L7p:Content&gt;
                    &lt;L7p:ContentType stringValue="text/html; charset=UTF-8"/&gt;
                    &lt;L7p:ExtraHeaders nameValuePairArray="included"&gt;
                        &lt;L7p:item nameValuePair="included"&gt;
                            &lt;L7p:Key stringValue="Location"/&gt;
                            &lt;L7p:Value stringValue="${request.url}"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:ExtraHeaders&gt;
                    &lt;L7p:HttpStatus stringValue="302"/&gt;
                &lt;/L7p:CustomizeErrorResponse&gt;
                &lt;L7p:FalseAssertion/&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Redirect to this URL with GET"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Redirect if method is not GET"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:AuditDetailAssertion&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// FINE"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Detail stringValue="==&gt; Leaving Utility Fragment: ${policy.name}"/&gt;
            &lt;L7p:Level stringValue="FINE"/&gt;
        &lt;/L7p:AuditDetailAssertion&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
                        </l7:ResourceSet>
                    </l7:Resources>
                </l7:Policy>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Utility: List Private Keys</l7:Name>
            <l7:Id>c4706d99077459bed7ca5ef6c9e52876</l7:Id>
            <l7:Type>POLICY</l7:Type>
            <l7:TimeStamp>2022-04-29T11:42:05.162-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Policy guid="1f2ab8ee-cf83-49df-b17e-5f78c6a2cf2d" id="c4706d99077459bed7ca5ef6c9e52876" version="20">
                    <l7:PolicyDetail folderId="c4706d99077459bed7ca5ef6c9e62ecb" guid="1f2ab8ee-cf83-49df-b17e-5f78c6a2cf2d" id="c4706d99077459bed7ca5ef6c9e52876" version="20">
                        <l7:Name>Utility: List Private Keys</l7:Name>
                        <l7:PolicyType>Include</l7:PolicyType>
                        <l7:Properties>
                            <l7:Property key="revision">
                                <l7:LongValue>21</l7:LongValue>
                            </l7:Property>
                            <l7:Property key="soap">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                        </l7:Properties>
                    </l7:PolicyDetail>
                    <l7:Resources>
                        <l7:ResourceSet tag="policy">
                            <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Policy fragment for &amp;quot;Utility: List Private Keys&amp;quot; encapsulated assertion"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Call Restman and generate a sorted list of private keys"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** - Assumes an admin role user has been authenticated"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** - Caches results for ${cacheAge} seconds (default=300). To refresh the cache set ${refresh}=true when calling"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** - Returns a text/xml message variable in ${privateKeys.sorted}"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Inputs:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - refresh (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - cacheAge (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Outputs:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - privateKeys.sorted (message)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - error.msg (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v1.0.0 - Jay MacDonald - 20201107 - Initial Version"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v1.0.1 - Jay MacDonald - 20211102 - Modified ${privateKeys.sorted} to include certificate details"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v1.0.2 - Jay MacDonald - 20220310 - Added default attribute to each private key element"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:AuditDetailAssertion&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// FINE"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Detail stringValue="==&gt; Entering Utility Fragment: ${policy.name} (refresh=${refresh})"/&gt;
            &lt;L7p:Level stringValue="FINE"/&gt;
        &lt;/L7p:AuditDetailAssertion&gt;
        &lt;wsp:All wsp:Usage="Required"&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** ${privateKeys.sorted} has the following schema:"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** "/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** &amp;lt;PrivateKeys source=&amp;quot;system|cache&amp;quot;&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   &amp;lt;PrivateKey id=&amp;quot;string&amp;quot;&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;Alias&gt;string&amp;lt;/Alias&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;KeyStore&gt;string&amp;lt;/KeyStore&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;Certificates&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**       &amp;lt;Certificate&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**         &amp;lt;Subject&gt;string&amp;lt;/Subject&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**         &amp;lt;Issuer&gt;string&amp;lt;/Issuer&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**         &amp;lt;SerialNumber&gt;string&amp;lt;/SerialNumber&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**         &amp;lt;Expires&gt;string&amp;lt;/Expires&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**         &amp;lt;Encoded&gt;string&amp;lt;/Encoded&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**       &amp;lt;/Certificate&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**           ..."/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;/Certificates&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   &amp;lt;/PrivateKey&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   ..."/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** &amp;lt;/PrivateKeys&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** "/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** Where:"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   Alias = the alias of the private key"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   Keystore = the keystore ID that holds the private key"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   Certificates = all certificates in chain mapped to private key"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Description of ${privateKeys.sorted}"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:All&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// true or false"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${cacheAge}"/&gt;
                &lt;L7p:Operator operatorNull="null"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item dataType="included"&gt;
                        &lt;L7p:Type variableDataType="int"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;L7p:item binary="included"&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Operator operator="GT"/&gt;
                        &lt;L7p:RightValue stringValue="0"/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="MzAw"/&gt;
                &lt;L7p:DataType variableDataType="int"/&gt;
                &lt;L7p:VariableToSet stringValue="cacheAge"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Ensure ${cacheAge} is set, default=300"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// true or false"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${refresh}"/&gt;
                &lt;L7p:Operator operatorNull="null"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item dataType="included"&gt;
                        &lt;L7p:Type variableDataType="string"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;L7p:item regex="included"&gt;
                        &lt;L7p:Pattern stringValue="^(true|false)$"/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="ZmFsc2U="/&gt;
                &lt;L7p:VariableToSet stringValue="refresh"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Ensure ${refresh} is set, default=false"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="cHJpdmF0ZUtleXMuc29ydGVk"/&gt;
            &lt;L7p:VariableToSet stringValue="cacheKey"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${refresh}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="string"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:RightValue stringValue="true"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:CacheLookup&gt;
                    &lt;L7p:CacheEntryKey stringValue="${cacheKey}"/&gt;
                    &lt;L7p:CacheId stringValue="privateKeyList"/&gt;
                    &lt;L7p:ContentTypeOverride stringValue=""/&gt;
                    &lt;L7p:MaxEntryAgeSeconds stringValue="${cacheAge}"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="privateKeys.sorted"/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                &lt;/L7p:CacheLookup&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="Y2FjaGU="/&gt;
                    &lt;L7p:VariableToSet stringValue="source"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// FINE"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; Found privateKeys.sorted in the cache"/&gt;
                    &lt;L7p:Level stringValue="FINE"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Look in cache unless asked to refresh cache"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:Encapsulated&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// GET privateKeys"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="c8a5a0d5-1ae2-4144-b538-5c311efc1560"/&gt;
                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Call Restman"/&gt;
                    &lt;L7p:Parameters mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="element"/&gt;
                            &lt;L7p:value stringValue="PrivateKey"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="message"/&gt;
                            &lt;L7p:value stringValue=""/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="method"/&gt;
                            &lt;L7p:value stringValue="Get"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="resource"/&gt;
                            &lt;L7p:value stringValue="privateKeys"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Parameters&gt;
                &lt;/L7p:Encapsulated&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:VariablePrefix stringValue="privateKeys"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:List/l7:Item/l7:Resource/l7:PrivateKey"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:TrueAssertion/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Extract the list of private keys, never fail"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz48UHJpdmF0ZUtleXM+"/&gt;
                    &lt;L7p:VariableToSet stringValue="privateKeys.sorted"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:ForEachLoop L7p:Usage="Required"
                    loopVariable="privateKeys.elements" variablePrefix="privateKey"&gt;
                    &lt;L7p:AuditDetailAssertion&gt;
                        &lt;L7p:Detail stringValue="===&gt; ${privateKey.current}"/&gt;
                        &lt;L7p:Level stringValue="FINE"/&gt;
                    &lt;/L7p:AuditDetailAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cast to message type for parsing"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:Base64Expression stringValue="JHtwcml2YXRlS2V5LmN1cnJlbnR9"/&gt;
                        &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                        &lt;L7p:DataType variableDataType="message"/&gt;
                        &lt;L7p:VariableToSet stringValue="privateKey.xml"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Retrieve the private key ID"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="id"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="privateKey.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:PrivateKey/@id"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// retrieve the private key alias"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="alias"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="privateKey.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:PrivateKey/@alias"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// retrieve the private key name"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="keystoreId"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="privateKey.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:PrivateKey/@keystoreId"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                        &lt;wsp:All wsp:Usage="Required"&gt;
                            &lt;L7p:ResponseXpathAssertion&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// retrieve the certtificates"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:VariablePrefix stringValue=""/&gt;
                                &lt;L7p:XmlMsgSrc stringValue="privateKey.xml"/&gt;
                                &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/l7:PrivateKey/l7:Properties/l7:Property[@key=&amp;quot;specialPurposes&amp;quot;][l7:StringValue='Default SSL Key']"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                &lt;/L7p:XpathExpression&gt;
                            &lt;/L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="dHJ1ZQ=="/&gt;
                                &lt;L7p:VariableToSet stringValue="default"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// If default then set ${default} = 'true'"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:All&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="ZmFsc2U="/&gt;
                            &lt;L7p:VariableToSet stringValue="default"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Check if default private key"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// retrieve the certtificates"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="certificates"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="privateKey.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:PrivateKey/l7:CertificateChain/l7:CertificateData/l7:Encoded"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="JHtwcml2YXRlS2V5cy5zb3J0ZWR9PFByaXZhdGVLZXkgaWQ9IiR7aWQucmVzdWx0fSIgZGVmYXVsdD0iJHtkZWZhdWx0fSI+PEFsaWFzPjwhW0NEQVRBWyR7YWxpYXMucmVzdWx0fV1dPjwvQWxpYXM+PEtleXN0b3JlPiR7a2V5c3RvcmVJZC5yZXN1bHR9PC9LZXlzdG9yZT48Q2VydGlmaWNhdGVzPg=="/&gt;
                        &lt;L7p:VariableToSet stringValue="privateKeys.sorted"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:ForEachLoop L7p:Usage="Required"
                        loopVariable="certificates.results" variablePrefix="certificate"&gt;
                        &lt;L7p:EncodeDecode&gt;
                            &lt;L7p:CharacterEncoding stringValueNull="null"/&gt;
                            &lt;L7p:SourceVariableName stringValue="certificate.current"/&gt;
                            &lt;L7p:TargetDataType variableDataType="cert"/&gt;
                            &lt;L7p:TargetVariableName stringValue="certificate"/&gt;
                            &lt;L7p:TransformType transformType="BASE64_DECODE"/&gt;
                        &lt;/L7p:EncodeDecode&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="JHtwcml2YXRlS2V5cy5zb3J0ZWR9PENlcnRpZmljYXRlPjxTdWJqZWN0PjwhW0NEQVRBWyR7Y2VydGlmaWNhdGUuc3ViamVjdH1dXT48L1N1YmplY3Q+PElzc3Vlcj48IVtDREFUQVske2NlcnRpZmljYXRlLmlzc3Vlcn1dXT48L0lzc3Vlcj48U2VyaWFsTnVtYmVyPiR7Y2VydGlmaWNhdGUuc2VyaWFsfTwvU2VyaWFsTnVtYmVyPjxFeHBpcmVzPiR7Y2VydGlmaWNhdGUubm90QWZ0ZXJ9PC9FeHBpcmVzPjxFbmNvZGVkPiR7Y2VydGlmaWNhdGUuY3VycmVudH08L0VuY29kZWQ+PC9DZXJ0aWZpY2F0ZT4="/&gt;
                            &lt;L7p:VariableToSet stringValue="privateKeys.sorted"/&gt;
                        &lt;/L7p:SetVariable&gt;
                    &lt;/L7p:ForEachLoop&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="JHtwcml2YXRlS2V5cy5zb3J0ZWR9PC9DZXJ0aWZpY2F0ZXM+PC9Qcml2YXRlS2V5Pg=="/&gt;
                        &lt;L7p:VariableToSet stringValue="privateKeys.sorted"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Build the list of private keys"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/L7p:ForEachLoop&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtwcml2YXRlS2V5cy5zb3J0ZWR9PC9Qcml2YXRlS2V5cz4="/&gt;
                    &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                    &lt;L7p:DataType variableDataType="message"/&gt;
                    &lt;L7p:VariableToSet stringValue="privateKeys.sorted"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:XslTransformation&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Sort the private keys by alias"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Direction intValue="-1"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="privateKeys.sorted"/&gt;
                    &lt;L7p:ResourceInfo staticResourceInfo="included"&gt;
                        &lt;L7p:Document stringValueReference="inline"&gt;&lt;![CDATA[&lt;xsl:stylesheet version="1.0" xmlns:l7="http://ns.l7tech.com/2010/04/gateway-management" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;

&lt;xsl:template match="/PrivateKeys"&gt;
    &lt;xsl:copy&gt;
        &lt;xsl:for-each select="PrivateKey"&gt;
            &lt;xsl:sort select="./Alias"/&gt;
            &lt;xsl:copy-of select="."/&gt;
        &lt;/xsl:for-each&gt;
    &lt;/xsl:copy&gt;
&lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;]]&gt;&lt;/L7p:Document&gt;
                    &lt;/L7p:ResourceInfo&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                    &lt;L7p:TransformName stringValue=""/&gt;
                    &lt;L7p:XsltVersion stringValue="1.0"/&gt;
                &lt;/L7p:XslTransformation&gt;
                &lt;L7p:CacheStorage&gt;
                    &lt;L7p:CacheEntryKey stringValue="${cacheKey}"/&gt;
                    &lt;L7p:CacheId stringValue="privateKeyList"/&gt;
                    &lt;L7p:MaxEntries stringValue="1"/&gt;
                    &lt;L7p:MaxEntryAgeSeconds stringValue="${cacheAge}"/&gt;
                    &lt;L7p:MaxEntrySizeBytes stringValue="200000"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="privateKeys.sorted"/&gt;
                    &lt;L7p:StoreSoapFaults booleanValue="true"/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                &lt;/L7p:CacheStorage&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="c3lzdGVt"/&gt;
                    &lt;L7p:VariableToSet stringValue="source"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// FINE"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; Loaded privateKeys.sorted from system and stored to cache"/&gt;
                    &lt;L7p:Level stringValue="FINE"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Retrieve new list and cache"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="RXJyb3Igd2hlbiBsaXN0aW5nIHByaXZhdGUga2V5cw=="/&gt;
                    &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// WARNING"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; Error listing private keys in ${policy.name}"/&gt;
                    &lt;L7p:Level stringValue="WARNING"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:FalseAssertion/&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Failure - set ${error.msg}"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Caching logic"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:Regex&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Add source attribute to /PrivateKeys element"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:AutoTarget booleanValue="false"/&gt;
            &lt;L7p:OtherTargetMessageVariable stringValue="privateKeys.sorted"/&gt;
            &lt;L7p:Regex stringValue="&amp;lt;PrivateKeys&gt;"/&gt;
            &lt;L7p:Replace booleanValue="true"/&gt;
            &lt;L7p:Replacement stringValue="&amp;lt;PrivateKeys source=&amp;quot;${source}&amp;quot;&gt;"/&gt;
            &lt;L7p:Target target="OTHER"/&gt;
        &lt;/L7p:Regex&gt;
        &lt;L7p:AuditDetailAssertion&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// FINE"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Detail stringValue="==&gt; Leaving Utility Fragment: ${policy.name}"/&gt;
            &lt;L7p:Level stringValue="FINE"/&gt;
        &lt;/L7p:AuditDetailAssertion&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
                        </l7:ResourceSet>
                    </l7:Resources>
                </l7:Policy>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Utility: Get PolicyObject Info</l7:Name>
            <l7:Id>c4706d99077459bed7ca5ef6c9e5488e</l7:Id>
            <l7:Type>POLICY</l7:Type>
            <l7:TimeStamp>2022-04-29T11:42:05.169-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Policy guid="8f33b165-bc16-4959-a524-aba67aff3cdf" id="c4706d99077459bed7ca5ef6c9e5488e" version="0">
                    <l7:PolicyDetail folderId="c4706d99077459bed7ca5ef6c9e62ecb" guid="8f33b165-bc16-4959-a524-aba67aff3cdf" id="c4706d99077459bed7ca5ef6c9e5488e" version="0">
                        <l7:Name>Utility: Get PolicyObject Info</l7:Name>
                        <l7:PolicyType>Include</l7:PolicyType>
                        <l7:Properties>
                            <l7:Property key="revision">
                                <l7:LongValue>1</l7:LongValue>
                            </l7:Property>
                            <l7:Property key="soap">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                        </l7:Properties>
                    </l7:PolicyDetail>
                    <l7:Resources>
                        <l7:ResourceSet tag="policy">
                            <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Policy fragment to extract the name and foldername of an object from Get All Policy XML output"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Outputs:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - name.result"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - folderPath.result"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v0.0.0 - Jay MacDonald - 20200921 - Initial Version"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:ResponseXpathAssertion&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Get the id of the source object"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:VariablePrefix stringValue="sourceId"/&gt;
            &lt;L7p:XmlMsgSrc stringValue="policyObject.xml"/&gt;
            &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                &lt;L7p:Expression stringValue="/PolicyXML/@sourceId"/&gt;
                &lt;L7p:Namespaces mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="s"/&gt;
                        &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="l7"/&gt;
                        &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Namespaces&gt;
                &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
            &lt;/L7p:XpathExpression&gt;
        &lt;/L7p:ResponseXpathAssertion&gt;
        &lt;L7p:ResponseXpathAssertion&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Get the type of the source object"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:VariablePrefix stringValue="sourceType"/&gt;
            &lt;L7p:XmlMsgSrc stringValue="policyObject.xml"/&gt;
            &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                &lt;L7p:Expression stringValue="/PolicyXML/@sourceType"/&gt;
                &lt;L7p:Namespaces mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="s"/&gt;
                        &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                    &lt;/L7p:entry&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="l7"/&gt;
                        &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Namespaces&gt;
                &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
            &lt;/L7p:XpathExpression&gt;
        &lt;/L7p:ResponseXpathAssertion&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Get name of Policy"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:VariablePrefix stringValue="name"/&gt;
                    &lt;L7p:XmlMsgSrc stringValue="policies.sorted"/&gt;
                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                        &lt;L7p:Expression stringValue="/Policies/Policy[@id=$sourceId.result]/Name"/&gt;
                        &lt;L7p:Namespaces mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="l7"/&gt;
                                &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Namespaces&gt;
                        &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                    &lt;/L7p:XpathExpression&gt;
                &lt;/L7p:ResponseXpathAssertion&gt;
                &lt;L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Get folderpath of Policy"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:VariablePrefix stringValue="folderPath"/&gt;
                    &lt;L7p:XmlMsgSrc stringValue="policies.sorted"/&gt;
                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                        &lt;L7p:Expression stringValue="/Policies/Policy[@id=$sourceId.result]/FolderPath"/&gt;
                        &lt;L7p:Namespaces mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="l7"/&gt;
                                &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Namespaces&gt;
                        &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                    &lt;/L7p:XpathExpression&gt;
                &lt;/L7p:ResponseXpathAssertion&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Try for Policy"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Get name of Service"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:VariablePrefix stringValue="name"/&gt;
                    &lt;L7p:XmlMsgSrc stringValue="services.sorted"/&gt;
                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                        &lt;L7p:Expression stringValue="/Services/Service[@id=$sourceId.result]/Name"/&gt;
                        &lt;L7p:Namespaces mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="l7"/&gt;
                                &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Namespaces&gt;
                        &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                    &lt;/L7p:XpathExpression&gt;
                &lt;/L7p:ResponseXpathAssertion&gt;
                &lt;L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Get folderpath of Service"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:VariablePrefix stringValue="folderPath"/&gt;
                    &lt;L7p:XmlMsgSrc stringValue="services.sorted"/&gt;
                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                        &lt;L7p:Expression stringValue="/Services/Service[@id=$sourceId.result]/FolderPath"/&gt;
                        &lt;L7p:Namespaces mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="l7"/&gt;
                                &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Namespaces&gt;
                        &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                    &lt;/L7p:XpathExpression&gt;
                &lt;/L7p:ResponseXpathAssertion&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Try for Service"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Get name and folderpath of Policy/Service"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:ExportVariables&gt;
            &lt;L7p:ExportedVars stringArrayValue="included"&gt;
                &lt;L7p:item stringValue="folderPath.result"/&gt;
                &lt;L7p:item stringValue="name.result"/&gt;
                &lt;L7p:item stringValue="sourceId.result"/&gt;
                &lt;L7p:item stringValue="sourceType.result"/&gt;
            &lt;/L7p:ExportedVars&gt;
        &lt;/L7p:ExportVariables&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
                        </l7:ResourceSet>
                    </l7:Resources>
                </l7:Policy>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Utility: HTML Escape String</l7:Name>
            <l7:Id>c4706d99077459bed7ca5ef6c9e59800</l7:Id>
            <l7:Type>POLICY</l7:Type>
            <l7:TimeStamp>2022-04-29T11:42:05.170-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Policy guid="58c91da2-50ba-48ff-800c-1c96ad9659c0" id="c4706d99077459bed7ca5ef6c9e59800" version="0">
                    <l7:PolicyDetail folderId="c4706d99077459bed7ca5ef6c9e62ecb" guid="58c91da2-50ba-48ff-800c-1c96ad9659c0" id="c4706d99077459bed7ca5ef6c9e59800" version="0">
                        <l7:Name>Utility: HTML Escape String</l7:Name>
                        <l7:PolicyType>Include</l7:PolicyType>
                        <l7:Properties>
                            <l7:Property key="revision">
                                <l7:LongValue>1</l7:LongValue>
                            </l7:Property>
                            <l7:Property key="soap">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                        </l7:Properties>
                    </l7:PolicyDetail>
                    <l7:Resources>
                        <l7:ResourceSet tag="policy">
                            <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Policy fragment for &amp;quot;Utility: Escape HTML String&amp;quot; encapsulated assertion"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Call Use regular expressions to escape a string for HTML"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Inputs:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - escapedString (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Outputs:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - escapedString (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v1.0.0 - Jay MacDonald - 20201107 - Initial Version"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:Regex&gt;
            &lt;L7p:AutoTarget booleanValue="false"/&gt;
            &lt;L7p:OtherTargetMessageVariable stringValue="escapedString"/&gt;
            &lt;L7p:Regex stringValue="&amp;amp;"/&gt;
            &lt;L7p:Replace booleanValue="true"/&gt;
            &lt;L7p:Replacement stringValue="&amp;amp;amp;"/&gt;
            &lt;L7p:Target target="OTHER"/&gt;
        &lt;/L7p:Regex&gt;
        &lt;L7p:Regex&gt;
            &lt;L7p:AutoTarget booleanValue="false"/&gt;
            &lt;L7p:OtherTargetMessageVariable stringValue="escapedString"/&gt;
            &lt;L7p:Regex stringValue="&amp;lt;"/&gt;
            &lt;L7p:Replace booleanValue="true"/&gt;
            &lt;L7p:Replacement stringValue="&amp;amp;lt;"/&gt;
            &lt;L7p:Target target="OTHER"/&gt;
        &lt;/L7p:Regex&gt;
        &lt;L7p:Regex&gt;
            &lt;L7p:AutoTarget booleanValue="false"/&gt;
            &lt;L7p:OtherTargetMessageVariable stringValue="escapedString"/&gt;
            &lt;L7p:Regex stringValue="&gt;"/&gt;
            &lt;L7p:Replace booleanValue="true"/&gt;
            &lt;L7p:Replacement stringValue="&amp;amp;gt;"/&gt;
            &lt;L7p:Target target="OTHER"/&gt;
        &lt;/L7p:Regex&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
                        </l7:ResourceSet>
                    </l7:Resources>
                </l7:Policy>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Utility: List Identity Providers</l7:Name>
            <l7:Id>c4706d99077459bed7ca5ef6c9e624a3</l7:Id>
            <l7:Type>POLICY</l7:Type>
            <l7:TimeStamp>2022-04-29T11:42:05.175-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Policy guid="7618087f-f586-421d-aeb4-68541e0ebf3a" id="c4706d99077459bed7ca5ef6c9e624a3" version="0">
                    <l7:PolicyDetail folderId="c4706d99077459bed7ca5ef6c9e62ecb" guid="7618087f-f586-421d-aeb4-68541e0ebf3a" id="c4706d99077459bed7ca5ef6c9e624a3" version="0">
                        <l7:Name>Utility: List Identity Providers</l7:Name>
                        <l7:PolicyType>Include</l7:PolicyType>
                        <l7:Properties>
                            <l7:Property key="revision">
                                <l7:LongValue>1</l7:LongValue>
                            </l7:Property>
                            <l7:Property key="soap">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                        </l7:Properties>
                    </l7:PolicyDetail>
                    <l7:Resources>
                        <l7:ResourceSet tag="policy">
                            <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Policy fragment for &amp;quot;Utility: List Identity Providers&amp;quot; encapsulated assertion"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Call Restman and generate a sorted list of identity providers"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** - Assumes an admin role user has been authenticated"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** - Caches results for ${cacheAge} seconds (default=300). To refresh the cache set ${refresh}=true when calling"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** - Returns a text/xml message variable in ${identityProviders.sorted}"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Inputs:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - refresh (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - cacheAge (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Outputs:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - identityProviders.sorted (message)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - error.msg (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v1.0.0 - Jay MacDonald - 20201107 - Initial Version"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:AuditDetailAssertion&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// FINE"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Detail stringValue="==&gt; Entering Utility Fragment: ${policy.name} (refresh=${refresh})"/&gt;
            &lt;L7p:Level stringValue="FINE"/&gt;
        &lt;/L7p:AuditDetailAssertion&gt;
        &lt;wsp:All wsp:Usage="Required"&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** ${identityProviders.sorted} has the following schema:"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** "/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** &amp;lt;IdentityProviders source=&amp;quot;system|cache&amp;quot;&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   &amp;lt;IdentityProvider id=&amp;quot;string&amp;quot;&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;Name&gt;string&amp;lt;/Name&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;Type&gt;string&amp;lt;/Type&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   &amp;lt;/IdentityProvider&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   ..."/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** &amp;lt;/IdentityProviders&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** "/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** Where:"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   Name = the name of the identity provider"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   Type = the type of identity provider"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Description of ${identityProviders.sorted}"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:All&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// true or false"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${cacheAge}"/&gt;
                &lt;L7p:Operator operatorNull="null"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item dataType="included"&gt;
                        &lt;L7p:Type variableDataType="int"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;L7p:item binary="included"&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Operator operator="GT"/&gt;
                        &lt;L7p:RightValue stringValue="0"/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="MzAw"/&gt;
                &lt;L7p:DataType variableDataType="int"/&gt;
                &lt;L7p:VariableToSet stringValue="cacheAge"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Ensure ${cacheAge} is set, default=300"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// true or false"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${refresh}"/&gt;
                &lt;L7p:Operator operatorNull="null"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item dataType="included"&gt;
                        &lt;L7p:Type variableDataType="string"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;L7p:item regex="included"&gt;
                        &lt;L7p:Pattern stringValue="^(true|false)$"/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="ZmFsc2U="/&gt;
                &lt;L7p:VariableToSet stringValue="refresh"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Ensure ${refresh} is set, default=false"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="aWRlbnRpdHlQcm92aWRlcnMuc29ydGVk"/&gt;
            &lt;L7p:VariableToSet stringValue="cacheKey"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${refresh}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="string"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:RightValue stringValue="true"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:CacheLookup&gt;
                    &lt;L7p:CacheEntryKey stringValue="${cacheKey}"/&gt;
                    &lt;L7p:CacheId stringValue="identityProviderList"/&gt;
                    &lt;L7p:ContentTypeOverride stringValue=""/&gt;
                    &lt;L7p:MaxEntryAgeSeconds stringValue="${cacheAge}"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="identityProviders.sorted"/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                &lt;/L7p:CacheLookup&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="Y2FjaGU="/&gt;
                    &lt;L7p:VariableToSet stringValue="source"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// FINE"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; Found identityProviders.sorted in the cache"/&gt;
                    &lt;L7p:Level stringValue="FINE"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Look in cache unless asked to refresh cache"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:Encapsulated&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// GET identityProviders"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="c8a5a0d5-1ae2-4144-b538-5c311efc1560"/&gt;
                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Call Restman"/&gt;
                    &lt;L7p:Parameters mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="element"/&gt;
                            &lt;L7p:value stringValue="IdentityProvider"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="message"/&gt;
                            &lt;L7p:value stringValue=""/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="method"/&gt;
                            &lt;L7p:value stringValue="GET"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="resource"/&gt;
                            &lt;L7p:value stringValue="identityProviders"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Parameters&gt;
                &lt;/L7p:Encapsulated&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:VariablePrefix stringValue="identityProviders"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:List/l7:Item/l7:Resource/l7:IdentityProvider"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:TrueAssertion/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Extract the list of identity providers, never fail"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz48SWRlbnRpdHlQcm92aWRlcnM+"/&gt;
                    &lt;L7p:VariableToSet stringValue="identityProviders.sorted"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:ForEachLoop L7p:Usage="Required"
                    loopVariable="identityProviders.elements" variablePrefix="identityProvider"&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cast to message type for parsing"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:Base64Expression stringValue="JHtpZGVudGl0eVByb3ZpZGVyLmN1cnJlbnR9"/&gt;
                        &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                        &lt;L7p:DataType variableDataType="message"/&gt;
                        &lt;L7p:VariableToSet stringValue="identityProvider.xml"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Retrieve the identity provider ID"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="id"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="identityProvider.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:IdentityProvider/@id"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// retrieve the identity provider name"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="name"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="identityProvider.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:IdentityProvider/l7:Name"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Retrieve the identity provider type"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="type"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="identityProvider.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:IdentityProvider/l7:IdentityProviderType"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="JHtpZGVudGl0eVByb3ZpZGVycy5zb3J0ZWR9PElkZW50aXR5UHJvdmlkZXIgaWQ9IiR7aWQucmVzdWx0fSI+PE5hbWU+PCFbQ0RBVEFbJHtuYW1lLnJlc3VsdH1dXT48L05hbWU+PFR5cGU+JHt0eXBlLnJlc3VsdH08L1R5cGU+PC9JZGVudGl0eVByb3ZpZGVyPg=="/&gt;
                        &lt;L7p:VariableToSet stringValue="identityProviders.sorted"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Build the list of identity provider"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/L7p:ForEachLoop&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtpZGVudGl0eVByb3ZpZGVycy5zb3J0ZWR9PC9JZGVudGl0eVByb3ZpZGVycz4="/&gt;
                    &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                    &lt;L7p:DataType variableDataType="message"/&gt;
                    &lt;L7p:VariableToSet stringValue="identityProviders.sorted"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:XslTransformation&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Sort the identity providers by name"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Direction intValue="-1"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="identityProviders.sorted"/&gt;
                    &lt;L7p:ResourceInfo staticResourceInfo="included"&gt;
                        &lt;L7p:Document stringValueReference="inline"&gt;&lt;![CDATA[&lt;xsl:stylesheet version="1.0" xmlns:l7="http://ns.l7tech.com/2010/04/gateway-management" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;

&lt;xsl:template match="/IdentityProviders"&gt;
    &lt;xsl:copy&gt;
        &lt;xsl:for-each select="IdentityProvider"&gt;
            &lt;xsl:sort select="./Name"/&gt;
            &lt;xsl:copy-of select="."/&gt;
        &lt;/xsl:for-each&gt;
    &lt;/xsl:copy&gt;
&lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;]]&gt;&lt;/L7p:Document&gt;
                    &lt;/L7p:ResourceInfo&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                    &lt;L7p:TransformName stringValue=""/&gt;
                    &lt;L7p:XsltVersion stringValue="1.0"/&gt;
                &lt;/L7p:XslTransformation&gt;
                &lt;L7p:CacheStorage&gt;
                    &lt;L7p:CacheEntryKey stringValue="${cacheKey}"/&gt;
                    &lt;L7p:CacheId stringValue="identityProviderList"/&gt;
                    &lt;L7p:MaxEntries stringValue="1"/&gt;
                    &lt;L7p:MaxEntryAgeSeconds stringValue="${cacheAge}"/&gt;
                    &lt;L7p:MaxEntrySizeBytes stringValue="200000"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="identityProviders.sorted"/&gt;
                    &lt;L7p:StoreSoapFaults booleanValue="true"/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                &lt;/L7p:CacheStorage&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="c3lzdGVt"/&gt;
                    &lt;L7p:VariableToSet stringValue="source"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// FINE"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; Loaded identityProviders.sorted from system and stored to cache"/&gt;
                    &lt;L7p:Level stringValue="FINE"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Retrieve new list and cache"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="RXJyb3Igd2hlbiBsaXN0aW5nIGlkZW50aXR5IHByb3ZpZGVycw=="/&gt;
                    &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// WARNING"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; Error listing identity providers in ${policy.name}"/&gt;
                    &lt;L7p:Level stringValue="WARNING"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:FalseAssertion/&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Failure - set ${error.msg}"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Caching logic"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:Regex&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Add source attribute to /IdentityProviders element"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:AutoTarget booleanValue="false"/&gt;
            &lt;L7p:OtherTargetMessageVariable stringValue="identityProviders.sorted"/&gt;
            &lt;L7p:Regex stringValue="&amp;lt;IdentityProviders&gt;"/&gt;
            &lt;L7p:Replace booleanValue="true"/&gt;
            &lt;L7p:Replacement stringValue="&amp;lt;IdentityProviders source=&amp;quot;${source}&amp;quot;&gt;"/&gt;
            &lt;L7p:Target target="OTHER"/&gt;
        &lt;/L7p:Regex&gt;
        &lt;L7p:AuditDetailAssertion&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// FINE"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Detail stringValue="==&gt; Leaving Utility Fragment: ${policy.name}"/&gt;
            &lt;L7p:Level stringValue="FINE"/&gt;
        &lt;/L7p:AuditDetailAssertion&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
                        </l7:ResourceSet>
                    </l7:Resources>
                </l7:Policy>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Utility: List JMS Destinations</l7:Name>
            <l7:Id>c4706d99077459bed7ca5ef6c9e64a12</l7:Id>
            <l7:Type>POLICY</l7:Type>
            <l7:TimeStamp>2022-04-29T11:42:05.183-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Policy guid="ce8a2a1e-7f41-470c-aa4a-0203afefb27c" id="c4706d99077459bed7ca5ef6c9e64a12" version="0">
                    <l7:PolicyDetail folderId="c4706d99077459bed7ca5ef6c9e62ecb" guid="ce8a2a1e-7f41-470c-aa4a-0203afefb27c" id="c4706d99077459bed7ca5ef6c9e64a12" version="0">
                        <l7:Name>Utility: List JMS Destinations</l7:Name>
                        <l7:PolicyType>Include</l7:PolicyType>
                        <l7:Properties>
                            <l7:Property key="revision">
                                <l7:LongValue>1</l7:LongValue>
                            </l7:Property>
                            <l7:Property key="soap">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                        </l7:Properties>
                    </l7:PolicyDetail>
                    <l7:Resources>
                        <l7:ResourceSet tag="policy">
                            <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Policy fragment for &amp;quot;Utility: List JMS Destinations&amp;quot; encapsulated assertion"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Call Restman and generate a sorted list of JMS destinations"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** - Assumes an admin role user has been authenticated"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** - Caches results for ${cacheAge} seconds (default=300). To refresh the cache set ${refresh}=true when calling"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** - Returns a text/xml message variable in ${jmsDestinations.sorted}"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Inputs:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - refresh (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - cacheAge (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Outputs:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - jmsDestinations.sorted (message)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - error.msg (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v1.0.0 - Jay MacDonald - 20201107 - Initial Version"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:AuditDetailAssertion&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// FINE"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Detail stringValue="==&gt; Entering Utility Fragment: ${policy.name} (refresh=${refresh})"/&gt;
            &lt;L7p:Level stringValue="FINE"/&gt;
        &lt;/L7p:AuditDetailAssertion&gt;
        &lt;wsp:All wsp:Usage="Required"&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** ${jmsDestinations.sorted} has the following schema:"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** "/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** &amp;lt;JMSDestinations source=&amp;quot;system|cache&amp;quot;&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   &amp;lt;JMSDestination id=&amp;quot;string&amp;quot;&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;Name&gt;string&amp;lt;/Name&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;Type&gt;string&amp;lt;/Type&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;Direction&gt;string&amp;lt;/Direction&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;Enabled&gt;string&amp;lt;/Enabled&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;IsTemplate&gt;string&amp;lt;/IsTemplate&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   &amp;lt;/JMSDestination&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   ..."/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** &amp;lt;/JMSDestinations&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** "/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** Where:"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   Name = the name of the JMS destination"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Description of ${jmsDestinations.sorted}"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:All&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// true or false"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${cacheAge}"/&gt;
                &lt;L7p:Operator operatorNull="null"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item dataType="included"&gt;
                        &lt;L7p:Type variableDataType="int"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;L7p:item binary="included"&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Operator operator="GT"/&gt;
                        &lt;L7p:RightValue stringValue="0"/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="MzAw"/&gt;
                &lt;L7p:DataType variableDataType="int"/&gt;
                &lt;L7p:VariableToSet stringValue="cacheAge"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Ensure ${cacheAge} is set, default=300"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// true or false"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${refresh}"/&gt;
                &lt;L7p:Operator operatorNull="null"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item dataType="included"&gt;
                        &lt;L7p:Type variableDataType="string"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;L7p:item regex="included"&gt;
                        &lt;L7p:Pattern stringValue="^(true|false)$"/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="ZmFsc2U="/&gt;
                &lt;L7p:VariableToSet stringValue="refresh"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Ensure ${refresh} is set, default=false"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="am1zRGVzdGluYXRpb25zLnNvcnRlZA=="/&gt;
            &lt;L7p:VariableToSet stringValue="cacheKey"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${refresh}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="string"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:RightValue stringValue="true"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:CacheLookup&gt;
                    &lt;L7p:CacheEntryKey stringValue="${cacheKey}"/&gt;
                    &lt;L7p:CacheId stringValue="jmsDestinationList"/&gt;
                    &lt;L7p:ContentTypeOverride stringValue=""/&gt;
                    &lt;L7p:MaxEntryAgeSeconds stringValue="${cacheAge}"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="jmsDestinations.sorted"/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                &lt;/L7p:CacheLookup&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="Y2FjaGU="/&gt;
                    &lt;L7p:VariableToSet stringValue="source"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// FINE"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; Found jmsDestinations.sorted in the cache"/&gt;
                    &lt;L7p:Level stringValue="FINE"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Look in cache unless asked to refresh cache"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:Encapsulated&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// GET jmsDestinations"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="c8a5a0d5-1ae2-4144-b538-5c311efc1560"/&gt;
                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Call Restman"/&gt;
                    &lt;L7p:Parameters mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="element"/&gt;
                            &lt;L7p:value stringValue="JMSDestination"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="message"/&gt;
                            &lt;L7p:value stringValue=""/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="method"/&gt;
                            &lt;L7p:value stringValue="GET"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="resource"/&gt;
                            &lt;L7p:value stringValue="jmsDestinations"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Parameters&gt;
                &lt;/L7p:Encapsulated&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:VariablePrefix stringValue="jmsDestinations"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:List/l7:Item/l7:Resource/l7:JMSDestination"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:TrueAssertion/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Extract the list of JMS destinations, never fail"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz48Sk1TRGVzdGluYXRpb25zPg=="/&gt;
                    &lt;L7p:VariableToSet stringValue="jmsDestinations.sorted"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:ForEachLoop L7p:Usage="Required"
                    loopVariable="jmsDestinations.elements" variablePrefix="jmsDestination"&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cast to message type for parsing"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:Base64Expression stringValue="JHtqbXNEZXN0aW5hdGlvbi5jdXJyZW50fQ=="/&gt;
                        &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                        &lt;L7p:DataType variableDataType="message"/&gt;
                        &lt;L7p:VariableToSet stringValue="jmsDestination.xml"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Retrieve the JMS destination ID"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="id"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="jmsDestination.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:JMSDestination/@id"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// retrieve the JMS destination name"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="name"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="jmsDestination.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:JMSDestination/l7:JMSDestinationDetail/l7:Name"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// retrieve the JMS Destination enabled state"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="enabled"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="jmsDestination.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:JMSDestination/l7:JMSDestinationDetail/l7:Enabled"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// retrieve the JMS Destination direction"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="inbound"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="jmsDestination.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:JMSDestination/l7:JMSDestinationDetail/l7:Inbound"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                        &lt;wsp:All wsp:Usage="Required"&gt;
                            &lt;L7p:ComparisonAssertion&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:Expression1 stringValue="${inbound.result}"/&gt;
                                &lt;L7p:Operator operatorNull="null"/&gt;
                                &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="boolean"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="true"/&gt;
                                    &lt;/L7p:item&gt;
                                &lt;/L7p:Predicates&gt;
                            &lt;/L7p:ComparisonAssertion&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="aW5ib3VuZA=="/&gt;
                                &lt;L7p:VariableToSet stringValue="direction"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${inbound.result} == false"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:All&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="b3V0Ym91bmQ="/&gt;
                            &lt;L7p:VariableToSet stringValue="direction"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Set ${direction} per ${inbound.result}"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// retrieve the JMS Destination template state"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="template"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="jmsDestination.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:JMSDestination/l7:JMSDestinationDetail/l7:Template"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                        &lt;L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// retrieve the JMS Destination enabled state"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:VariablePrefix stringValue="type"/&gt;
                            &lt;L7p:XmlMsgSrc stringValue="jmsDestination.xml"/&gt;
                            &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                &lt;L7p:Expression stringValue="/l7:JMSDestination/l7:JMSConnection/l7:ProviderType"/&gt;
                                &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Namespaces&gt;
                                &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                            &lt;/L7p:XpathExpression&gt;
                        &lt;/L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="R2VuZXJpYyBKTVM="/&gt;
                            &lt;L7p:VariableToSet stringValue="type.result"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Check for ProviderType element. If missing the assume Generic JMS"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="JHtqbXNEZXN0aW5hdGlvbnMuc29ydGVkfTxKTVNEZXN0aW5hdGlvbiBpZD0iJHtpZC5yZXN1bHR9Ij48TmFtZT48IVtDREFUQVske25hbWUucmVzdWx0fV1dPjwvTmFtZT48RGlyZWN0aW9uPiR7ZGlyZWN0aW9ufTwvRGlyZWN0aW9uPjxJc1RlbXBsYXRlPiR7dGVtcGxhdGUucmVzdWx0fTwvSXNUZW1wbGF0ZT48RW5hYmxlZD4ke2VuYWJsZWQucmVzdWx0fTwvRW5hYmxlZD48VHlwZT4ke3R5cGUucmVzdWx0fTwvVHlwZT48L0pNU0Rlc3RpbmF0aW9uPg=="/&gt;
                        &lt;L7p:VariableToSet stringValue="jmsDestinations.sorted"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Build the list of JMS destinations"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/L7p:ForEachLoop&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtqbXNEZXN0aW5hdGlvbnMuc29ydGVkfTwvSk1TRGVzdGluYXRpb25zPg=="/&gt;
                    &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                    &lt;L7p:DataType variableDataType="message"/&gt;
                    &lt;L7p:VariableToSet stringValue="jmsDestinations.sorted"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:XslTransformation&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Sort the JMS destinations by name"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Direction intValue="-1"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="jmsDestinations.sorted"/&gt;
                    &lt;L7p:ResourceInfo staticResourceInfo="included"&gt;
                        &lt;L7p:Document stringValueReference="inline"&gt;&lt;![CDATA[&lt;xsl:stylesheet version="1.0" xmlns:l7="http://ns.l7tech.com/2010/04/gateway-management" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;

&lt;xsl:template match="/JMSDestinations"&gt;
    &lt;xsl:copy&gt;
        &lt;xsl:for-each select="JMSDestination"&gt;
            &lt;xsl:sort select="./Name"/&gt;
            &lt;xsl:copy-of select="."/&gt;
        &lt;/xsl:for-each&gt;
    &lt;/xsl:copy&gt;
&lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;]]&gt;&lt;/L7p:Document&gt;
                    &lt;/L7p:ResourceInfo&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                    &lt;L7p:TransformName stringValue=""/&gt;
                    &lt;L7p:XsltVersion stringValue="1.0"/&gt;
                &lt;/L7p:XslTransformation&gt;
                &lt;L7p:CacheStorage&gt;
                    &lt;L7p:CacheEntryKey stringValue="${cacheKey}"/&gt;
                    &lt;L7p:CacheId stringValue="jmsDestinationList"/&gt;
                    &lt;L7p:MaxEntries stringValue="1"/&gt;
                    &lt;L7p:MaxEntryAgeSeconds stringValue="${cacheAge}"/&gt;
                    &lt;L7p:MaxEntrySizeBytes stringValue="200000"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="jmsDestinations.sorted"/&gt;
                    &lt;L7p:StoreSoapFaults booleanValue="true"/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                &lt;/L7p:CacheStorage&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="c3lzdGVt"/&gt;
                    &lt;L7p:VariableToSet stringValue="source"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// FINE"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; Loaded jmsDestinations.sorted from system and stored to cache"/&gt;
                    &lt;L7p:Level stringValue="FINE"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Retrieve new list and cache"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="RXJyb3Igd2hlbiBsaXN0aW5nIEpNUyBkZXN0aW5hdGlvbnM="/&gt;
                    &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// WARNING"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; Error listing JMS destinations in ${policy.name}"/&gt;
                    &lt;L7p:Level stringValue="WARNING"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:FalseAssertion/&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Failure - set ${error.msg}"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Caching logic"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:Regex&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Add source attribute to /JMSDestinations element"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:AutoTarget booleanValue="false"/&gt;
            &lt;L7p:OtherTargetMessageVariable stringValue="jmsDestinations.sorted"/&gt;
            &lt;L7p:Regex stringValue="&amp;lt;JMSDestinations&gt;"/&gt;
            &lt;L7p:Replace booleanValue="true"/&gt;
            &lt;L7p:Replacement stringValue="&amp;lt;JMSDestinations source=&amp;quot;${source}&amp;quot;&gt;"/&gt;
            &lt;L7p:Target target="OTHER"/&gt;
        &lt;/L7p:Regex&gt;
        &lt;L7p:AuditDetailAssertion&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// FINE"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Detail stringValue="==&gt; Leaving Utility Fragment: ${policy.name}"/&gt;
            &lt;L7p:Level stringValue="FINE"/&gt;
        &lt;/L7p:AuditDetailAssertion&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
                        </l7:ResourceSet>
                    </l7:Resources>
                </l7:Policy>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Utility: List Secure Passwords</l7:Name>
            <l7:Id>c4706d99077459bed7ca5ef6c9e65c43</l7:Id>
            <l7:Type>POLICY</l7:Type>
            <l7:TimeStamp>2022-04-29T11:42:05.188-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Policy guid="18f3eb02-e82b-42a4-843a-276dfb2b0bfe" id="c4706d99077459bed7ca5ef6c9e65c43" version="0">
                    <l7:PolicyDetail folderId="c4706d99077459bed7ca5ef6c9e62ecb" guid="18f3eb02-e82b-42a4-843a-276dfb2b0bfe" id="c4706d99077459bed7ca5ef6c9e65c43" version="0">
                        <l7:Name>Utility: List Secure Passwords</l7:Name>
                        <l7:PolicyType>Include</l7:PolicyType>
                        <l7:Properties>
                            <l7:Property key="revision">
                                <l7:LongValue>1</l7:LongValue>
                            </l7:Property>
                            <l7:Property key="soap">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                        </l7:Properties>
                    </l7:PolicyDetail>
                    <l7:Resources>
                        <l7:ResourceSet tag="policy">
                            <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Policy fragment for &amp;quot;Utility: List Secure Passwords&amp;quot; encapsulated assertion"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Call Restman and generate a sorted list of secure passwords"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** - Assumes an admin role user has been authenticated"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** - Caches results for ${cacheAge} seconds (default=300). To refresh the cache set ${refresh}=true when calling"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** - Returns a text/xml message variable in ${securePasswords.sorted}"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Inputs:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - refresh (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - cacheAge (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Outputs:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - securePasswords.sorted (message)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - error.msg (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v1.0.0 - Jay MacDonald - 20201107 - Initial Version"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:AuditDetailAssertion&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// FINE"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Detail stringValue="==&gt; Entering Utility Fragment: ${policy.name} (refresh=${refresh})"/&gt;
            &lt;L7p:Level stringValue="FINE"/&gt;
        &lt;/L7p:AuditDetailAssertion&gt;
        &lt;wsp:All wsp:Usage="Required"&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** ${securePasswords.sorted} has the following schema:"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** "/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** &amp;lt;SecurePasswords source=&amp;quot;system|cache&amp;quot;&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   &amp;lt;SecurePassword id=&amp;quot;string&amp;quot;&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;Name&gt;string&amp;lt;/Name&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;Type&gt;string&amp;lt;/Type&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;Description&gt;string&amp;lt;/Description&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;UsageFromVariable&gt;boolean&amp;lt;/UsageFromVariable&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   &amp;lt;/SecurePassword&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   ..."/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** &amp;lt;/SecurePasswords&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** "/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** Where:"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   Name = the name of the secure password"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   Type = the type of secure password"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   Description = the description field"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   UsageFromPassword = true or false"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Description of ${securePasswords.sorted}"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:All&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// true or false"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${cacheAge}"/&gt;
                &lt;L7p:Operator operatorNull="null"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item dataType="included"&gt;
                        &lt;L7p:Type variableDataType="int"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;L7p:item binary="included"&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Operator operator="GT"/&gt;
                        &lt;L7p:RightValue stringValue="0"/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="MzAw"/&gt;
                &lt;L7p:DataType variableDataType="int"/&gt;
                &lt;L7p:VariableToSet stringValue="cacheAge"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Ensure ${cacheAge} is set, default=300"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// true or false"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${refresh}"/&gt;
                &lt;L7p:Operator operatorNull="null"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item dataType="included"&gt;
                        &lt;L7p:Type variableDataType="string"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;L7p:item regex="included"&gt;
                        &lt;L7p:Pattern stringValue="^(true|false)$"/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="ZmFsc2U="/&gt;
                &lt;L7p:VariableToSet stringValue="refresh"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Ensure ${refresh} is set, default=false"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="c2VjdXJlUGFzc3dvcmRzLnNvcnRlZA=="/&gt;
            &lt;L7p:VariableToSet stringValue="cacheKey"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${refresh}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="string"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:RightValue stringValue="true"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:CacheLookup&gt;
                    &lt;L7p:CacheEntryKey stringValue="${cacheKey}"/&gt;
                    &lt;L7p:CacheId stringValue="securePasswordList"/&gt;
                    &lt;L7p:ContentTypeOverride stringValue=""/&gt;
                    &lt;L7p:MaxEntryAgeSeconds stringValue="${cacheAge}"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="securePasswords.sorted"/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                &lt;/L7p:CacheLookup&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="Y2FjaGU="/&gt;
                    &lt;L7p:VariableToSet stringValue="source"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// FINE"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; Found securePasswords.sorted in the cache"/&gt;
                    &lt;L7p:Level stringValue="FINE"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Look in cache unless asked to refresh cache"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:Encapsulated&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// GET passwords"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="c8a5a0d5-1ae2-4144-b538-5c311efc1560"/&gt;
                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Call Restman"/&gt;
                    &lt;L7p:Parameters mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="element"/&gt;
                            &lt;L7p:value stringValue="StoredPassword"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="message"/&gt;
                            &lt;L7p:value stringValue=""/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="method"/&gt;
                            &lt;L7p:value stringValue="GET"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="resource"/&gt;
                            &lt;L7p:value stringValue="passwords"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Parameters&gt;
                &lt;/L7p:Encapsulated&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:VariablePrefix stringValue="securePasswords"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:List/l7:Item/l7:Resource/l7:StoredPassword"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:TrueAssertion/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Extract the list of secure passwords, never fail"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz48U2VjdXJlUGFzc3dvcmRzPg=="/&gt;
                    &lt;L7p:VariableToSet stringValue="securePasswords.sorted"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:ForEachLoop L7p:Usage="Required"
                    loopVariable="securePasswords.elements" variablePrefix="securePassword"&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cast to message type for parsing"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:Base64Expression stringValue="JHtzZWN1cmVQYXNzd29yZC5jdXJyZW50fQ=="/&gt;
                        &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                        &lt;L7p:DataType variableDataType="message"/&gt;
                        &lt;L7p:VariableToSet stringValue="securePassword.xml"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Retrieve the secure password ID"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="id"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="securePassword.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:StoredPassword/@id"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// retrieve the secure password name"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="name"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="securePassword.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:StoredPassword/l7:Name"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// retrieve the secure password type"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="type"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="securePassword.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:StoredPassword/l7:Properties/l7:Property[@key=&amp;quot;type&amp;quot;]/l7:StringValue"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Retrieve the secure password description"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="description"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="securePassword.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:StoredPassword/l7:Properties/l7:Property[@key=&amp;quot;description&amp;quot;]/l7:StringValue"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Retrieve the usage from variable state"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="usageFromVariable"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="securePassword.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:StoredPassword/l7:Properties/l7:Property[@key=&amp;quot;usageFromVariable&amp;quot;]/l7:BooleanValue"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="JHtzZWN1cmVQYXNzd29yZHMuc29ydGVkfTxTZWN1cmVQYXNzd29yZCBpZD0iJHtpZC5yZXN1bHR9Ij48TmFtZT48IVtDREFUQVske25hbWUucmVzdWx0fV1dPjwvTmFtZT48VHlwZT4ke3R5cGUucmVzdWx0fTwvVHlwZT48RGVzY3JpcHRpb24+PCFbQ0RBVEFbJHtkZXNjcmlwdGlvbi5yZXN1bHR9XV0+PC9EZXNjcmlwdGlvbj48VXNhZ2VGcm9tVmFyaWFibGU+JHt1c2FnZUZyb21WYXJpYWJsZS5yZXN1bHR9PC9Vc2FnZUZyb21WYXJpYWJsZT48L1NlY3VyZVBhc3N3b3JkPg=="/&gt;
                        &lt;L7p:VariableToSet stringValue="securePasswords.sorted"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Build the list of secure passwords"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/L7p:ForEachLoop&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtzZWN1cmVQYXNzd29yZHMuc29ydGVkfTwvU2VjdXJlUGFzc3dvcmRzPg=="/&gt;
                    &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                    &lt;L7p:DataType variableDataType="message"/&gt;
                    &lt;L7p:VariableToSet stringValue="securePasswords.sorted"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:XslTransformation&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Sort the secure passwords by name"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Direction intValue="-1"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="securePasswords.sorted"/&gt;
                    &lt;L7p:ResourceInfo staticResourceInfo="included"&gt;
                        &lt;L7p:Document stringValueReference="inline"&gt;&lt;![CDATA[&lt;xsl:stylesheet version="1.0" xmlns:l7="http://ns.l7tech.com/2010/04/gateway-management" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;

&lt;xsl:template match="/SecurePasswords"&gt;
    &lt;xsl:copy&gt;
        &lt;xsl:for-each select="SecurePassword"&gt;
            &lt;xsl:sort select="./Name"/&gt;
            &lt;xsl:copy-of select="."/&gt;
        &lt;/xsl:for-each&gt;
    &lt;/xsl:copy&gt;
&lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;]]&gt;&lt;/L7p:Document&gt;
                    &lt;/L7p:ResourceInfo&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                    &lt;L7p:TransformName stringValue=""/&gt;
                    &lt;L7p:XsltVersion stringValue="1.0"/&gt;
                &lt;/L7p:XslTransformation&gt;
                &lt;L7p:CacheStorage&gt;
                    &lt;L7p:CacheEntryKey stringValue="${cacheKey}"/&gt;
                    &lt;L7p:CacheId stringValue="securePasswordList"/&gt;
                    &lt;L7p:MaxEntries stringValue="1"/&gt;
                    &lt;L7p:MaxEntryAgeSeconds stringValue="${cacheAge}"/&gt;
                    &lt;L7p:MaxEntrySizeBytes stringValue="200000"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="securePasswords.sorted"/&gt;
                    &lt;L7p:StoreSoapFaults booleanValue="true"/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                &lt;/L7p:CacheStorage&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="c3lzdGVt"/&gt;
                    &lt;L7p:VariableToSet stringValue="source"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// FINE"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; Loaded securePasswords.sorted from system and stored to cache"/&gt;
                    &lt;L7p:Level stringValue="FINE"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Retrieve new list and cache"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="RXJyb3Igd2hlbiBsaXN0aW5nIHNlY3VyZSBwYXNzd29yZHM="/&gt;
                    &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// WARNING"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; Error listing secure passwords in ${policy.name}"/&gt;
                    &lt;L7p:Level stringValue="WARNING"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:FalseAssertion/&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Failure - set ${error.msg}"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Caching logic"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:Regex&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Add source attribute to /SecurePasswords element"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:AutoTarget booleanValue="false"/&gt;
            &lt;L7p:OtherTargetMessageVariable stringValue="securePasswords.sorted"/&gt;
            &lt;L7p:Regex stringValue="&amp;lt;SecurePasswords&gt;"/&gt;
            &lt;L7p:Replace booleanValue="true"/&gt;
            &lt;L7p:Replacement stringValue="&amp;lt;SecurePasswords source=&amp;quot;${source}&amp;quot;&gt;"/&gt;
            &lt;L7p:Target target="OTHER"/&gt;
        &lt;/L7p:Regex&gt;
        &lt;L7p:AuditDetailAssertion&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// FINE"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Detail stringValue="==&gt; Leaving Utility Fragment: ${policy.name}"/&gt;
            &lt;L7p:Level stringValue="FINE"/&gt;
        &lt;/L7p:AuditDetailAssertion&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
                        </l7:ResourceSet>
                    </l7:Resources>
                </l7:Policy>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Utility: List SiteMinder Configurations</l7:Name>
            <l7:Id>c4706d99077459bed7ca5ef6c9e688cb</l7:Id>
            <l7:Type>POLICY</l7:Type>
            <l7:TimeStamp>2022-04-29T11:42:05.194-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Policy guid="4551eaad-90f5-467f-ba1d-c134ab0d3096" id="c4706d99077459bed7ca5ef6c9e688cb" version="0">
                    <l7:PolicyDetail folderId="c4706d99077459bed7ca5ef6c9e62ecb" guid="4551eaad-90f5-467f-ba1d-c134ab0d3096" id="c4706d99077459bed7ca5ef6c9e688cb" version="0">
                        <l7:Name>Utility: List SiteMinder Configurations</l7:Name>
                        <l7:PolicyType>Include</l7:PolicyType>
                        <l7:Properties>
                            <l7:Property key="revision">
                                <l7:LongValue>1</l7:LongValue>
                            </l7:Property>
                            <l7:Property key="soap">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                        </l7:Properties>
                    </l7:PolicyDetail>
                    <l7:Resources>
                        <l7:ResourceSet tag="policy">
                            <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Policy fragment for &amp;quot;Utility: List SiteMinder Configurations&amp;quot; encapsulated assertion"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Call Restman and generate a sorted list of SiteMinder configurations"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** - Assumes an admin role user has been authenticated"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** - Caches results for ${cacheAge} seconds (default=300). To refresh the cache set ${refresh}=true when calling"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** - Returns a text/xml message variable in ${siteminderConfigurations.sorted}"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Inputs:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - refresh (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - cacheAge (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Outputs:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - siteminderConfigurations.sorted (message)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - error.msg (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v1.0.0 - Jay MacDonald - 20201107 - Initial Version"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:AuditDetailAssertion&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// FINE"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Detail stringValue="==&gt; Entering Utility Fragment: ${policy.name} (refresh=${refresh})"/&gt;
            &lt;L7p:Level stringValue="FINE"/&gt;
        &lt;/L7p:AuditDetailAssertion&gt;
        &lt;wsp:All wsp:Usage="Required"&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** ${siteminderConfigurations.sorted} has the following schema:"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** "/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** &amp;lt;SiteMinderConfigurations source=&amp;quot;system|cache&amp;quot;&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   &amp;lt;SiteMinderConfiguration id=&amp;quot;string&amp;quot;&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;Name&gt;string&amp;lt;/Name&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;Address&gt;string&amp;lt;/Address&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;Hostname&gt;string&amp;lt;/Hostname&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;Enabled&gt;boolean&amp;lt;/Enabled&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   &amp;lt;/SiteMinderConfiguration&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   ..."/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** &amp;lt;/SiteMinderConfigurations&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Description of ${siteminderConfigurations.sorted}"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:All&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// true or false"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${cacheAge}"/&gt;
                &lt;L7p:Operator operatorNull="null"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item dataType="included"&gt;
                        &lt;L7p:Type variableDataType="int"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;L7p:item binary="included"&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Operator operator="GT"/&gt;
                        &lt;L7p:RightValue stringValue="0"/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="MzAw"/&gt;
                &lt;L7p:DataType variableDataType="int"/&gt;
                &lt;L7p:VariableToSet stringValue="cacheAge"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Ensure ${cacheAge} is set, default=300"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// true or false"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${refresh}"/&gt;
                &lt;L7p:Operator operatorNull="null"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item dataType="included"&gt;
                        &lt;L7p:Type variableDataType="string"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;L7p:item regex="included"&gt;
                        &lt;L7p:Pattern stringValue="^(true|false)$"/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="ZmFsc2U="/&gt;
                &lt;L7p:VariableToSet stringValue="refresh"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Ensure ${refresh} is set, default=false"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="c2l0ZW1pbmRlckNvbmZpZ3VyYXRpb25zLnNvcnRlZA=="/&gt;
            &lt;L7p:VariableToSet stringValue="cacheKey"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${refresh}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="string"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:RightValue stringValue="true"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:CacheLookup&gt;
                    &lt;L7p:CacheEntryKey stringValue="${cacheKey}"/&gt;
                    &lt;L7p:CacheId stringValue="siteMinderConfigurationList"/&gt;
                    &lt;L7p:ContentTypeOverride stringValue=""/&gt;
                    &lt;L7p:MaxEntryAgeSeconds stringValue="${cacheAge}"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="siteminderConfigurations.sorted"/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                &lt;/L7p:CacheLookup&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="Y2FjaGU="/&gt;
                    &lt;L7p:VariableToSet stringValue="source"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// FINE"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; Found siteminderConfigurations.sorted in the cache"/&gt;
                    &lt;L7p:Level stringValue="FINE"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Look in cache unless asked to refresh cache"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:Encapsulated&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// GET siteMinderConfigurations"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="c8a5a0d5-1ae2-4144-b538-5c311efc1560"/&gt;
                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Call Restman"/&gt;
                    &lt;L7p:Parameters mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="element"/&gt;
                            &lt;L7p:value stringValue="SiteMinderConfiguration"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="message"/&gt;
                            &lt;L7p:value stringValue=""/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="method"/&gt;
                            &lt;L7p:value stringValue="GET"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="resource"/&gt;
                            &lt;L7p:value stringValue="siteMinderConfigurations"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Parameters&gt;
                &lt;/L7p:Encapsulated&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:VariablePrefix stringValue="siteminderConfigurations"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:List/l7:Item/l7:Resource/l7:SiteMinderConfiguration"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:TrueAssertion/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Extract the list of SiteMinder configurations, never fail"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz48U2l0ZU1pbmRlckNvbmZpZ3VyYXRpb25zPg=="/&gt;
                    &lt;L7p:VariableToSet stringValue="siteminderConfigurations.sorted"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:ForEachLoop L7p:Usage="Required"
                    loopVariable="siteminderConfigurations.elements" variablePrefix="siteminderConfiguration"&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cast to message type for parsing"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:Base64Expression stringValue="JHtzaXRlbWluZGVyQ29uZmlndXJhdGlvbi5jdXJyZW50fQ=="/&gt;
                        &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                        &lt;L7p:DataType variableDataType="message"/&gt;
                        &lt;L7p:VariableToSet stringValue="siteminderConfiguration.xml"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Retrieve the SiteMinder configuration ID"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="id"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="siteminderConfiguration.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:SiteMinderConfiguration/@id"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// retrieve the SiteMinder configuration name"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="name"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="siteminderConfiguration.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:SiteMinderConfiguration/l7:Name"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// retrieve the SiteMinder configuration address"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="address"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="siteminderConfiguration.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:SiteMinderConfiguration/l7:Address"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// retrieve the SiteMinder hostname"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="hostName"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="siteminderConfiguration.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:SiteMinderConfiguration/l7:Hostname"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// retrieve the SiteMinder configuration enabled state"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="enabled"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="siteminderConfiguration.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:SiteMinderConfiguration/l7:Enabled"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="JHtzaXRlbWluZGVyQ29uZmlndXJhdGlvbnMuc29ydGVkfTxTaXRlTWluZGVyQ29uZmlndXJhdGlvbiBpZD0iJHtpZC5yZXN1bHR9Ij48TmFtZT48IVtDREFUQVske25hbWUucmVzdWx0fV1dPjwvTmFtZT48QWRkcmVzcz48IVtDREFUQVske2FkZHJlc3MucmVzdWx0fV1dPjwvQWRkcmVzcz48SG9zdG5hbWU+PCFbQ0RBVEFbJHtob3N0bmFtZS5yZXN1bHR9XV0+PC9Ib3N0bmFtZT48RW5hYmxlZD4ke2VuYWJsZWQucmVzdWx0fTwvRW5hYmxlZD48L1NpdGVNaW5kZXJDb25maWd1cmF0aW9uPg=="/&gt;
                        &lt;L7p:VariableToSet stringValue="siteminderConfigurations.sorted"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Build the list of SiteMinder configurations"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/L7p:ForEachLoop&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtzaXRlbWluZGVyQ29uZmlndXJhdGlvbnMuc29ydGVkfTwvU2l0ZU1pbmRlckNvbmZpZ3VyYXRpb25zPg=="/&gt;
                    &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                    &lt;L7p:DataType variableDataType="message"/&gt;
                    &lt;L7p:VariableToSet stringValue="siteminderConfigurations.sorted"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:XslTransformation&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Sort the SiteMinder configurations by name"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Direction intValue="-1"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="siteminderConfigurations.sorted"/&gt;
                    &lt;L7p:ResourceInfo staticResourceInfo="included"&gt;
                        &lt;L7p:Document stringValueReference="inline"&gt;&lt;![CDATA[&lt;xsl:stylesheet version="1.0" xmlns:l7="http://ns.l7tech.com/2010/04/gateway-management" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;

&lt;xsl:template match="/SiteMinderConfigurations"&gt;
    &lt;xsl:copy&gt;
        &lt;xsl:for-each select="SiteMinderConfiguration"&gt;
            &lt;xsl:sort select="./Name"/&gt;
            &lt;xsl:copy-of select="."/&gt;
        &lt;/xsl:for-each&gt;
    &lt;/xsl:copy&gt;
&lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;]]&gt;&lt;/L7p:Document&gt;
                    &lt;/L7p:ResourceInfo&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                    &lt;L7p:TransformName stringValue=""/&gt;
                    &lt;L7p:XsltVersion stringValue="1.0"/&gt;
                &lt;/L7p:XslTransformation&gt;
                &lt;L7p:CacheStorage&gt;
                    &lt;L7p:CacheEntryKey stringValue="${cacheKey}"/&gt;
                    &lt;L7p:CacheId stringValue="siteMinderConfigurationList"/&gt;
                    &lt;L7p:MaxEntries stringValue="1"/&gt;
                    &lt;L7p:MaxEntryAgeSeconds stringValue="${cacheAge}"/&gt;
                    &lt;L7p:MaxEntrySizeBytes stringValue="200000"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="siteminderConfigurations.sorted"/&gt;
                    &lt;L7p:StoreSoapFaults booleanValue="true"/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                &lt;/L7p:CacheStorage&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="c3lzdGVt"/&gt;
                    &lt;L7p:VariableToSet stringValue="source"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// FINE"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; Loaded siteminderConfigurations.sorted from system and stored to cache"/&gt;
                    &lt;L7p:Level stringValue="FINE"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Retrieve new list and cache"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="RXJyb3Igd2hlbiBsaXN0aW5nIFNpdGVNaW5kZXIgY29uZmlndXJhdGlvbnM="/&gt;
                    &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// WARNING"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; Error listing SiteMinder configurations in ${policy.name}"/&gt;
                    &lt;L7p:Level stringValue="WARNING"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:FalseAssertion/&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Failure - set ${error.msg}"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Caching logic"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:Regex&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Add source attribute to /SiteMinderConfigurations element"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:AutoTarget booleanValue="false"/&gt;
            &lt;L7p:OtherTargetMessageVariable stringValue="siteminderConfigurations.sorted"/&gt;
            &lt;L7p:Regex stringValue="&amp;lt;SiteMinderConfigurations&gt;"/&gt;
            &lt;L7p:Replace booleanValue="true"/&gt;
            &lt;L7p:Replacement stringValue="&amp;lt;SiteMinderConfigurations source=&amp;quot;${source}&amp;quot;&gt;"/&gt;
            &lt;L7p:Target target="OTHER"/&gt;
        &lt;/L7p:Regex&gt;
        &lt;L7p:AuditDetailAssertion&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// FINE"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Detail stringValue="==&gt; Leaving Utility Fragment: ${policy.name}"/&gt;
            &lt;L7p:Level stringValue="FINE"/&gt;
        &lt;/L7p:AuditDetailAssertion&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
                        </l7:ResourceSet>
                    </l7:Resources>
                </l7:Policy>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Utility: List Identity Providers</l7:Name>
            <l7:Id>c4706d99077459bed7ca5ef6c9e62585</l7:Id>
            <l7:Type>ENCAPSULATED_ASSERTION</l7:Type>
            <l7:TimeStamp>2022-04-29T11:42:05.194-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:EncapsulatedAssertion id="c4706d99077459bed7ca5ef6c9e62585" version="0">
                    <l7:Name>Utility: List Identity Providers</l7:Name>
                    <l7:Guid>1ab6158d-33ce-4fa6-a7d8-2b8dc8e31faf</l7:Guid>
                    <l7:PolicyReference id="c4706d99077459bed7ca5ef6c9e624a3" resourceUri="http://ns.l7tech.com/2010/04/gateway-management/policies"/>
                    <l7:EncapsulatedArguments>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>1</l7:Ordinal>
                            <l7:ArgumentName>refresh</l7:ArgumentName>
                            <l7:ArgumentType>string</l7:ArgumentType>
                            <l7:GuiLabel>Refresh Cache? (true|false) (optional): </l7:GuiLabel>
                            <l7:GuiPrompt>true</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>2</l7:Ordinal>
                            <l7:ArgumentName>cacheAge</l7:ArgumentName>
                            <l7:ArgumentType>string</l7:ArgumentType>
                            <l7:GuiLabel>Cache Age (optional): </l7:GuiLabel>
                            <l7:GuiPrompt>true</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                    </l7:EncapsulatedArguments>
                    <l7:EncapsulatedResults>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>error.msg</l7:ResultName>
                            <l7:ResultType>string</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>identityProviders.sorted</l7:ResultName>
                            <l7:ResultType>message</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                    </l7:EncapsulatedResults>
                    <l7:Properties>
                        <l7:Property key="allowTracing">
                            <l7:StringValue>false</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="description">
                            <l7:StringValue>Assertion to call restman and generate a sorted list of identity providers on the Gateway</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="paletteFolder">
                            <l7:StringValue>internalAssertions</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="paletteIconResourceName">
                            <l7:StringValue>Refresh16.gif</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="passMetricsToParent">
                            <l7:StringValue>false</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="policyGuid">
                            <l7:StringValue>7618087f-f586-421d-aeb4-68541e0ebf3a</l7:StringValue>
                        </l7:Property>
                    </l7:Properties>
                </l7:EncapsulatedAssertion>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Utility: List Users</l7:Name>
            <l7:Id>c4706d99077459bed7ca5ef6c9e6e077</l7:Id>
            <l7:Type>POLICY</l7:Type>
            <l7:TimeStamp>2022-04-29T11:42:05.205-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Policy guid="57909023-fab7-453a-80dd-1c3354e7f942" id="c4706d99077459bed7ca5ef6c9e6e077" version="6">
                    <l7:PolicyDetail folderId="c4706d99077459bed7ca5ef6c9e62ecb" guid="57909023-fab7-453a-80dd-1c3354e7f942" id="c4706d99077459bed7ca5ef6c9e6e077" version="6">
                        <l7:Name>Utility: List Users</l7:Name>
                        <l7:PolicyType>Include</l7:PolicyType>
                        <l7:Properties>
                            <l7:Property key="revision">
                                <l7:LongValue>7</l7:LongValue>
                            </l7:Property>
                            <l7:Property key="soap">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                        </l7:Properties>
                    </l7:PolicyDetail>
                    <l7:Resources>
                        <l7:ResourceSet tag="policy">
                            <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Policy fragment for &amp;quot;Utility: List Users&amp;quot; encapsulated assertion"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Call Restman and generate a sorted list of users from all but LDAP and Policy Backed identity providers"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** - Assumes an admin role user has been authenticated"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** - Caches results for ${cacheAge} seconds (default=300). To refresh the cache set ${refresh}=true when calling"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** - Returns a text/xml message variable in ${users.sorted}"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Inputs:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - identityProviderIds (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - refresh (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - cacheAge (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Outputs:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - users.sorted (message)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - error.msg (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v1.0.0 - Jay MacDonald - 20201107 - Initial Version"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v1.0.1 - Jay MacDonald - 20220525 - Set for optional Email address instead of required"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:AuditDetailAssertion&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// FINE"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Detail stringValue="==&gt; Entering Utility Fragment: ${policy.name} (refresh=${refresh})"/&gt;
            &lt;L7p:Level stringValue="FINE"/&gt;
        &lt;/L7p:AuditDetailAssertion&gt;
        &lt;wsp:All wsp:Usage="Required"&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** ${users.sorted} has the following schema:"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** "/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** &amp;lt;Users source=&amp;quot;system|cache&amp;quot;&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   &amp;lt;User id=&amp;quot;string&amp;quot; providerId=&amp;quot;string&amp;quot; providerType=&amp;quot;string&amp;quot; providerName=&amp;quot;string&amp;quot;&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;Name&gt;string&amp;lt;/Name&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;Login&gt;string&amp;lt;/Login&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;FirstName&gt;string&amp;lt;/FirstName&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;LastName&gt;string&amp;lt;/LastName&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;Email&gt;string&amp;lt;/Email&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;SubjectDn&gt;string&amp;lt;/SubjectDn&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;Enabled&gt;boolean&amp;lt;/Enabled&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   &amp;lt;/User&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   ..."/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** &amp;lt;/Users&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Description of ${users.sorted}"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:All&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// true or false"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${cacheAge}"/&gt;
                &lt;L7p:Operator operatorNull="null"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item dataType="included"&gt;
                        &lt;L7p:Type variableDataType="int"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;L7p:item binary="included"&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Operator operator="GT"/&gt;
                        &lt;L7p:RightValue stringValue="0"/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="MzAw"/&gt;
                &lt;L7p:DataType variableDataType="int"/&gt;
                &lt;L7p:VariableToSet stringValue="cacheAge"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Ensure ${cacheAge} is set, default=300"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// true or false"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${refresh}"/&gt;
                &lt;L7p:Operator operatorNull="null"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item dataType="included"&gt;
                        &lt;L7p:Type variableDataType="string"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;L7p:item regex="included"&gt;
                        &lt;L7p:Pattern stringValue="^(true|false)$"/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="ZmFsc2U="/&gt;
                &lt;L7p:VariableToSet stringValue="refresh"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Ensure ${refresh} is set, default=false"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="dXNlcnMuc29ydGVk"/&gt;
            &lt;L7p:VariableToSet stringValue="cacheKey"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${refresh}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="string"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:RightValue stringValue="true"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:CacheLookup&gt;
                    &lt;L7p:CacheEntryKey stringValue="${cacheKey}"/&gt;
                    &lt;L7p:CacheId stringValue="userList"/&gt;
                    &lt;L7p:ContentTypeOverride stringValue=""/&gt;
                    &lt;L7p:MaxEntryAgeSeconds stringValue="${cacheAge}"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="users.sorted"/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                &lt;/L7p:CacheLookup&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="Y2FjaGU="/&gt;
                    &lt;L7p:VariableToSet stringValue="source"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// FINE"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; Found users.sorted in the cache"/&gt;
                    &lt;L7p:Level stringValue="FINE"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Look in cache unless asked to refresh cache"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:Encapsulated&gt;
                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="1ab6158d-33ce-4fa6-a7d8-2b8dc8e31faf"/&gt;
                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: List Identity Providers"/&gt;
                    &lt;L7p:Parameters mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="cacheAge"/&gt;
                            &lt;L7p:value stringValue="${cacheAge}"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="refresh"/&gt;
                            &lt;L7p:value stringValue="${refresh}"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Parameters&gt;
                &lt;/L7p:Encapsulated&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${identityProviderIds}"/&gt;
                            &lt;L7p:Expression2 stringValue=""/&gt;
                            &lt;L7p:Negate booleanValue="true"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:Operator operator="EMPTY"/&gt;
                                    &lt;L7p:RightValue stringValue=""/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:Split&gt;
                            &lt;L7p:InputVariable stringValue="identityProviderIds"/&gt;
                            &lt;L7p:OutputVariable stringValue="identityProviderIds.results"/&gt;
                        &lt;/L7p:Split&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// identity provider ids is set so split into ${identityProviderIds.results}"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:VariablePrefix stringValue="identityProviderIds"/&gt;
                            &lt;L7p:XmlMsgSrc stringValue="identityProviders.sorted"/&gt;
                            &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                &lt;L7p:Expression stringValue="/IdentityProviders/IdentityProvider[Type='Internal' or Type='Federated']/@id"/&gt;
                                &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Namespaces&gt;
                                &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                            &lt;/L7p:XpathExpression&gt;
                        &lt;/L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// No identity provider ids set, so get list of them"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// If identityProviderId is not set, find list of all of them"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// FINE"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; identityProviderIds.results ${identityProviderIds.results}"/&gt;
                    &lt;L7p:Level stringValue="FINE"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz48VXNlcnM+"/&gt;
                    &lt;L7p:VariableToSet stringValue="users.sorted"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:ForEachLoop L7p:Usage="Required"
                    loopVariable="identityProviderIds.results" variablePrefix="identityProviderId"&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Retrieve the type of the identity provider"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="providerType"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="identityProviders.sorted"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/IdentityProviders/IdentityProvider[@id=$identityProviderId.current]/Type"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Retrieve the type of the identity provider"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="providerName"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="identityProviders.sorted"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/IdentityProviders/IdentityProvider[@id=$identityProviderId.current]/Name"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:Encapsulated&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// GET users"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="c8a5a0d5-1ae2-4144-b538-5c311efc1560"/&gt;
                        &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Call Restman"/&gt;
                        &lt;L7p:Parameters mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="element"/&gt;
                                &lt;L7p:value stringValue="User"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="message"/&gt;
                                &lt;L7p:value stringValue=""/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="method"/&gt;
                                &lt;L7p:value stringValue="GET"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="resource"/&gt;
                                &lt;L7p:value stringValue="identityProviders/${identityProviderId.current}/users"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Parameters&gt;
                    &lt;/L7p:Encapsulated&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                        &lt;L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:VariablePrefix stringValue="users"/&gt;
                            &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                &lt;L7p:Expression stringValue="/l7:List/l7:Item/l7:Resource/l7:User"/&gt;
                                &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Namespaces&gt;
                                &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                            &lt;/L7p:XpathExpression&gt;
                        &lt;/L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:TrueAssertion/&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Extract the list of users, never fail"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;L7p:ForEachLoop L7p:Usage="Required"
                        loopVariable="users.elements" variablePrefix="user"&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cast to message type for parsing"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:Base64Expression stringValue="JHt1c2VyLmN1cnJlbnR9"/&gt;
                            &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                            &lt;L7p:DataType variableDataType="message"/&gt;
                            &lt;L7p:VariableToSet stringValue="user.xml"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Retrieve the user ID"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:VariablePrefix stringValue="id"/&gt;
                            &lt;L7p:XmlMsgSrc stringValue="user.xml"/&gt;
                            &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                &lt;L7p:Expression stringValue="/l7:User/@id"/&gt;
                                &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Namespaces&gt;
                                &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                            &lt;/L7p:XpathExpression&gt;
                        &lt;/L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Retrieve the user's provider ID"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:VariablePrefix stringValue="providerId"/&gt;
                            &lt;L7p:XmlMsgSrc stringValue="user.xml"/&gt;
                            &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                &lt;L7p:Expression stringValue="/l7:User/@providerId"/&gt;
                                &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Namespaces&gt;
                                &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                            &lt;/L7p:XpathExpression&gt;
                        &lt;/L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Retrieve the user name"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:VariablePrefix stringValue="name"/&gt;
                            &lt;L7p:XmlMsgSrc stringValue="user.xml"/&gt;
                            &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                &lt;L7p:Expression stringValue="/l7:User/l7:Properties/l7:Property[@key='name']/l7:StringValue"/&gt;
                                &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Namespaces&gt;
                                &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                            &lt;/L7p:XpathExpression&gt;
                        &lt;/L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Retrieve the user login"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:VariablePrefix stringValue="login"/&gt;
                            &lt;L7p:XmlMsgSrc stringValue="user.xml"/&gt;
                            &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                &lt;L7p:Expression stringValue="/l7:User/l7:Login"/&gt;
                                &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Namespaces&gt;
                                &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                            &lt;/L7p:XpathExpression&gt;
                        &lt;/L7p:ResponseXpathAssertion&gt;
                        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                            &lt;L7p:ResponseXpathAssertion&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Retrieve the user's first name"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:VariablePrefix stringValue="firstName"/&gt;
                                &lt;L7p:XmlMsgSrc stringValue="user.xml"/&gt;
                                &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/l7:User/l7:FirstName"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                &lt;/L7p:XpathExpression&gt;
                            &lt;/L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue=""/&gt;
                                &lt;L7p:VariableToSet stringValue="firstName.result"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FirstName may not be present"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:OneOrMore&gt;
                        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                            &lt;L7p:ResponseXpathAssertion&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Retrieve the user's last name"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:VariablePrefix stringValue="lastName"/&gt;
                                &lt;L7p:XmlMsgSrc stringValue="user.xml"/&gt;
                                &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/l7:User/l7:LastName"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                &lt;/L7p:XpathExpression&gt;
                            &lt;/L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue=""/&gt;
                                &lt;L7p:VariableToSet stringValue="lastName.result"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// LastName may not be present"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:OneOrMore&gt;
                        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                            &lt;L7p:ResponseXpathAssertion&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// retrieve the user's email"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:VariablePrefix stringValue="email"/&gt;
                                &lt;L7p:XmlMsgSrc stringValue="user.xml"/&gt;
                                &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/l7:User/l7:Email"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                &lt;/L7p:XpathExpression&gt;
                            &lt;/L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue=""/&gt;
                                &lt;L7p:VariableToSet stringValue="email.result"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Email may not be present"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:OneOrMore&gt;
                        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                            &lt;L7p:ResponseXpathAssertion&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Retrieve the user's subject DN"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:VariablePrefix stringValue="subjectDn"/&gt;
                                &lt;L7p:XmlMsgSrc stringValue="user.xml"/&gt;
                                &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/l7:User/l7:SubjectDn"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                &lt;/L7p:XpathExpression&gt;
                            &lt;/L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue=""/&gt;
                                &lt;L7p:VariableToSet stringValue="subjectDn.result"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// SubjectDn may not be present"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:OneOrMore&gt;
                        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                            &lt;L7p:ResponseXpathAssertion&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Retrieve the user enabled state"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:VariablePrefix stringValue="enabled"/&gt;
                                &lt;L7p:XmlMsgSrc stringValue="user.xml"/&gt;
                                &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/l7:User/l7:Properties/l7:Property[@key='enabled']/l7:BooleanValue"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                &lt;/L7p:XpathExpression&gt;
                            &lt;/L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="dHJ1ZQ=="/&gt;
                                &lt;L7p:VariableToSet stringValue="enabled.result"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Enabled is only valid for IIP"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:OneOrMore&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="JHt1c2Vycy5zb3J0ZWR9PFVzZXIgaWQ9IiR7aWQucmVzdWx0fSIgcHJvdmlkZXJJZD0iJHtwcm92aWRlcklkLnJlc3VsdH0iIHByb3ZpZGVyVHlwZT0iJHtwcm92aWRlclR5cGUucmVzdWx0fSIgcHJvdmlkZXJOYW1lPSIke3Byb3ZpZGVyTmFtZS5yZXN1bHR9Ij48TmFtZT48IVtDREFUQVske25hbWUucmVzdWx0fV1dPjwvTmFtZT48TG9naW4+PCFbQ0RBVEFbJHtsb2dpbi5yZXN1bHR9XV0+PC9Mb2dpbj48Rmlyc3ROYW1lPjwhW0NEQVRBWyR7Zmlyc3ROYW1lLnJlc3VsdH1dXT48L0ZpcnN0TmFtZT48TGFzdE5hbWU+PCFbQ0RBVEFbJHtsYXN0TmFtZS5yZXN1bHR9XV0+PC9MYXN0TmFtZT48RW1haWw+PCFbQ0RBVEFbJHtlbWFpbC5yZXN1bHR9XV0+PC9FbWFpbD48U3ViamVjdERuPjwhW0NEQVRBWyR7c3ViamVjdERuLnJlc3VsdH1dXT48L1N1YmplY3REbj48RW5hYmxlZD4ke2VuYWJsZWQucmVzdWx0fTwvRW5hYmxlZD48L1VzZXI+"/&gt;
                            &lt;L7p:VariableToSet stringValue="users.sorted"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Build the list of users"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/L7p:ForEachLoop&gt;
                &lt;/L7p:ForEachLoop&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHt1c2Vycy5zb3J0ZWR9PC9Vc2Vycz4="/&gt;
                    &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                    &lt;L7p:DataType variableDataType="message"/&gt;
                    &lt;L7p:VariableToSet stringValue="users.sorted"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:XslTransformation&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Sort the users by identity provider and user name"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Direction intValue="-1"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="users.sorted"/&gt;
                    &lt;L7p:ResourceInfo staticResourceInfo="included"&gt;
                        &lt;L7p:Document stringValueReference="inline"&gt;&lt;![CDATA[&lt;xsl:stylesheet version="1.0" xmlns:l7="http://ns.l7tech.com/2010/04/gateway-management" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;

&lt;xsl:template match="/Users"&gt;
    &lt;xsl:copy&gt;
        &lt;xsl:for-each select="User"&gt;
            &lt;xsl:sort select="./@providerName"/&gt;
            &lt;xsl:sort select="./Name"/&gt;
            &lt;xsl:copy-of select="."/&gt;
        &lt;/xsl:for-each&gt;
    &lt;/xsl:copy&gt;
&lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;]]&gt;&lt;/L7p:Document&gt;
                    &lt;/L7p:ResourceInfo&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                    &lt;L7p:TransformName stringValue=""/&gt;
                    &lt;L7p:XsltVersion stringValue="1.0"/&gt;
                &lt;/L7p:XslTransformation&gt;
                &lt;L7p:CacheStorage&gt;
                    &lt;L7p:CacheEntryKey stringValue="${cacheKey}"/&gt;
                    &lt;L7p:CacheId stringValue="userList"/&gt;
                    &lt;L7p:MaxEntries stringValue="1"/&gt;
                    &lt;L7p:MaxEntryAgeSeconds stringValue="${cacheAge}"/&gt;
                    &lt;L7p:MaxEntrySizeBytes stringValue="200000"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="users.sorted"/&gt;
                    &lt;L7p:StoreSoapFaults booleanValue="true"/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                &lt;/L7p:CacheStorage&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="c3lzdGVt"/&gt;
                    &lt;L7p:VariableToSet stringValue="source"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// FINE"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; Loaded users.sorted from system and stored to cache"/&gt;
                    &lt;L7p:Level stringValue="FINE"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Retrieve new list and cache"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="RXJyb3Igd2hlbiBsaXN0aW5nIHVzZXJz"/&gt;
                    &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// WARNING"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; Error listing users in ${policy.name}"/&gt;
                    &lt;L7p:Level stringValue="WARNING"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:FalseAssertion/&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Failure - set ${error.msg}"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Caching logic"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:Regex&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Add source attribute to /Users element"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:AutoTarget booleanValue="false"/&gt;
            &lt;L7p:OtherTargetMessageVariable stringValue="users.sorted"/&gt;
            &lt;L7p:Regex stringValue="&amp;lt;Users&gt;"/&gt;
            &lt;L7p:Replace booleanValue="true"/&gt;
            &lt;L7p:Replacement stringValue="&amp;lt;Users source=&amp;quot;${source}&amp;quot;&gt;"/&gt;
            &lt;L7p:Target target="OTHER"/&gt;
        &lt;/L7p:Regex&gt;
        &lt;L7p:AuditDetailAssertion&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// FINE"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Detail stringValue="==&gt; Leaving Utility Fragment: ${policy.name}"/&gt;
            &lt;L7p:Level stringValue="FINE"/&gt;
        &lt;/L7p:AuditDetailAssertion&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
                        </l7:ResourceSet>
                    </l7:Resources>
                </l7:Policy>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Utility: List Groups</l7:Name>
            <l7:Id>c4706d99077459bed7ca5ef6c9e6eb45</l7:Id>
            <l7:Type>POLICY</l7:Type>
            <l7:TimeStamp>2022-04-29T11:42:05.215-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Policy guid="7cbd12a3-9650-4652-be81-8d14a80d5ef3" id="c4706d99077459bed7ca5ef6c9e6eb45" version="0">
                    <l7:PolicyDetail folderId="c4706d99077459bed7ca5ef6c9e62ecb" guid="7cbd12a3-9650-4652-be81-8d14a80d5ef3" id="c4706d99077459bed7ca5ef6c9e6eb45" version="0">
                        <l7:Name>Utility: List Groups</l7:Name>
                        <l7:PolicyType>Include</l7:PolicyType>
                        <l7:Properties>
                            <l7:Property key="revision">
                                <l7:LongValue>1</l7:LongValue>
                            </l7:Property>
                            <l7:Property key="soap">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                        </l7:Properties>
                    </l7:PolicyDetail>
                    <l7:Resources>
                        <l7:ResourceSet tag="policy">
                            <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Policy fragment for &amp;quot;Utility: List Groups&amp;quot; encapsulated assertion"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Call Restman and generate a sorted list of IIP groups"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** - Assumes an admin role user has been authenticated"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** - Caches results for ${cacheAge} seconds (default=300). To refresh the cache set ${refresh}=true when calling"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** - Returns a text/xml message variable in ${groups.sorted}"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Inputs:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - identityProviderIds (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - refresh (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - cacheAge (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Outputs:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - groups.sorted (message)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - error.msg (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v1.0.0 - Jay MacDonald - 20201107 - Initial Version"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:AuditDetailAssertion&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// FINE"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Detail stringValue="==&gt; Entering Utility Fragment: ${policy.name} (refresh=${refresh})"/&gt;
            &lt;L7p:Level stringValue="FINE"/&gt;
        &lt;/L7p:AuditDetailAssertion&gt;
        &lt;wsp:All wsp:Usage="Required"&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** ${groups.sorted} has the following schema:"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** "/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** &amp;lt;Groups source=&amp;quot;system|cache&amp;quot;&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   &amp;lt;Group id=&amp;quot;string&amp;quot; providerId=&amp;quot;string&amp;quot; providerType=&amp;quot;string&amp;quot; providerName=&amp;quot;string&amp;quot;&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;Name&gt;string&amp;lt;/Name&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;Description&gt;string&amp;lt;/Description&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   &amp;lt;/Group&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   ..."/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** &amp;lt;/Groups&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Description of ${groups.sorted}"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:All&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// true or false"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${cacheAge}"/&gt;
                &lt;L7p:Operator operatorNull="null"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item dataType="included"&gt;
                        &lt;L7p:Type variableDataType="int"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;L7p:item binary="included"&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Operator operator="GT"/&gt;
                        &lt;L7p:RightValue stringValue="0"/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="MzAw"/&gt;
                &lt;L7p:DataType variableDataType="int"/&gt;
                &lt;L7p:VariableToSet stringValue="cacheAge"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Ensure ${cacheAge} is set, default=300"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// true or false"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${refresh}"/&gt;
                &lt;L7p:Operator operatorNull="null"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item dataType="included"&gt;
                        &lt;L7p:Type variableDataType="string"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;L7p:item regex="included"&gt;
                        &lt;L7p:Pattern stringValue="^(true|false)$"/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="ZmFsc2U="/&gt;
                &lt;L7p:VariableToSet stringValue="refresh"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Ensure ${refresh} is set, default=false"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="Z3JvdXBzLnNvcnRlZA=="/&gt;
            &lt;L7p:VariableToSet stringValue="cacheKey"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${refresh}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="string"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:RightValue stringValue="true"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:CacheLookup&gt;
                    &lt;L7p:CacheEntryKey stringValue="${cacheKey}"/&gt;
                    &lt;L7p:CacheId stringValue="groupList"/&gt;
                    &lt;L7p:ContentTypeOverride stringValue=""/&gt;
                    &lt;L7p:MaxEntryAgeSeconds stringValue="${cacheAge}"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="groups.sorted"/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                &lt;/L7p:CacheLookup&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="Y2FjaGU="/&gt;
                    &lt;L7p:VariableToSet stringValue="source"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// FINE"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; Found groups.sorted in the cache"/&gt;
                    &lt;L7p:Level stringValue="FINE"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Look in cache unless asked to refresh cache"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:Encapsulated&gt;
                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="1ab6158d-33ce-4fa6-a7d8-2b8dc8e31faf"/&gt;
                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: List Identity Providers"/&gt;
                    &lt;L7p:Parameters mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="cacheAge"/&gt;
                            &lt;L7p:value stringValue="${cacheAge}"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="refresh"/&gt;
                            &lt;L7p:value stringValue="${refresh}"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Parameters&gt;
                &lt;/L7p:Encapsulated&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${identityProviderIds}"/&gt;
                            &lt;L7p:Expression2 stringValue=""/&gt;
                            &lt;L7p:Negate booleanValue="true"/&gt;
                            &lt;L7p:Operator operator="EMPTY"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:Operator operator="EMPTY"/&gt;
                                    &lt;L7p:RightValue stringValue=""/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:Split&gt;
                            &lt;L7p:InputVariable stringValue="identityProviderIds"/&gt;
                            &lt;L7p:OutputVariable stringValue="identityProviderIds.results"/&gt;
                        &lt;/L7p:Split&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// identity provider ids is set so split into ${identityProviderIds.results}"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:VariablePrefix stringValue="identityProviderIds"/&gt;
                            &lt;L7p:XmlMsgSrc stringValue="identityProviders.sorted"/&gt;
                            &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                &lt;L7p:Expression stringValue="/IdentityProviders/IdentityProvider[Type='Internal' or Type='Federated']/@id"/&gt;
                                &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Namespaces&gt;
                                &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                            &lt;/L7p:XpathExpression&gt;
                        &lt;/L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// No identity provider ids set, so get list of them"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// If identityProviderId is not set, find list of all of them"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// FINE"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; identityProviderIds.results ${identityProviderIds.results}"/&gt;
                    &lt;L7p:Level stringValue="FINE"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz48R3JvdXBzPg=="/&gt;
                    &lt;L7p:VariableToSet stringValue="groups.sorted"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:ForEachLoop L7p:Usage="Required"
                    loopVariable="identityProviderIds.results" variablePrefix="identityProviderId"&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Retrieve the type of the identity provider"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="providerType"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="identityProviders.sorted"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/IdentityProviders/IdentityProvider[@id=$identityProviderId.current]/Type"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Retrieve the type of the identity provider"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="providerName"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="identityProviders.sorted"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/IdentityProviders/IdentityProvider[@id=$identityProviderId.current]/Name"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:AuditDetailAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:Detail stringValue="==&gt; Searching for groups in ${providerName.result}"/&gt;
                        &lt;L7p:Level stringValue="FINE"/&gt;
                    &lt;/L7p:AuditDetailAssertion&gt;
                    &lt;L7p:Encapsulated&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// GET groups"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="c8a5a0d5-1ae2-4144-b538-5c311efc1560"/&gt;
                        &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Call Restman"/&gt;
                        &lt;L7p:Parameters mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="element"/&gt;
                                &lt;L7p:value stringValue="Group"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="message"/&gt;
                                &lt;L7p:value stringValue=""/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="method"/&gt;
                                &lt;L7p:value stringValue="GET"/&gt;
                            &lt;/L7p:entry&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="resource"/&gt;
                                &lt;L7p:value stringValue="identityProviders/${identityProviderId.current}/groups"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Parameters&gt;
                    &lt;/L7p:Encapsulated&gt;
                    &lt;L7p:AuditDetailAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:Detail stringValue="${response.mainpart}"/&gt;
                        &lt;L7p:Level stringValue="FINE"/&gt;
                    &lt;/L7p:AuditDetailAssertion&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                        &lt;L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:VariablePrefix stringValue="groups"/&gt;
                            &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                &lt;L7p:Expression stringValue="/l7:List/l7:Item/l7:Resource/l7:Group"/&gt;
                                &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Namespaces&gt;
                                &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                            &lt;/L7p:XpathExpression&gt;
                        &lt;/L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:TrueAssertion/&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Extract the list of groups, never fail"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;L7p:ForEachLoop L7p:Usage="Required"
                        loopVariable="groups.elements" variablePrefix="group"&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cast to message type for parsing"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:Base64Expression stringValue="JHtncm91cC5jdXJyZW50fQ=="/&gt;
                            &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                            &lt;L7p:DataType variableDataType="message"/&gt;
                            &lt;L7p:VariableToSet stringValue="group.xml"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Retrieve the group ID"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:VariablePrefix stringValue="id"/&gt;
                            &lt;L7p:XmlMsgSrc stringValue="group.xml"/&gt;
                            &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                &lt;L7p:Expression stringValue="/l7:Group/@id"/&gt;
                                &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Namespaces&gt;
                                &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                            &lt;/L7p:XpathExpression&gt;
                        &lt;/L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Retrieve the group's provider ID"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:VariablePrefix stringValue="providerId"/&gt;
                            &lt;L7p:XmlMsgSrc stringValue="group.xml"/&gt;
                            &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                &lt;L7p:Expression stringValue="/l7:Group/@providerId"/&gt;
                                &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Namespaces&gt;
                                &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                            &lt;/L7p:XpathExpression&gt;
                        &lt;/L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// retrieve the group name"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:VariablePrefix stringValue="name"/&gt;
                            &lt;L7p:XmlMsgSrc stringValue="group.xml"/&gt;
                            &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                &lt;L7p:Expression stringValue="/l7:Group/l7:Name"/&gt;
                                &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Namespaces&gt;
                                &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                            &lt;/L7p:XpathExpression&gt;
                        &lt;/L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// retrieve the group description"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:VariablePrefix stringValue="description"/&gt;
                            &lt;L7p:XmlMsgSrc stringValue="group.xml"/&gt;
                            &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                &lt;L7p:Expression stringValue="/l7:Group/l7:Description"/&gt;
                                &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Namespaces&gt;
                                &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                            &lt;/L7p:XpathExpression&gt;
                        &lt;/L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="JHtncm91cHMuc29ydGVkfTxHcm91cCBpZD0iJHtpZC5yZXN1bHR9IiBwcm92aWRlcklkPSIke3Byb3ZpZGVySWQucmVzdWx0fSIgcHJvdmlkZXJUeXBlPSIke3Byb3ZpZGVyVHlwZS5yZXN1bHR9IiBwcm92aWRlck5hbWU9IiR7cHJvdmlkZXJOYW1lLnJlc3VsdH0iPjxOYW1lPjwhW0NEQVRBWyR7bmFtZS5yZXN1bHR9XV0+PC9OYW1lPjxEZXNjcmlwdGlvbj48IVtDREFUQVske2Rlc2NyaXB0aW9uLnJlc3VsdH1dXT48L0Rlc2NyaXB0aW9uPjwvR3JvdXA+"/&gt;
                            &lt;L7p:VariableToSet stringValue="groups.sorted"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Build the list of groups"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/L7p:ForEachLoop&gt;
                &lt;/L7p:ForEachLoop&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtncm91cHMuc29ydGVkfTwvR3JvdXBzPg=="/&gt;
                    &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                    &lt;L7p:DataType variableDataType="message"/&gt;
                    &lt;L7p:VariableToSet stringValue="groups.sorted"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:XslTransformation&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Sort the groups by identity provider and group name"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Direction intValue="-1"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="groups.sorted"/&gt;
                    &lt;L7p:ResourceInfo staticResourceInfo="included"&gt;
                        &lt;L7p:Document stringValueReference="inline"&gt;&lt;![CDATA[&lt;xsl:stylesheet version="1.0" xmlns:l7="http://ns.l7tech.com/2010/04/gateway-management" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;

&lt;xsl:template match="/Groups"&gt;
    &lt;xsl:copy&gt;
        &lt;xsl:for-each select="Group"&gt;
            &lt;xsl:sort select="./@providerName"/&gt;
            &lt;xsl:sort select="./Name"/&gt;
            &lt;xsl:copy-of select="."/&gt;
        &lt;/xsl:for-each&gt;
    &lt;/xsl:copy&gt;
&lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;]]&gt;&lt;/L7p:Document&gt;
                    &lt;/L7p:ResourceInfo&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                    &lt;L7p:TransformName stringValue=""/&gt;
                    &lt;L7p:XsltVersion stringValue="1.0"/&gt;
                &lt;/L7p:XslTransformation&gt;
                &lt;L7p:CacheStorage&gt;
                    &lt;L7p:CacheEntryKey stringValue="${cacheKey}"/&gt;
                    &lt;L7p:CacheId stringValue="groupList"/&gt;
                    &lt;L7p:MaxEntries stringValue="1"/&gt;
                    &lt;L7p:MaxEntryAgeSeconds stringValue="${cacheAge}"/&gt;
                    &lt;L7p:MaxEntrySizeBytes stringValue="200000"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="groups.sorted"/&gt;
                    &lt;L7p:StoreSoapFaults booleanValue="true"/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                &lt;/L7p:CacheStorage&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="c3lzdGVt"/&gt;
                    &lt;L7p:VariableToSet stringValue="source"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// FINE"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; Loaded groups.sorted from system and stored to cache"/&gt;
                    &lt;L7p:Level stringValue="FINE"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Retrieve new list and cache"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="RXJyb3Igd2hlbiBsaXN0aW5nIGdyb3Vwcw=="/&gt;
                    &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// WARNING"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; Error listing groups in ${policy.name}"/&gt;
                    &lt;L7p:Level stringValue="WARNING"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:FalseAssertion/&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Failure - set ${error.msg}"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Caching logic"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:Regex&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Add source attribute to /Groups element"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:AutoTarget booleanValue="false"/&gt;
            &lt;L7p:OtherTargetMessageVariable stringValue="groups.sorted"/&gt;
            &lt;L7p:Regex stringValue="&amp;lt;Groups&gt;"/&gt;
            &lt;L7p:Replace booleanValue="true"/&gt;
            &lt;L7p:Replacement stringValue="&amp;lt;Groups source=&amp;quot;${source}&amp;quot;&gt;"/&gt;
            &lt;L7p:Target target="OTHER"/&gt;
        &lt;/L7p:Regex&gt;
        &lt;L7p:AuditDetailAssertion&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// FINE"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Detail stringValue="==&gt; Leaving Utility Fragment: ${policy.name}"/&gt;
            &lt;L7p:Level stringValue="FINE"/&gt;
        &lt;/L7p:AuditDetailAssertion&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
                        </l7:ResourceSet>
                    </l7:Resources>
                </l7:Policy>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Utility: List Email Listeners</l7:Name>
            <l7:Id>c4706d99077459bed7ca5ef6c9e8029f</l7:Id>
            <l7:Type>POLICY</l7:Type>
            <l7:TimeStamp>2022-04-29T11:42:05.221-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Policy guid="29e9d372-9141-4543-b5ac-873454847d38" id="c4706d99077459bed7ca5ef6c9e8029f" version="0">
                    <l7:PolicyDetail folderId="c4706d99077459bed7ca5ef6c9e62ecb" guid="29e9d372-9141-4543-b5ac-873454847d38" id="c4706d99077459bed7ca5ef6c9e8029f" version="0">
                        <l7:Name>Utility: List Email Listeners</l7:Name>
                        <l7:PolicyType>Include</l7:PolicyType>
                        <l7:Properties>
                            <l7:Property key="revision">
                                <l7:LongValue>1</l7:LongValue>
                            </l7:Property>
                            <l7:Property key="soap">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                        </l7:Properties>
                    </l7:PolicyDetail>
                    <l7:Resources>
                        <l7:ResourceSet tag="policy">
                            <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Policy fragment for &amp;quot;Utility: List Email Listeners&amp;quot; encapsulated assertion"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Call Restman and generate a sorted list of email listeners"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** - Assumes an admin role user has been authenticated"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** - Caches results for ${cacheAge} seconds (default=300). To refresh the cache set ${refresh}=true when calling"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** - Returns a text/xml message variable in ${emailListeners.sorted}"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Inputs:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - refresh (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - cacheAge (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Outputs:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - emailListeners.sorted(message)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - error.msg (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v1.0.0 - Jay MacDonald - 20201107 - Initial Version"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:AuditDetailAssertion&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// FINE"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Detail stringValue="==&gt; Entering Utility Fragment: ${policy.name} (refresh=${refresh})"/&gt;
            &lt;L7p:Level stringValue="FINE"/&gt;
        &lt;/L7p:AuditDetailAssertion&gt;
        &lt;wsp:All wsp:Usage="Required"&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** ${emailListeners.sorted} has the following schema:"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** "/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** &amp;lt;EmailListeners source=&amp;quot;system|cache&amp;quot;&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   &amp;lt;EmailListener id=&amp;quot;string&amp;quot;&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;Name&gt;string&amp;lt;/Name&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;Type&gt;string&amp;lt;/Type&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;Hostname&gt;string&amp;lt;/Hostname&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;Enabled&gt;string&amp;lt;/Enabled&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   &amp;lt;/EmailListener&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   ..."/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** &amp;lt;/EmailListeners&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** "/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** Where:"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   Name = the name of the email listeners"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Description of ${emailListeners.sorted}"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:All&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// true or false"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${cacheAge}"/&gt;
                &lt;L7p:Operator operatorNull="null"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item dataType="included"&gt;
                        &lt;L7p:Type variableDataType="int"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;L7p:item binary="included"&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Operator operator="GT"/&gt;
                        &lt;L7p:RightValue stringValue="0"/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="MzAw"/&gt;
                &lt;L7p:DataType variableDataType="int"/&gt;
                &lt;L7p:VariableToSet stringValue="cacheAge"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Ensure ${cacheAge} is set, default=300"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// true or false"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${refresh}"/&gt;
                &lt;L7p:Operator operatorNull="null"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item dataType="included"&gt;
                        &lt;L7p:Type variableDataType="string"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;L7p:item regex="included"&gt;
                        &lt;L7p:Pattern stringValue="^(true|false)$"/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="ZmFsc2U="/&gt;
                &lt;L7p:VariableToSet stringValue="refresh"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Ensure ${refresh} is set, default=false"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="ZW1haWxMaXN0ZW5lcnMuc29ydGVk"/&gt;
            &lt;L7p:VariableToSet stringValue="cacheKey"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${refresh}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="string"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:RightValue stringValue="true"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:CacheLookup&gt;
                    &lt;L7p:CacheEntryKey stringValue="${cacheKey}"/&gt;
                    &lt;L7p:CacheId stringValue="emailListenerList"/&gt;
                    &lt;L7p:ContentTypeOverride stringValue=""/&gt;
                    &lt;L7p:MaxEntryAgeSeconds stringValue="${cacheAge}"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="emailListeners.sorted"/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                &lt;/L7p:CacheLookup&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="Y2FjaGU="/&gt;
                    &lt;L7p:VariableToSet stringValue="source"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// FINE"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; Found emailListeners.sorted in the cache"/&gt;
                    &lt;L7p:Level stringValue="FINE"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Look in cache unless asked to refresh cache"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:Encapsulated&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// GET emailListeners"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="c8a5a0d5-1ae2-4144-b538-5c311efc1560"/&gt;
                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Call Restman"/&gt;
                    &lt;L7p:Parameters mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="element"/&gt;
                            &lt;L7p:value stringValue="EmailListener"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="message"/&gt;
                            &lt;L7p:value stringValue=""/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="method"/&gt;
                            &lt;L7p:value stringValue="GET"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="resource"/&gt;
                            &lt;L7p:value stringValue="emailListeners"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Parameters&gt;
                &lt;/L7p:Encapsulated&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:VariablePrefix stringValue="emailListeners"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:List/l7:Item/l7:Resource/l7:EmailListener"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:TrueAssertion/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Extract the list of email listeners, never fail"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz48RW1haWxMaXN0ZW5lcnM+"/&gt;
                    &lt;L7p:VariableToSet stringValue="emailListeners.sorted"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:ForEachLoop L7p:Usage="Required"
                    loopVariable="emailListeners.elements" variablePrefix="emailListener"&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cast to message type for parsing"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:Base64Expression stringValue="JHtlbWFpbExpc3RlbmVyLmN1cnJlbnR9"/&gt;
                        &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                        &lt;L7p:DataType variableDataType="message"/&gt;
                        &lt;L7p:VariableToSet stringValue="emailListener.xml"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Retrieve the email listener ID"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="id"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="emailListener.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:EmailListener/@id"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// retrieve the email listener name"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="name"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="emailListener.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:EmailListener/l7:Name"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// retrieve the email listener enabled state"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="enabled"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="emailListener.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:EmailListener/l7:Active"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// retrieve the email listener type"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="type"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="emailListener.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:EmailListener/l7:ServerType"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// retrieve the email listener type"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="hostname"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="emailListener.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:EmailListener/l7:Hostname"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="JHtlbWFpbExpc3RlbmVycy5zb3J0ZWR9PEVtYWlsTGlzdGVuZXIgaWQ9IiR7aWQucmVzdWx0fSI+PE5hbWU+PCFbQ0RBVEFbJHtuYW1lLnJlc3VsdH1dXT48L05hbWU+PFR5cGU+JHt0eXBlLnJlc3VsdH08L1R5cGU+PEhvc3RuYW1lPiR7aG9zdG5hbWUucmVzdWx0fTwvSG9zdG5hbWU+PEVuYWJsZWQ+JHtlbmFibGVkLnJlc3VsdH08L0VuYWJsZWQ+PC9FbWFpbExpc3RlbmVyPg=="/&gt;
                        &lt;L7p:VariableToSet stringValue="emailListeners.sorted"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Build the list of email listeners"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/L7p:ForEachLoop&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtlbWFpbExpc3RlbmVycy5zb3J0ZWR9PC9FbWFpbExpc3RlbmVycz4="/&gt;
                    &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                    &lt;L7p:DataType variableDataType="message"/&gt;
                    &lt;L7p:VariableToSet stringValue="emailListeners.sorted"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:XslTransformation&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Sort the email listeners by name"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Direction intValue="-1"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="emailListeners.sorted"/&gt;
                    &lt;L7p:ResourceInfo staticResourceInfo="included"&gt;
                        &lt;L7p:Document stringValueReference="inline"&gt;&lt;![CDATA[&lt;xsl:stylesheet version="1.0" xmlns:l7="http://ns.l7tech.com/2010/04/gateway-management" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;

&lt;xsl:template match="/EmailListeners"&gt;
    &lt;xsl:copy&gt;
        &lt;xsl:for-each select="EmailListener"&gt;
            &lt;xsl:sort select="./Name"/&gt;
            &lt;xsl:copy-of select="."/&gt;
        &lt;/xsl:for-each&gt;
    &lt;/xsl:copy&gt;
&lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;]]&gt;&lt;/L7p:Document&gt;
                    &lt;/L7p:ResourceInfo&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                    &lt;L7p:TransformName stringValue=""/&gt;
                    &lt;L7p:XsltVersion stringValue="1.0"/&gt;
                &lt;/L7p:XslTransformation&gt;
                &lt;L7p:CacheStorage&gt;
                    &lt;L7p:CacheEntryKey stringValue="${cacheKey}"/&gt;
                    &lt;L7p:CacheId stringValue="emailListenerList"/&gt;
                    &lt;L7p:MaxEntries stringValue="1"/&gt;
                    &lt;L7p:MaxEntryAgeSeconds stringValue="${cacheAge}"/&gt;
                    &lt;L7p:MaxEntrySizeBytes stringValue="200000"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="emailListeners.sorted"/&gt;
                    &lt;L7p:StoreSoapFaults booleanValue="true"/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                &lt;/L7p:CacheStorage&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="c3lzdGVt"/&gt;
                    &lt;L7p:VariableToSet stringValue="source"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// FINE"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; Loaded emailListeners.sorted from system and stored to cache"/&gt;
                    &lt;L7p:Level stringValue="FINE"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Retrieve new list and cache"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="RXJyb3Igd2hlbiBsaXN0aW5nIGVtYWlsIGxpc3RlbmVycw=="/&gt;
                    &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// WARNING"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; Error listing email listeners in ${policy.name}"/&gt;
                    &lt;L7p:Level stringValue="WARNING"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:FalseAssertion/&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Failure - set ${error.msg}"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Caching logic"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:Regex&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Add source attribute to /EmailListeners element"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:AutoTarget booleanValue="false"/&gt;
            &lt;L7p:OtherTargetMessageVariable stringValue="emailListeners.sorted"/&gt;
            &lt;L7p:Regex stringValue="&amp;lt;EmailListeners&gt;"/&gt;
            &lt;L7p:Replace booleanValue="true"/&gt;
            &lt;L7p:Replacement stringValue="&amp;lt;EmailListeners source=&amp;quot;${source}&amp;quot;&gt;"/&gt;
            &lt;L7p:Target target="OTHER"/&gt;
        &lt;/L7p:Regex&gt;
        &lt;L7p:AuditDetailAssertion&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// FINE"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Detail stringValue="==&gt; Leaving Utility Fragment: ${policy.name}"/&gt;
            &lt;L7p:Level stringValue="FINE"/&gt;
        &lt;/L7p:AuditDetailAssertion&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
                        </l7:ResourceSet>
                    </l7:Resources>
                </l7:Policy>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Utility: List HTTP Configurations</l7:Name>
            <l7:Id>c4706d99077459bed7ca5ef6c9e80d57</l7:Id>
            <l7:Type>POLICY</l7:Type>
            <l7:TimeStamp>2022-04-29T11:42:05.227-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Policy guid="fbf889bf-cb0b-4067-ac18-4b0ff6d5e6c1" id="c4706d99077459bed7ca5ef6c9e80d57" version="0">
                    <l7:PolicyDetail folderId="c4706d99077459bed7ca5ef6c9e62ecb" guid="fbf889bf-cb0b-4067-ac18-4b0ff6d5e6c1" id="c4706d99077459bed7ca5ef6c9e80d57" version="0">
                        <l7:Name>Utility: List HTTP Configurations</l7:Name>
                        <l7:PolicyType>Include</l7:PolicyType>
                        <l7:Properties>
                            <l7:Property key="revision">
                                <l7:LongValue>1</l7:LongValue>
                            </l7:Property>
                            <l7:Property key="soap">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                        </l7:Properties>
                    </l7:PolicyDetail>
                    <l7:Resources>
                        <l7:ResourceSet tag="policy">
                            <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Policy fragment for &amp;quot;Utility: List HTTP Configurations&amp;quot; encapsulated assertion"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Call Restman and generate a sorted list of HTTP configurations"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** - Assumes an admin role user has been authenticated"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** - Caches results for ${cacheAge} seconds (default=300). To refresh the cache set ${refresh}=true when calling"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** - Returns a text/xml message variable in ${httpConfigurations.sorted}"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Inputs:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - refresh (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - cacheAge (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Outputs:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - httpConfigurations.sorted (message)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - error.msg (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v1.0.0 - Jay MacDonald - 20201107 - Initial Version"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:AuditDetailAssertion&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// FINE"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Detail stringValue="==&gt; Entering Utility Fragment: ${policy.name} (refresh=${refresh})"/&gt;
            &lt;L7p:Level stringValue="FINE"/&gt;
        &lt;/L7p:AuditDetailAssertion&gt;
        &lt;wsp:All wsp:Usage="Required"&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** ${httpConfigurations.sorted} has the following schema:"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** "/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** &amp;lt;HTTPConfigurations source=&amp;quot;system|cache&amp;quot;&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   &amp;lt;HTTPConfiguration id=&amp;quot;string&amp;quot;&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;Host&gt;string&amp;lt;/Host&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   &amp;lt;/HTTPConfiguration&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   ..."/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** &amp;lt;/HTTPConfigurations&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** "/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** Where:"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   Host = the host name of the HTTP configuration"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Description of ${httpConfigurations.sorted}"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:All&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// true or false"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${cacheAge}"/&gt;
                &lt;L7p:Operator operatorNull="null"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item dataType="included"&gt;
                        &lt;L7p:Type variableDataType="int"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;L7p:item binary="included"&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Operator operator="GT"/&gt;
                        &lt;L7p:RightValue stringValue="0"/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="MzAw"/&gt;
                &lt;L7p:DataType variableDataType="int"/&gt;
                &lt;L7p:VariableToSet stringValue="cacheAge"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Ensure ${cacheAge} is set, default=300"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// true or false"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${refresh}"/&gt;
                &lt;L7p:Operator operatorNull="null"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item dataType="included"&gt;
                        &lt;L7p:Type variableDataType="string"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;L7p:item regex="included"&gt;
                        &lt;L7p:Pattern stringValue="^(true|false)$"/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="ZmFsc2U="/&gt;
                &lt;L7p:VariableToSet stringValue="refresh"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Ensure ${refresh} is set, default=false"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="aHR0cENvbmZpZ3VyYXRpb25zLnNvcnRlZA=="/&gt;
            &lt;L7p:VariableToSet stringValue="cacheKey"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${refresh}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="string"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:RightValue stringValue="true"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:CacheLookup&gt;
                    &lt;L7p:CacheEntryKey stringValue="${cacheKey}"/&gt;
                    &lt;L7p:CacheId stringValue="httpConfigurationList"/&gt;
                    &lt;L7p:ContentTypeOverride stringValue=""/&gt;
                    &lt;L7p:MaxEntryAgeSeconds stringValue="${cacheAge}"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="httpConfigurations.sorted"/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                &lt;/L7p:CacheLookup&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="Y2FjaGU="/&gt;
                    &lt;L7p:VariableToSet stringValue="source"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// FINE"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; Found httpConfigurations.sorted in the cache"/&gt;
                    &lt;L7p:Level stringValue="FINE"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Look in cache unless asked to refresh cache"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:Encapsulated&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// GET httpConfigurations"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="c8a5a0d5-1ae2-4144-b538-5c311efc1560"/&gt;
                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Call Restman"/&gt;
                    &lt;L7p:Parameters mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="element"/&gt;
                            &lt;L7p:value stringValue="HttpConfiguration"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="message"/&gt;
                            &lt;L7p:value stringValue=""/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="method"/&gt;
                            &lt;L7p:value stringValue="GET"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="resource"/&gt;
                            &lt;L7p:value stringValue="httpConfigurations"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Parameters&gt;
                &lt;/L7p:Encapsulated&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:VariablePrefix stringValue="httpConfigurations"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:List/l7:Item/l7:Resource/l7:HttpConfiguration"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:TrueAssertion/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Extract the list of HTTP configurations, never fail"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz48SFRUUENvbmZpZ3VyYXRpb25zPg=="/&gt;
                    &lt;L7p:VariableToSet stringValue="httpConfigurations.sorted"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:ForEachLoop L7p:Usage="Required"
                    loopVariable="httpConfigurations.elements" variablePrefix="httpConfiguration"&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cast to message type for parsing"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:Base64Expression stringValue="JHtodHRwQ29uZmlndXJhdGlvbi5jdXJyZW50fQ=="/&gt;
                        &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                        &lt;L7p:DataType variableDataType="message"/&gt;
                        &lt;L7p:VariableToSet stringValue="httpConfiguration.xml"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Retrieve the HTTP configuration ID"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="id"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="httpConfiguration.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:HttpConfiguration/@id"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// retrieve the HTTP configuration name"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="host"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="httpConfiguration.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:HttpConfiguration/l7:Host"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="JHtodHRwQ29uZmlndXJhdGlvbnMuc29ydGVkfTxIVFRQQ29uZmlndXJhdGlvbiBpZD0iJHtpZC5yZXN1bHR9Ij48SG9zdD48IVtDREFUQVske2hvc3QucmVzdWx0fV1dPjwvSG9zdD48L0hUVFBDb25maWd1cmF0aW9uPg=="/&gt;
                        &lt;L7p:VariableToSet stringValue="httpConfigurations.sorted"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Build the list of HTTP configuration"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/L7p:ForEachLoop&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtodHRwQ29uZmlndXJhdGlvbnMuc29ydGVkfTwvSFRUUENvbmZpZ3VyYXRpb25zPg=="/&gt;
                    &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                    &lt;L7p:DataType variableDataType="message"/&gt;
                    &lt;L7p:VariableToSet stringValue="httpConfigurations.sorted"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:XslTransformation&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Sort the HTTP configurations by name"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Direction intValue="-1"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="httpConfigurations.sorted"/&gt;
                    &lt;L7p:ResourceInfo staticResourceInfo="included"&gt;
                        &lt;L7p:Document stringValueReference="inline"&gt;&lt;![CDATA[&lt;xsl:stylesheet version="1.0" xmlns:l7="http://ns.l7tech.com/2010/04/gateway-management" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;

&lt;xsl:template match="/HTTPConfigurations"&gt;
    &lt;xsl:copy&gt;
        &lt;xsl:for-each select="HTTPConfiguration"&gt;
            &lt;xsl:sort select="./Host"/&gt;
            &lt;xsl:copy-of select="."/&gt;
        &lt;/xsl:for-each&gt;
    &lt;/xsl:copy&gt;
&lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;]]&gt;&lt;/L7p:Document&gt;
                    &lt;/L7p:ResourceInfo&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                    &lt;L7p:TransformName stringValue=""/&gt;
                    &lt;L7p:XsltVersion stringValue="1.0"/&gt;
                &lt;/L7p:XslTransformation&gt;
                &lt;L7p:CacheStorage&gt;
                    &lt;L7p:CacheEntryKey stringValue="${cacheKey}"/&gt;
                    &lt;L7p:CacheId stringValue="httpConfigurationList"/&gt;
                    &lt;L7p:MaxEntries stringValue="1"/&gt;
                    &lt;L7p:MaxEntryAgeSeconds stringValue="${cacheAge}"/&gt;
                    &lt;L7p:MaxEntrySizeBytes stringValue="200000"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="httpConfigurations.sorted"/&gt;
                    &lt;L7p:StoreSoapFaults booleanValue="true"/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                &lt;/L7p:CacheStorage&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="c3lzdGVt"/&gt;
                    &lt;L7p:VariableToSet stringValue="source"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// FINE"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; Loaded httpConfigurations.sorted from system and stored to cache"/&gt;
                    &lt;L7p:Level stringValue="FINE"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Retrieve new list and cache"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="RXJyb3Igd2hlbiBsaXN0aW5nIEhUVFAgY29uZmlndXJhdGlvbnM="/&gt;
                    &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// WARNING"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; Error listing HTTP configurations in ${policy.name}"/&gt;
                    &lt;L7p:Level stringValue="WARNING"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:FalseAssertion/&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Failure - set ${error.msg}"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Caching logic"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:Regex&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Add source attribute to /HTTPConfigurations element"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:AutoTarget booleanValue="false"/&gt;
            &lt;L7p:OtherTargetMessageVariable stringValue="httpConfigurations.sorted"/&gt;
            &lt;L7p:Regex stringValue="&amp;lt;HTTPConfigurations&gt;"/&gt;
            &lt;L7p:Replace booleanValue="true"/&gt;
            &lt;L7p:Replacement stringValue="&amp;lt;HTTPConfigurations source=&amp;quot;${source}&amp;quot;&gt;"/&gt;
            &lt;L7p:Target target="OTHER"/&gt;
        &lt;/L7p:Regex&gt;
        &lt;L7p:AuditDetailAssertion&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// FINE"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Detail stringValue="==&gt; Leaving Utility Fragment: ${policy.name}"/&gt;
            &lt;L7p:Level stringValue="FINE"/&gt;
        &lt;/L7p:AuditDetailAssertion&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
                        </l7:ResourceSet>
                    </l7:Resources>
                </l7:Policy>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Utility: List Active Connectors</l7:Name>
            <l7:Id>c4706d99077459bed7ca5ef6c9e8150b</l7:Id>
            <l7:Type>POLICY</l7:Type>
            <l7:TimeStamp>2022-04-29T11:42:05.233-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Policy guid="5e77b1ed-3cd9-4c5a-b038-601cca3fbc27" id="c4706d99077459bed7ca5ef6c9e8150b" version="0">
                    <l7:PolicyDetail folderId="c4706d99077459bed7ca5ef6c9e62ecb" guid="5e77b1ed-3cd9-4c5a-b038-601cca3fbc27" id="c4706d99077459bed7ca5ef6c9e8150b" version="0">
                        <l7:Name>Utility: List Active Connectors</l7:Name>
                        <l7:PolicyType>Include</l7:PolicyType>
                        <l7:Properties>
                            <l7:Property key="revision">
                                <l7:LongValue>1</l7:LongValue>
                            </l7:Property>
                            <l7:Property key="soap">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                        </l7:Properties>
                    </l7:PolicyDetail>
                    <l7:Resources>
                        <l7:ResourceSet tag="policy">
                            <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Policy fragment for &amp;quot;Utility: List Active Connectors&amp;quot; encapsulated assertion"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Call Restman and generate a sorted list of active connectors"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** - Assumes an admin role user has been authenticated"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** - Caches results for ${cacheAge} seconds (default=300). To refresh the cache set ${refresh}=true when calling"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** - Returns a text/xml message variable in ${activeConnectors.sorted}"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Inputs:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - refresh (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - cacheAge (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Outputs:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - activeConnectors.sorted (message)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - error.msg (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v1.0.0 - Jay MacDonald - 20201107 - Initial Version"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:AuditDetailAssertion&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// FINE"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Detail stringValue="==&gt; Entering Utility Fragment: ${policy.name} (refresh=${refresh})"/&gt;
            &lt;L7p:Level stringValue="FINE"/&gt;
        &lt;/L7p:AuditDetailAssertion&gt;
        &lt;wsp:All wsp:Usage="Required"&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** ${activeConnectors.sorted} has the following schema:"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** "/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** &amp;lt;ActiveConnectors source=&amp;quot;system|cache&amp;quot;&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   &amp;lt;ActiveConnector id=&amp;quot;string&amp;quot;&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;Name&gt;string&amp;lt;/Name&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;Type&gt;string&amp;lt;/Type&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;Enabled&gt;boolean&amp;lt;/Enabled&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   &amp;lt;/ActiveConnector&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   ..."/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** &amp;lt;/ActiveConnectors&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Description of ${activeConnectors.sorted}"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:All&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// true or false"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${cacheAge}"/&gt;
                &lt;L7p:Operator operatorNull="null"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item dataType="included"&gt;
                        &lt;L7p:Type variableDataType="int"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;L7p:item binary="included"&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Operator operator="GT"/&gt;
                        &lt;L7p:RightValue stringValue="0"/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="MzAw"/&gt;
                &lt;L7p:DataType variableDataType="int"/&gt;
                &lt;L7p:VariableToSet stringValue="cacheAge"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Ensure ${cacheAge} is set, default=300"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// true or false"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${refresh}"/&gt;
                &lt;L7p:Operator operatorNull="null"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item dataType="included"&gt;
                        &lt;L7p:Type variableDataType="string"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;L7p:item regex="included"&gt;
                        &lt;L7p:Pattern stringValue="^(true|false)$"/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="ZmFsc2U="/&gt;
                &lt;L7p:VariableToSet stringValue="refresh"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Ensure ${refresh} is set, default=false"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="YWN0aXZlQ29ubmVjdG9ycy5zb3J0ZWQ="/&gt;
            &lt;L7p:VariableToSet stringValue="cacheKey"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${refresh}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="string"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:RightValue stringValue="true"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:CacheLookup&gt;
                    &lt;L7p:CacheEntryKey stringValue="${cacheKey}"/&gt;
                    &lt;L7p:CacheId stringValue="activeConnectorList"/&gt;
                    &lt;L7p:ContentTypeOverride stringValue=""/&gt;
                    &lt;L7p:MaxEntryAgeSeconds stringValue="${cacheAge}"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="activeConnectors.sorted"/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                &lt;/L7p:CacheLookup&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="Y2FjaGU="/&gt;
                    &lt;L7p:VariableToSet stringValue="source"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// FINE"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; Found activeConnectors.sorted in the cache"/&gt;
                    &lt;L7p:Level stringValue="FINE"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Look in cache unless asked to refresh cache"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:Encapsulated&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// GET activeConnectors"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="c8a5a0d5-1ae2-4144-b538-5c311efc1560"/&gt;
                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Call Restman"/&gt;
                    &lt;L7p:Parameters mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="element"/&gt;
                            &lt;L7p:value stringValue="ActiveConnector"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="message"/&gt;
                            &lt;L7p:value stringValue=""/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="method"/&gt;
                            &lt;L7p:value stringValue="GET"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="resource"/&gt;
                            &lt;L7p:value stringValue="activeConnectors"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Parameters&gt;
                &lt;/L7p:Encapsulated&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:VariablePrefix stringValue="activeConnectors"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:List/l7:Item/l7:Resource/l7:ActiveConnector"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:TrueAssertion/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Extract the list of active connectors, never fail"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz48QWN0aXZlQ29ubmVjdG9ycz4="/&gt;
                    &lt;L7p:VariableToSet stringValue="activeConnectors.sorted"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:ForEachLoop L7p:Usage="Required"
                    loopVariable="activeConnectors.elements" variablePrefix="activeConnector"&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cast to message type for parsing"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:Base64Expression stringValue="JHthY3RpdmVDb25uZWN0b3IuY3VycmVudH0="/&gt;
                        &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                        &lt;L7p:DataType variableDataType="message"/&gt;
                        &lt;L7p:VariableToSet stringValue="activeConnector.xml"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Retrieve the active connector ID"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="id"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="activeConnector.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:ActiveConnector/@id"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// retrieve the active connector name"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="name"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="activeConnector.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:ActiveConnector/l7:Name"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// retrieve the active connector type"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="type"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="activeConnector.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:ActiveConnector/l7:Type"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// retrieve the active connector enabled state"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="enabled"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="activeConnector.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:ActiveConnector/l7:Enabled"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="JHthY3RpdmVDb25uZWN0b3JzLnNvcnRlZH08QWN0aXZlQ29ubmVjdG9yIGlkPSIke2lkLnJlc3VsdH0iPjxOYW1lPjwhW0NEQVRBWyR7bmFtZS5yZXN1bHR9XV0+PC9OYW1lPjxUeXBlPiR7dHlwZS5yZXN1bHR9PC9UeXBlPjxFbmFibGVkPiR7ZW5hYmxlZC5yZXN1bHR9PC9FbmFibGVkPjwvQWN0aXZlQ29ubmVjdG9yPg=="/&gt;
                        &lt;L7p:VariableToSet stringValue="activeConnectors.sorted"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Build the list of active connectors"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/L7p:ForEachLoop&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHthY3RpdmVDb25uZWN0b3JzLnNvcnRlZH08L0FjdGl2ZUNvbm5lY3RvcnM+"/&gt;
                    &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                    &lt;L7p:DataType variableDataType="message"/&gt;
                    &lt;L7p:VariableToSet stringValue="activeConnectors.sorted"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:XslTransformation&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Sort the active connectors by name"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Direction intValue="-1"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="activeConnectors.sorted"/&gt;
                    &lt;L7p:ResourceInfo staticResourceInfo="included"&gt;
                        &lt;L7p:Document stringValueReference="inline"&gt;&lt;![CDATA[&lt;xsl:stylesheet version="1.0" xmlns:l7="http://ns.l7tech.com/2010/04/gateway-management" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;

&lt;xsl:template match="/ActiveConnectors"&gt;
    &lt;xsl:copy&gt;
        &lt;xsl:for-each select="ActiveConnector"&gt;
            &lt;xsl:sort select="./Name"/&gt;
            &lt;xsl:copy-of select="."/&gt;
        &lt;/xsl:for-each&gt;
    &lt;/xsl:copy&gt;
&lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;]]&gt;&lt;/L7p:Document&gt;
                    &lt;/L7p:ResourceInfo&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                    &lt;L7p:TransformName stringValue=""/&gt;
                    &lt;L7p:XsltVersion stringValue="1.0"/&gt;
                &lt;/L7p:XslTransformation&gt;
                &lt;L7p:CacheStorage&gt;
                    &lt;L7p:CacheEntryKey stringValue="${cacheKey}"/&gt;
                    &lt;L7p:CacheId stringValue="activeConnectorList"/&gt;
                    &lt;L7p:MaxEntries stringValue="1"/&gt;
                    &lt;L7p:MaxEntryAgeSeconds stringValue="${cacheAge}"/&gt;
                    &lt;L7p:MaxEntrySizeBytes stringValue="200000"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="activeConnectors.sorted"/&gt;
                    &lt;L7p:StoreSoapFaults booleanValue="true"/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                &lt;/L7p:CacheStorage&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="c3lzdGVt"/&gt;
                    &lt;L7p:VariableToSet stringValue="source"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// FINE"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; Loaded activeConnectors.sorted from system and stored to cache"/&gt;
                    &lt;L7p:Level stringValue="FINE"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Retrieve new list and cache"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="RXJyb3Igd2hlbiBsaXN0aW5nIGFjdGl2ZSBjb25uZWN0b3Jz"/&gt;
                    &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// WARNING"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; Error listing active connectors in ${policy.name}"/&gt;
                    &lt;L7p:Level stringValue="WARNING"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:FalseAssertion/&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Failure - set ${error.msg}"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Caching logic"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:Regex&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Add source attribute to /ActiveConnectors element"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:AutoTarget booleanValue="false"/&gt;
            &lt;L7p:OtherTargetMessageVariable stringValue="activeConnectors.sorted"/&gt;
            &lt;L7p:Regex stringValue="&amp;lt;ActiveConnectors&gt;"/&gt;
            &lt;L7p:Replace booleanValue="true"/&gt;
            &lt;L7p:Replacement stringValue="&amp;lt;ActiveConnectors source=&amp;quot;${source}&amp;quot;&gt;"/&gt;
            &lt;L7p:Target target="OTHER"/&gt;
        &lt;/L7p:Regex&gt;
        &lt;L7p:AuditDetailAssertion&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// FINE"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Detail stringValue="==&gt; Leaving Utility Fragment: ${policy.name}"/&gt;
            &lt;L7p:Level stringValue="FINE"/&gt;
        &lt;/L7p:AuditDetailAssertion&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
                        </l7:ResourceSet>
                    </l7:Resources>
                </l7:Policy>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Utility: List JDBC Connections</l7:Name>
            <l7:Id>d12aa7875d7217ab6c41e7d7acf651f4</l7:Id>
            <l7:Type>POLICY</l7:Type>
            <l7:TimeStamp>2022-04-29T11:42:05.240-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Policy guid="98bdf50c-2273-441a-8d94-d91f0a1bc268" id="d12aa7875d7217ab6c41e7d7acf651f4" version="0">
                    <l7:PolicyDetail folderId="c4706d99077459bed7ca5ef6c9e62ecb" guid="98bdf50c-2273-441a-8d94-d91f0a1bc268" id="d12aa7875d7217ab6c41e7d7acf651f4" version="0">
                        <l7:Name>Utility: List JDBC Connections</l7:Name>
                        <l7:PolicyType>Include</l7:PolicyType>
                        <l7:Properties>
                            <l7:Property key="revision">
                                <l7:LongValue>1</l7:LongValue>
                            </l7:Property>
                            <l7:Property key="soap">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                        </l7:Properties>
                    </l7:PolicyDetail>
                    <l7:Resources>
                        <l7:ResourceSet tag="policy">
                            <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Policy fragment for &amp;quot;Utility: List JDBC Connections&amp;quot; encapsulated assertion"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Call Restman and generate a sorted list of JDBC connections"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** - Assumes an admin role user has been authenticated"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** - Caches results for ${cacheAge} seconds (default=300). To refresh the cache set ${refresh}=true when calling"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** - Returns a text/xml message variable in ${jdbcConnections.sorted}"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Inputs:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - refresh (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - cacheAge (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Outputs:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - jdbcConnections.sorted (message)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - error.msg (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v1.0.0 - Jay MacDonald - 20201107 - Initial Version"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:AuditDetailAssertion&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// FINE"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Detail stringValue="==&gt; Entering Utility Fragment: ${policy.name} (refresh=${refresh})"/&gt;
            &lt;L7p:Level stringValue="FINE"/&gt;
        &lt;/L7p:AuditDetailAssertion&gt;
        &lt;wsp:All wsp:Usage="Required"&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** ${jdbcConnections.sorted} has the following schema:"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** "/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** &amp;lt;JDBCConnections source=&amp;quot;system|cache&amp;quot;&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   &amp;lt;JDBCConnection id=&amp;quot;string&amp;quot;&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;Name&gt;string&amp;lt;/Name&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;JDBCURL&gt;string&amp;lt;/JDBCURL&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;DriverClass&gt;string&amp;lt;/DriverClass&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;Enabled&gt;boolean&amp;lt;/Enabled&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;MaxPoolSize&gt;integer&amp;lt;/MaxPoolSize&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;MinPoolSize&gt;integer&amp;lt;/MinPoolSize&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   &amp;lt;/JDBCConnection&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   ..."/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** &amp;lt;/JDBCConnections&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** "/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** Where:"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   Name = the name of the JDBC connection"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   JDBCURL = the JDBC connection URL"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   DriverClass = the driver class"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   Enabled = true or false"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   MaxPoolSize = the maximum connection pool size"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   MinPoolSize = the minimum connection pool size"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Description of ${jdbcConnections.sorted}"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:All&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// true or false"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${cacheAge}"/&gt;
                &lt;L7p:Operator operatorNull="null"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item dataType="included"&gt;
                        &lt;L7p:Type variableDataType="int"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;L7p:item binary="included"&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Operator operator="GT"/&gt;
                        &lt;L7p:RightValue stringValue="0"/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="MzAw"/&gt;
                &lt;L7p:DataType variableDataType="int"/&gt;
                &lt;L7p:VariableToSet stringValue="cacheAge"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Ensure ${cacheAge} is set, default=300"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// true or false"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${refresh}"/&gt;
                &lt;L7p:Operator operatorNull="null"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item dataType="included"&gt;
                        &lt;L7p:Type variableDataType="string"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;L7p:item regex="included"&gt;
                        &lt;L7p:Pattern stringValue="^(true|false)$"/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="ZmFsc2U="/&gt;
                &lt;L7p:VariableToSet stringValue="refresh"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Ensure ${refresh} is set, default=false"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="amRiY0Nvbm5lY3Rpb25zLnNvcnRlZA=="/&gt;
            &lt;L7p:VariableToSet stringValue="cacheKey"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${refresh}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="string"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:RightValue stringValue="true"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:CacheLookup&gt;
                    &lt;L7p:CacheEntryKey stringValue="${cacheKey}"/&gt;
                    &lt;L7p:CacheId stringValue="jdbcConnectionList"/&gt;
                    &lt;L7p:ContentTypeOverride stringValue=""/&gt;
                    &lt;L7p:MaxEntryAgeSeconds stringValue="${cacheAge}"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="jdbcConnections.sorted"/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                &lt;/L7p:CacheLookup&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="Y2FjaGU="/&gt;
                    &lt;L7p:VariableToSet stringValue="source"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// FINE"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; Found jdbcConnections.sorted in the cache"/&gt;
                    &lt;L7p:Level stringValue="FINE"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Look in cache unless asked to refresh cache"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:Encapsulated&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// GET jdbcConnections"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="c8a5a0d5-1ae2-4144-b538-5c311efc1560"/&gt;
                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Call Restman"/&gt;
                    &lt;L7p:Parameters mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="element"/&gt;
                            &lt;L7p:value stringValue="JDBCConnection"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="message"/&gt;
                            &lt;L7p:value stringValue=""/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="method"/&gt;
                            &lt;L7p:value stringValue="GET"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="resource"/&gt;
                            &lt;L7p:value stringValue="jdbcConnections"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Parameters&gt;
                &lt;/L7p:Encapsulated&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:VariablePrefix stringValue="jdbcConnections"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:List/l7:Item/l7:Resource/l7:JDBCConnection"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:TrueAssertion/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Extract the list of JDBC connections, never fail"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz48SkRCQ0Nvbm5lY3Rpb25zPg=="/&gt;
                    &lt;L7p:VariableToSet stringValue="jdbcConnections.sorted"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:ForEachLoop L7p:Usage="Required"
                    loopVariable="jdbcConnections.elements" variablePrefix="jdbcConnection"&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cast to message type for parsing"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:Base64Expression stringValue="JHtqZGJjQ29ubmVjdGlvbi5jdXJyZW50fQ=="/&gt;
                        &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                        &lt;L7p:DataType variableDataType="message"/&gt;
                        &lt;L7p:VariableToSet stringValue="jdbcConnection.xml"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Retrieve the JDBC connection ID"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="id"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="jdbcConnection.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:JDBCConnection/@id"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// retrieve the JDBC connection name"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="name"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="jdbcConnection.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:JDBCConnection/l7:Name"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// retrieve the JDBC enabled state"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="enabled"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="jdbcConnection.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:JDBCConnection/l7:Enabled"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Retrieve the JDBC connection URL"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="jdbcUrl"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="jdbcConnection.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:JDBCConnection/l7:Extension/l7:JdbcUrl"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Retrieve the JDBC driver class"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="driverClass"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="jdbcConnection.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:JDBCConnection/l7:Extension/l7:DriverClass"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Retrieve the JDBC driver class"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="maxPoolSize"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="jdbcConnection.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:JDBCConnection/l7:Properties/l7:Property[@key='maximumPoolSize']/l7:IntegerValue"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Retrieve the JDBC driver class"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="minPoolSize"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="jdbcConnection.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:JDBCConnection/l7:Properties/l7:Property[@key='minimumPoolSize']/l7:IntegerValue"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="JHtqZGJjQ29ubmVjdGlvbnMuc29ydGVkfTxKREJDQ29ubmVjdGlvbiBpZD0iJHtpZC5yZXN1bHR9Ij48TmFtZT48IVtDREFUQVske25hbWUucmVzdWx0fV1dPjwvTmFtZT48SkRCQ1VSTD48IVtDREFUQVske2pkYmNVcmwucmVzdWx0fV1dPjwvSkRCQ1VSTD48RHJpdmVyQ2xhc3M+JHtkcml2ZXJDbGFzcy5yZXN1bHR9PC9Ecml2ZXJDbGFzcz48RW5hYmxlZD4ke2VuYWJsZWQucmVzdWx0fTwvRW5hYmxlZD48TWF4UG9vbFNpemU+JHttYXhQb29sU2l6ZS5yZXN1bHR9PC9NYXhQb29sU2l6ZT48TWluUG9vbFNpemU+JHttaW5Qb29sU2l6ZS5yZXN1bHR9PC9NaW5Qb29sU2l6ZT48L0pEQkNDb25uZWN0aW9uPg=="/&gt;
                        &lt;L7p:VariableToSet stringValue="jdbcConnections.sorted"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Build the list of JDBC connections"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/L7p:ForEachLoop&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtqZGJjQ29ubmVjdGlvbnMuc29ydGVkfTwvSkRCQ0Nvbm5lY3Rpb25zPg=="/&gt;
                    &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                    &lt;L7p:DataType variableDataType="message"/&gt;
                    &lt;L7p:VariableToSet stringValue="jdbcConnections.sorted"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:XslTransformation&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Sort the JDBC connections by name"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Direction intValue="-1"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="jdbcConnections.sorted"/&gt;
                    &lt;L7p:ResourceInfo staticResourceInfo="included"&gt;
                        &lt;L7p:Document stringValueReference="inline"&gt;&lt;![CDATA[&lt;xsl:stylesheet version="1.0" xmlns:l7="http://ns.l7tech.com/2010/04/gateway-management" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;

&lt;xsl:template match="/JDBCConnections"&gt;
    &lt;xsl:copy&gt;
        &lt;xsl:for-each select="JDBCConnection"&gt;
            &lt;xsl:sort select="./Name"/&gt;
            &lt;xsl:copy-of select="."/&gt;
        &lt;/xsl:for-each&gt;
    &lt;/xsl:copy&gt;
&lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;]]&gt;&lt;/L7p:Document&gt;
                    &lt;/L7p:ResourceInfo&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                    &lt;L7p:TransformName stringValue=""/&gt;
                    &lt;L7p:XsltVersion stringValue="1.0"/&gt;
                &lt;/L7p:XslTransformation&gt;
                &lt;L7p:CacheStorage&gt;
                    &lt;L7p:CacheEntryKey stringValue="${cacheKey}"/&gt;
                    &lt;L7p:CacheId stringValue="jdbcConnectionList"/&gt;
                    &lt;L7p:MaxEntries stringValue="1"/&gt;
                    &lt;L7p:MaxEntryAgeSeconds stringValue="${cacheAge}"/&gt;
                    &lt;L7p:MaxEntrySizeBytes stringValue="200000"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="jdbcConnections.sorted"/&gt;
                    &lt;L7p:StoreSoapFaults booleanValue="true"/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                &lt;/L7p:CacheStorage&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="c3lzdGVt"/&gt;
                    &lt;L7p:VariableToSet stringValue="source"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// FINE"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; Loaded jdbcConnections.sorted from system and stored to cache"/&gt;
                    &lt;L7p:Level stringValue="FINE"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Retrieve new list and cache"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="RXJyb3Igd2hlbiBsaXN0aW5nIEpEQkMgY29ubmVjdGlvbnM="/&gt;
                    &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// WARNING"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; Error listing JDBC connections in ${policy.name}"/&gt;
                    &lt;L7p:Level stringValue="WARNING"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:FalseAssertion/&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Failure - set ${error.msg}"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Caching logic"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:Regex&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Add source attribute to /JDBCConnections element"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:AutoTarget booleanValue="false"/&gt;
            &lt;L7p:OtherTargetMessageVariable stringValue="jdbcConnections.sorted"/&gt;
            &lt;L7p:Regex stringValue="&amp;lt;JDBCConnections&gt;"/&gt;
            &lt;L7p:Replace booleanValue="true"/&gt;
            &lt;L7p:Replacement stringValue="&amp;lt;JDBCConnections source=&amp;quot;${source}&amp;quot;&gt;"/&gt;
            &lt;L7p:Target target="OTHER"/&gt;
        &lt;/L7p:Regex&gt;
        &lt;L7p:AuditDetailAssertion&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// FINE"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Detail stringValue="==&gt; Leaving Utility Fragment: ${policy.name}"/&gt;
            &lt;L7p:Level stringValue="FINE"/&gt;
        &lt;/L7p:AuditDetailAssertion&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
                        </l7:ResourceSet>
                    </l7:Resources>
                </l7:Policy>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Utility: List Cassandra Connections</l7:Name>
            <l7:Id>d12aa7875d7217ab6c41e7d7acf66dff</l7:Id>
            <l7:Type>POLICY</l7:Type>
            <l7:TimeStamp>2022-04-29T11:42:05.247-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Policy guid="a84290a6-ecec-41ed-96ea-6e9e68e2ff40" id="d12aa7875d7217ab6c41e7d7acf66dff" version="0">
                    <l7:PolicyDetail folderId="c4706d99077459bed7ca5ef6c9e62ecb" guid="a84290a6-ecec-41ed-96ea-6e9e68e2ff40" id="d12aa7875d7217ab6c41e7d7acf66dff" version="0">
                        <l7:Name>Utility: List Cassandra Connections</l7:Name>
                        <l7:PolicyType>Include</l7:PolicyType>
                        <l7:Properties>
                            <l7:Property key="revision">
                                <l7:LongValue>1</l7:LongValue>
                            </l7:Property>
                            <l7:Property key="soap">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                        </l7:Properties>
                    </l7:PolicyDetail>
                    <l7:Resources>
                        <l7:ResourceSet tag="policy">
                            <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Policy fragment for &amp;quot;Utility: List Cassandra Connections&amp;quot; encapsulated assertion"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Call Restman and generate a sorted list of Cassandra connections"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** - Assumes an admin role user has been authenticated"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** - Caches results for ${cacheAge} seconds (default=300). To refresh the cache set ${refresh}=true when calling"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** - Returns a text/xml message variable in ${cassandraConnections.sorted}"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Inputs:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - refresh (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - cacheAge (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Outputs:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - cassandraConnections.sorted (message)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - error.msg (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v1.0.0 - Jay MacDonald - 20201107 - Initial Version"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:AuditDetailAssertion&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// FINE"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Detail stringValue="==&gt; Entering Utility Fragment: ${policy.name} (refresh=${refresh})"/&gt;
            &lt;L7p:Level stringValue="FINE"/&gt;
        &lt;/L7p:AuditDetailAssertion&gt;
        &lt;wsp:All wsp:Usage="Required"&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** ${cassandraConnections.sorted} has the following schema:"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** "/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** &amp;lt;CassandraConnections source=&amp;quot;system|cache&amp;quot;&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   &amp;lt;CassandraConnection id=&amp;quot;string&amp;quot;&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;Name&gt;string&amp;lt;/Name&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;KeySpace&gt;string&amp;lt;/KeySpace&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;ContactPoint&gt;string&amp;lt;/ContactPoint"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;Port&gt;integer&amp;lt;/Port&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;Enabled&gt;boolean&amp;lt;/Enabled&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   &amp;lt;/CassandraConnection&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   ..."/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** &amp;lt;/CassandraConnections&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** "/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** Where:"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   Name = the name of the cassandra connection"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   KeySpace = the default keyspace the Gateway connects to"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   ContactPoint = the addresses of the nodes to connect to within the Cassandra servers"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   Port = the TCP port being listened to by the Cassandra servers"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   Enabled = true or false"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Description of ${cassandraConnections.sorted}"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:All&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// true or false"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${cacheAge}"/&gt;
                &lt;L7p:Operator operatorNull="null"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item dataType="included"&gt;
                        &lt;L7p:Type variableDataType="int"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;L7p:item binary="included"&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Operator operator="GT"/&gt;
                        &lt;L7p:RightValue stringValue="0"/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="MzAw"/&gt;
                &lt;L7p:DataType variableDataType="int"/&gt;
                &lt;L7p:VariableToSet stringValue="cacheAge"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Ensure ${cacheAge} is set, default=300"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// true or false"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${refresh}"/&gt;
                &lt;L7p:Operator operatorNull="null"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item dataType="included"&gt;
                        &lt;L7p:Type variableDataType="string"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;L7p:item regex="included"&gt;
                        &lt;L7p:Pattern stringValue="^(true|false)$"/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="ZmFsc2U="/&gt;
                &lt;L7p:VariableToSet stringValue="refresh"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Ensure ${refresh} is set, default=false"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="Y2Fzc2FuZHJhQ29ubmVjdGlvbnMuc29ydGVk"/&gt;
            &lt;L7p:VariableToSet stringValue="cacheKey"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${refresh}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="string"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:RightValue stringValue="true"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:CacheLookup&gt;
                    &lt;L7p:CacheEntryKey stringValue="${cacheKey}"/&gt;
                    &lt;L7p:CacheId stringValue="cassandraConnectionList"/&gt;
                    &lt;L7p:ContentTypeOverride stringValue=""/&gt;
                    &lt;L7p:MaxEntryAgeSeconds stringValue="${cacheAge}"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="cassandraConnections.sorted"/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                &lt;/L7p:CacheLookup&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="Y2FjaGU="/&gt;
                    &lt;L7p:VariableToSet stringValue="source"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// FINE"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; Found cassandraConnections.sorted in the cache"/&gt;
                    &lt;L7p:Level stringValue="FINE"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Look in cache unless asked to refresh cache"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:Encapsulated&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// GET cassandraConnections"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="c8a5a0d5-1ae2-4144-b538-5c311efc1560"/&gt;
                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Call Restman"/&gt;
                    &lt;L7p:Parameters mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="element"/&gt;
                            &lt;L7p:value stringValue="CassandraConnection"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="message"/&gt;
                            &lt;L7p:value stringValue=""/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="method"/&gt;
                            &lt;L7p:value stringValue="GET"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="resource"/&gt;
                            &lt;L7p:value stringValue="cassandraConnections"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Parameters&gt;
                &lt;/L7p:Encapsulated&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:VariablePrefix stringValue="cassandraConnections"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:List/l7:Item/l7:Resource/l7:CassandraConnection"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:TrueAssertion/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Extract the list of cassandra connections, never fail"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz48Q2Fzc2FuZHJhQ29ubmVjdGlvbnM+"/&gt;
                    &lt;L7p:VariableToSet stringValue="cassandraConnections.sorted"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:ForEachLoop L7p:Usage="Required"
                    loopVariable="cassandraConnections.elements" variablePrefix="cassandraConnection"&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cast to message type for parsing"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:Base64Expression stringValue="JHtjYXNzYW5kcmFDb25uZWN0aW9uLmN1cnJlbnR9"/&gt;
                        &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                        &lt;L7p:DataType variableDataType="message"/&gt;
                        &lt;L7p:VariableToSet stringValue="cassandraConnection.xml"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Retrieve the cassandra connection ID"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="id"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="cassandraConnection.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:CassandraConnection/@id"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// retrieve the cassandra connection name"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="name"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="cassandraConnection.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:CassandraConnection/l7:Name"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Retrieve the cassandra connection keyspace"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="keyspace"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="cassandraConnection.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:CassandraConnection/l7:Keyspace"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Retrieve the cassandra contact point"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="contactPoint"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="cassandraConnection.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:CassandraConnection/l7:ContactPoint"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Retrieve the cassandra port"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="port"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="cassandraConnection.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:CassandraConnection/l7:Port"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Retrieve the cassandra enabled state"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="enabled"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="cassandraConnection.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:CassandraConnection/l7:Enabled"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="JHtjYXNzYW5kcmFDb25uZWN0aW9ucy5zb3J0ZWR9PENhc3NhbmRyYUNvbm5lY3Rpb24gaWQ9IiR7aWQucmVzdWx0fSI+PE5hbWU+PCFbQ0RBVEFbJHtuYW1lLnJlc3VsdH1dXT48L05hbWU+PEtleXNwYWNlPjwhW0NEQVRBWyR7a2V5c3BhY2UucmVzdWx0fV1dPjwvS2V5c3BhY2U+PENvbnRhY3RQb2ludD48IVtDREFUQVske2NvbnRhY3RQb2ludC5yZXN1bHR9XV0+PC9Db250YWN0UG9pbnQ+PFBvcnQ+JHtwb3J0LnJlc3VsdH08L1BvcnQ+PEVuYWJsZWQ+JHtlbmFibGVkLnJlc3VsdH08L0VuYWJsZWQ+PC9DYXNzYW5kcmFDb25uZWN0aW9uPg=="/&gt;
                        &lt;L7p:VariableToSet stringValue="cassandraConnections.sorted"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Build the list of cassandra connections"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/L7p:ForEachLoop&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtjYXNzYW5kcmFDb25uZWN0aW9ucy5zb3J0ZWR9PC9DYXNzYW5kcmFDb25uZWN0aW9ucz4="/&gt;
                    &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                    &lt;L7p:DataType variableDataType="message"/&gt;
                    &lt;L7p:VariableToSet stringValue="cassandraConnections.sorted"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:XslTransformation&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Sort the cassandra connections by name"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Direction intValue="-1"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="cassandraConnections.sorted"/&gt;
                    &lt;L7p:ResourceInfo staticResourceInfo="included"&gt;
                        &lt;L7p:Document stringValueReference="inline"&gt;&lt;![CDATA[&lt;xsl:stylesheet version="1.0" xmlns:l7="http://ns.l7tech.com/2010/04/gateway-management" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;

&lt;xsl:template match="/CassandraConnections"&gt;
    &lt;xsl:copy&gt;
        &lt;xsl:for-each select="CassandraConnection"&gt;
            &lt;xsl:sort select="./Name"/&gt;
            &lt;xsl:copy-of select="."/&gt;
        &lt;/xsl:for-each&gt;
    &lt;/xsl:copy&gt;
&lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;]]&gt;&lt;/L7p:Document&gt;
                    &lt;/L7p:ResourceInfo&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                    &lt;L7p:TransformName stringValue=""/&gt;
                    &lt;L7p:XsltVersion stringValue="1.0"/&gt;
                &lt;/L7p:XslTransformation&gt;
                &lt;L7p:CacheStorage&gt;
                    &lt;L7p:CacheEntryKey stringValue="${cacheKey}"/&gt;
                    &lt;L7p:CacheId stringValue="cassandraConnectionList"/&gt;
                    &lt;L7p:MaxEntries stringValue="1"/&gt;
                    &lt;L7p:MaxEntryAgeSeconds stringValue="${cacheAge}"/&gt;
                    &lt;L7p:MaxEntrySizeBytes stringValue="200000"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="cassandraConnections.sorted"/&gt;
                    &lt;L7p:StoreSoapFaults booleanValue="true"/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                &lt;/L7p:CacheStorage&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="c3lzdGVt"/&gt;
                    &lt;L7p:VariableToSet stringValue="source"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// FINE"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; Loaded cassandraConnections.sorted from system and stored to cache"/&gt;
                    &lt;L7p:Level stringValue="FINE"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Retrieve new list and cache"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="RXJyb3Igd2hlbiBsaXN0aW5nIGNhc3NhbmRyYSBjb25uZWN0aW9ucw=="/&gt;
                    &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// WARNING"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; Error listing cassandra connections in ${policy.name}"/&gt;
                    &lt;L7p:Level stringValue="WARNING"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:FalseAssertion/&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Failure - set ${error.msg}"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Caching logic"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:Regex&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Add source attribute to /CassandraConnections element"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:AutoTarget booleanValue="false"/&gt;
            &lt;L7p:OtherTargetMessageVariable stringValue="cassandraConnections.sorted"/&gt;
            &lt;L7p:Regex stringValue="&amp;lt;CassandraConnections&gt;"/&gt;
            &lt;L7p:Replace booleanValue="true"/&gt;
            &lt;L7p:Replacement stringValue="&amp;lt;CassandraConnections source=&amp;quot;${source}&amp;quot;&gt;"/&gt;
            &lt;L7p:Target target="OTHER"/&gt;
        &lt;/L7p:Regex&gt;
        &lt;L7p:AuditDetailAssertion&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// FINE"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Detail stringValue="==&gt; Leaving Utility Fragment: ${policy.name}"/&gt;
            &lt;L7p:Level stringValue="FINE"/&gt;
        &lt;/L7p:AuditDetailAssertion&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
                        </l7:ResourceSet>
                    </l7:Resources>
                </l7:Policy>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Utility: List Trusted Certificates</l7:Name>
            <l7:Id>d12aa7875d7217ab6c41e7d7acf6992e</l7:Id>
            <l7:Type>POLICY</l7:Type>
            <l7:TimeStamp>2022-04-29T11:42:05.253-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Policy guid="339953eb-58b5-451e-a733-c4e01ed39dee" id="d12aa7875d7217ab6c41e7d7acf6992e" version="2">
                    <l7:PolicyDetail folderId="c4706d99077459bed7ca5ef6c9e62ecb" guid="339953eb-58b5-451e-a733-c4e01ed39dee" id="d12aa7875d7217ab6c41e7d7acf6992e" version="2">
                        <l7:Name>Utility: List Trusted Certificates</l7:Name>
                        <l7:PolicyType>Include</l7:PolicyType>
                        <l7:Properties>
                            <l7:Property key="revision">
                                <l7:LongValue>3</l7:LongValue>
                            </l7:Property>
                            <l7:Property key="soap">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                        </l7:Properties>
                    </l7:PolicyDetail>
                    <l7:Resources>
                        <l7:ResourceSet tag="policy">
                            <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Policy fragment for &amp;quot;Utility: List Trusted Certificates&amp;quot; encapsulated assertion"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Call Restman and generate a sorted list of trusted certificates"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** - Assumes an admin role user has been authenticated"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** - Caches results for ${cacheAge} seconds (default=300). To refresh the cache set ${refresh}=true when calling"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** - Returns a text/xml message variable in ${trustedCertificates.sorted}"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Inputs:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - refresh (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - cacheAge (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Outputs:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - trustedCertificates.sorted (message)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   - error.msg (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v1.0.0 - Jay MacDonald - 20201107 - Initial Version"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v1.0.1 - Jay MacDonald - 20211102 - Changed //Certificate in ${trustedCertificates.sorted} to Encoded"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:AuditDetailAssertion&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// FINE"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Detail stringValue="==&gt; Entering Utility Fragment: ${policy.name} (refresh=${refresh})"/&gt;
            &lt;L7p:Level stringValue="FINE"/&gt;
        &lt;/L7p:AuditDetailAssertion&gt;
        &lt;wsp:All wsp:Usage="Required"&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** ${trustedCertificates.sorted} has the following schema:"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** "/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** &amp;lt;TrustedCertificates source=&amp;quot;system|cache&amp;quot;&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   &amp;lt;TrustedCertificate id=&amp;quot;string&amp;quot;&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;Name&gt;string&amp;lt;/Name&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;Subject&gt;string&amp;lt;/Subject&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;Issuer&gt;string&amp;lt;/Issuer&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;SerialNumber&gt;string&amp;lt;/SerialNumber&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;Expires&gt;string&amp;lt;/Expires&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**     &amp;lt;Encoded&gt;string&amp;lt;/Encoded&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   &amp;lt;/TrustedCertificate&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   ..."/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** &amp;lt;/TrustedCertificates&gt;"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** "/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="** Where:"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   Name = the name of the trusted certificate"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   Subject = the subject of the trusted certificate"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   Issuer = the issuer of the trusted certificate"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   SerialNumber = the serial number of the trusted certificate"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   Expires = the NotAfter time of the trusted certificate"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="**   Encoded = the base64 encoded trusted certificate"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Description of ${trustedCertificates.sorted}"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:All&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// true or false"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${cacheAge}"/&gt;
                &lt;L7p:Operator operatorNull="null"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item dataType="included"&gt;
                        &lt;L7p:Type variableDataType="int"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;L7p:item binary="included"&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Operator operator="GT"/&gt;
                        &lt;L7p:RightValue stringValue="0"/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="MzAw"/&gt;
                &lt;L7p:DataType variableDataType="int"/&gt;
                &lt;L7p:VariableToSet stringValue="cacheAge"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Ensure ${cacheAge} is set, default=300"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// true or false"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${refresh}"/&gt;
                &lt;L7p:Operator operatorNull="null"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item dataType="included"&gt;
                        &lt;L7p:Type variableDataType="string"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;L7p:item regex="included"&gt;
                        &lt;L7p:Pattern stringValue="^(true|false)$"/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="ZmFsc2U="/&gt;
                &lt;L7p:VariableToSet stringValue="refresh"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Ensure ${refresh} is set, default=false"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="dHJ1c3RlZENlcnRpZmljYXRlcy5zb3J0ZWQ="/&gt;
            &lt;L7p:VariableToSet stringValue="cacheKey"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${refresh}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="string"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:Negated booleanValue="true"/&gt;
                            &lt;L7p:RightValue stringValue="true"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:CacheLookup&gt;
                    &lt;L7p:CacheEntryKey stringValue="${cacheKey}"/&gt;
                    &lt;L7p:CacheId stringValue="trustedCertificateList"/&gt;
                    &lt;L7p:ContentTypeOverride stringValue=""/&gt;
                    &lt;L7p:MaxEntryAgeSeconds stringValue="${cacheAge}"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="trustedCertificates.sorted"/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                &lt;/L7p:CacheLookup&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="Y2FjaGU="/&gt;
                    &lt;L7p:VariableToSet stringValue="source"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// FINE"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; Found trustedCertificates.sorted in the cache"/&gt;
                    &lt;L7p:Level stringValue="FINE"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Look in cache unless asked to refresh cache"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:Encapsulated&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// GET trustedCertificates"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="c8a5a0d5-1ae2-4144-b538-5c311efc1560"/&gt;
                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Call Restman"/&gt;
                    &lt;L7p:Parameters mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="element"/&gt;
                            &lt;L7p:value stringValue="TrustedCertificate"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="message"/&gt;
                            &lt;L7p:value stringValue=""/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="method"/&gt;
                            &lt;L7p:value stringValue="Get"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="resource"/&gt;
                            &lt;L7p:value stringValue="trustedCertificates"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Parameters&gt;
                &lt;/L7p:Encapsulated&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:VariablePrefix stringValue="trustedCertificates"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:List/l7:Item/l7:Resource/l7:TrustedCertificate"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:TrueAssertion/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Extract the list of trusted certificates, never fail"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz48VHJ1c3RlZENlcnRpZmljYXRlcz4="/&gt;
                    &lt;L7p:VariableToSet stringValue="trustedCertificates.sorted"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:ForEachLoop L7p:Usage="Required"
                    loopVariable="trustedCertificates.elements" variablePrefix="trustedCertificate"&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cast to message type for parsing"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:Base64Expression stringValue="JHt0cnVzdGVkQ2VydGlmaWNhdGUuY3VycmVudH0="/&gt;
                        &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                        &lt;L7p:DataType variableDataType="message"/&gt;
                        &lt;L7p:VariableToSet stringValue="trustedCertificate.xml"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Retrieve the trusted certificate ID"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="id"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="trustedCertificate.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:TrustedCertificate/@id"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// retrieve the trusted certificate name"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="name"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="trustedCertificate.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:TrustedCertificate/l7:Name"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Retrieve the trusted certificate serial number"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:VariablePrefix stringValue="pem"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="trustedCertificate.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/l7:TrustedCertificate/l7:CertificateData/l7:Encoded"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:EncodeDecode&gt;
                        &lt;L7p:CharacterEncoding stringValueNull="null"/&gt;
                        &lt;L7p:SourceVariableName stringValue="pem.result"/&gt;
                        &lt;L7p:TargetDataType variableDataType="cert"/&gt;
                        &lt;L7p:TargetVariableName stringValue="certificate"/&gt;
                        &lt;L7p:TransformType transformType="BASE64_DECODE"/&gt;
                    &lt;/L7p:EncodeDecode&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="JHt0cnVzdGVkQ2VydGlmaWNhdGVzLnNvcnRlZH08VHJ1c3RlZENlcnRpZmljYXRlIGlkPSIke2lkLnJlc3VsdH0iPjxOYW1lPjwhW0NEQVRBWyR7bmFtZS5yZXN1bHR9XV0+PC9OYW1lPjxTdWJqZWN0PjwhW0NEQVRBWyR7Y2VydGlmaWNhdGUuc3ViamVjdH1dXT48L1N1YmplY3Q+PElzc3Vlcj48IVtDREFUQVske2NlcnRpZmljYXRlLmlzc3Vlcn1dXT48L0lzc3Vlcj48U2VyaWFsTnVtYmVyPiR7Y2VydGlmaWNhdGUuc2VyaWFsfTwvU2VyaWFsTnVtYmVyPjxFeHBpcmVzPiR7Y2VydGlmaWNhdGUubm90QWZ0ZXJ9PC9FeHBpcmVzPjxFbmNvZGVkPiR7cGVtLnJlc3VsdH08L0VuY29kZWQ+PC9UcnVzdGVkQ2VydGlmaWNhdGU+"/&gt;
                        &lt;L7p:VariableToSet stringValue="trustedCertificates.sorted"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Build the list of trusted certificates"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/L7p:ForEachLoop&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHt0cnVzdGVkQ2VydGlmaWNhdGVzLnNvcnRlZH08L1RydXN0ZWRDZXJ0aWZpY2F0ZXM+"/&gt;
                    &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                    &lt;L7p:DataType variableDataType="message"/&gt;
                    &lt;L7p:VariableToSet stringValue="trustedCertificates.sorted"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:XslTransformation&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Sort the trusted certificates by name"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Direction intValue="-1"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="trustedCertificates.sorted"/&gt;
                    &lt;L7p:ResourceInfo staticResourceInfo="included"&gt;
                        &lt;L7p:Document stringValueReference="inline"&gt;&lt;![CDATA[&lt;xsl:stylesheet version="1.0" xmlns:l7="http://ns.l7tech.com/2010/04/gateway-management" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;

&lt;xsl:template match="/TrustedCertificates"&gt;
    &lt;xsl:copy&gt;
        &lt;xsl:for-each select="TrustedCertificate"&gt;
            &lt;xsl:sort select="./Name"/&gt;
            &lt;xsl:copy-of select="."/&gt;
        &lt;/xsl:for-each&gt;
    &lt;/xsl:copy&gt;
&lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;]]&gt;&lt;/L7p:Document&gt;
                    &lt;/L7p:ResourceInfo&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                    &lt;L7p:TransformName stringValue=""/&gt;
                    &lt;L7p:XsltVersion stringValue="1.0"/&gt;
                &lt;/L7p:XslTransformation&gt;
                &lt;L7p:CacheStorage&gt;
                    &lt;L7p:CacheEntryKey stringValue="${cacheKey}"/&gt;
                    &lt;L7p:CacheId stringValue="trustedCertificateList"/&gt;
                    &lt;L7p:MaxEntries stringValue="1"/&gt;
                    &lt;L7p:MaxEntryAgeSeconds stringValue="${cacheAge}"/&gt;
                    &lt;L7p:MaxEntrySizeBytes stringValue="200000"/&gt;
                    &lt;L7p:OtherTargetMessageVariable stringValue="trustedCertificates.sorted"/&gt;
                    &lt;L7p:StoreSoapFaults booleanValue="true"/&gt;
                    &lt;L7p:Target target="OTHER"/&gt;
                &lt;/L7p:CacheStorage&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="c3lzdGVt"/&gt;
                    &lt;L7p:VariableToSet stringValue="source"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// FINE"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; Loaded trustedCertificates.sorted from system and stored to cache"/&gt;
                    &lt;L7p:Level stringValue="FINE"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Retrieve new list and cache"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="RXJyb3Igd2hlbiBsaXN0aW5nIHRydXN0ZWQgY2VydGlmaWNhdGVz"/&gt;
                    &lt;L7p:VariableToSet stringValue="error.msg"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// WARNING"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; Error listing trusted certificates in ${policy.name}"/&gt;
                    &lt;L7p:Level stringValue="WARNING"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:FalseAssertion/&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Failure - set ${error.msg}"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Caching logic"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:Regex&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Add source attribute to /TrustedCertificates element"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:AutoTarget booleanValue="false"/&gt;
            &lt;L7p:OtherTargetMessageVariable stringValue="trustedCertificates.sorted"/&gt;
            &lt;L7p:Regex stringValue="&amp;lt;TrustedCertificates&gt;"/&gt;
            &lt;L7p:Replace booleanValue="true"/&gt;
            &lt;L7p:Replacement stringValue="&amp;lt;TrustedCertificates source=&amp;quot;${source}&amp;quot;&gt;"/&gt;
            &lt;L7p:Target target="OTHER"/&gt;
        &lt;/L7p:Regex&gt;
        &lt;L7p:AuditDetailAssertion&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// FINE"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Detail stringValue="==&gt; Leaving Utility Fragment: ${policy.name}"/&gt;
            &lt;L7p:Level stringValue="FINE"/&gt;
        &lt;/L7p:AuditDetailAssertion&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
                        </l7:ResourceSet>
                    </l7:Resources>
                </l7:Policy>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Utility: Set Web Page Wrappers</l7:Name>
            <l7:Id>eab176f668caa14ac7389886243507b7</l7:Id>
            <l7:Type>POLICY</l7:Type>
            <l7:TimeStamp>2022-04-29T11:42:05.255-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Policy guid="65c71f16-b384-4aab-a883-04179b673ed0" id="eab176f668caa14ac7389886243507b7" version="19">
                    <l7:PolicyDetail folderId="c4706d99077459bed7ca5ef6c9e62ecb" guid="65c71f16-b384-4aab-a883-04179b673ed0" id="eab176f668caa14ac7389886243507b7" version="19">
                        <l7:Name>Utility: Set Web Page Wrappers</l7:Name>
                        <l7:PolicyType>Include</l7:PolicyType>
                        <l7:Properties>
                            <l7:Property key="revision">
                                <l7:LongValue>20</l7:LongValue>
                            </l7:Property>
                            <l7:Property key="soap">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                        </l7:Properties>
                    </l7:PolicyDetail>
                    <l7:Resources>
                        <l7:ResourceSet tag="policy">
                            <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**************************************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="* Set ${html.top} and ${html.bottom} for the web page responses"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="* "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="* Inputs:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="*   utility.name (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="*   utility.version (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="*   loggedIn (boolean)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="* "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="* Outputs:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="*   html.top (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="*   html.bottom (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="* "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v1.0.0 - Jay MacDonald - 20220222 - Initial Version"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v1.0.1 - Jay MacDonald - 20220228 - Added License Report"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**************************************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue=""/&gt;
            &lt;L7p:VariableToSet stringValue="html.top"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="ICAgIDxoci8+DQogICAgPHA+DQogICAgICA8YSBocmVmPSIvYXBpZ3cvdXRpbGl0eVRlc3RlciI+VXRpbGl0eSBBc3NlcnRpb25zIFRlc3RlcjwvYT4gfA0KICAgICAgPGEgaHJlZj0iL2FwaWd3L2RlcGVuZGVuY3lBbmFseXplciI+RGVwZW5kZW5jeSBBbmFseXplcjwvYT4gfA0KICAgICAgPGEgaHJlZj0iL2FwaWd3L2NlcnRpZmljYXRlUmVwb3J0Ij5DZXJ0aWZpY2F0ZSBSZXBvcnQ8L2E+IHwNCiAgICAgIDxhIGhyZWY9Ii9hcGlndy9saWNlbnNlUmVwb3J0Ij5MaWNlbnNlIFJlcG9ydDwvYT4gfA0KICAgICAgPGEgaHJlZj0iL2FwaWd3L2N3cE1hbmFnZXIiPkNsdXN0ZXIgV2lkZSBQcm9wZXJ0eSBNYW5hZ2VyPC9hPg=="/&gt;
            &lt;L7p:VariableToSet stringValue="html.bottom"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${loggedIn}"/&gt;
                &lt;L7p:Operator operatorNull="null"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item dataType="included"&gt;
                        &lt;L7p:Type variableDataType="boolean"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;L7p:item binary="included"&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:RightValue stringValue="false"/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="JHtodG1sLmJvdHRvbX0gfCA8YSBocmVmPSIke3JlcXVlc3QudXJsLnBhdGh9P2FjdGlvbj1sb2dvdXQiPkxvZ291dCAke3JlcXVlc3QuYXV0aGVudGljYXRlZFVzZXJ9PC9hPg=="/&gt;
                &lt;L7p:VariableToSet stringValue="html.bottom"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Append logout if ${loggedIn} is true"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="JHtodG1sLmJvdHRvbX08YnIvPg0KICAgICAgR2F0ZXdheSBNYW5hZ2VtZW50IFV0aWxpdGllczogJHt1dGlsaXR5Lm5hbWV9IHYke3V0aWxpdHkudmVyc2lvbn0NCiAgICA8L3A+DQogICAgPC9kaXY+DQogIDwvYm9keT4NCjwvaHRtbD4="/&gt;
            &lt;L7p:VariableToSet stringValue="html.bottom"/&gt;
        &lt;/L7p:SetVariable&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
                        </l7:ResourceSet>
                    </l7:Resources>
                </l7:Policy>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Gateway Management Utilities CSS</l7:Name>
            <l7:Id>1b111294c2a94ddb44fa3aa78a70294a</l7:Id>
            <l7:Type>SERVICE</l7:Type>
            <l7:TimeStamp>2022-04-29T11:42:05.280-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Service id="1b111294c2a94ddb44fa3aa78a70294a" version="2">
                    <l7:ServiceDetail folderId="7215d076e3f7201974e2be3edf13f52e" id="1b111294c2a94ddb44fa3aa78a70294a" version="2">
                        <l7:Name>Gateway Management Utilities CSS</l7:Name>
                        <l7:Enabled>true</l7:Enabled>
                        <l7:ServiceMappings>
                            <l7:HttpMapping>
                                <l7:UrlPattern>/apigw/stylesheet.css</l7:UrlPattern>
                                <l7:Verbs>
                                    <l7:Verb>GET</l7:Verb>
                                    <l7:Verb>POST</l7:Verb>
                                    <l7:Verb>PUT</l7:Verb>
                                    <l7:Verb>DELETE</l7:Verb>
                                </l7:Verbs>
                            </l7:HttpMapping>
                        </l7:ServiceMappings>
                        <l7:Properties>
                            <l7:Property key="internal">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                            <l7:Property key="policyRevision">
                                <l7:LongValue>15</l7:LongValue>
                            </l7:Property>
                            <l7:Property key="soap">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                            <l7:Property key="tracingEnabled">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                            <l7:Property key="wssProcessingEnabled">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                        </l7:Properties>
                    </l7:ServiceDetail>
                    <l7:Resources>
                        <l7:ResourceSet tag="policy">
                            <l7:Resource type="policy" version="14">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue=""/&gt;
            &lt;L7p:Enabled booleanValue="false"/&gt;
            &lt;L7p:VariableToSet stringValue="stylesheet.css"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue=""/&gt;
            &lt;L7p:VariableToSet stringValue="stylesheet.css"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:HardcodedResponse&gt;
            &lt;L7p:Base64ResponseBody stringValue="JHtzdHlsZXNoZWV0LmNzc30="/&gt;
            &lt;L7p:ResponseContentType stringValue="text/css; charset=UTF-8"/&gt;
        &lt;/L7p:HardcodedResponse&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
                        </l7:ResourceSet>
                    </l7:Resources>
                </l7:Service>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Utility: Form and Session Authentication</l7:Name>
            <l7:Id>c4706d99077459bed7ca5ef6c9e4e966</l7:Id>
            <l7:Type>ENCAPSULATED_ASSERTION</l7:Type>
            <l7:TimeStamp>2022-04-29T11:42:05.280-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:EncapsulatedAssertion id="c4706d99077459bed7ca5ef6c9e4e966" version="1">
                    <l7:Name>Utility: Form and Session Authentication</l7:Name>
                    <l7:Guid>4bd10104-a43c-4ecf-ae4d-b95e312cad4b</l7:Guid>
                    <l7:PolicyReference id="c4706d99077459bed7ca5ef6c9e4e922" resourceUri="http://ns.l7tech.com/2010/04/gateway-management/policies"/>
                    <l7:EncapsulatedArguments>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>1</l7:Ordinal>
                            <l7:ArgumentName>sessionTTL</l7:ArgumentName>
                            <l7:ArgumentType>string</l7:ArgumentType>
                            <l7:GuiLabel>Session TTL (default 600): </l7:GuiLabel>
                            <l7:GuiPrompt>true</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>2</l7:Ordinal>
                            <l7:ArgumentName>verifyAdmin</l7:ArgumentName>
                            <l7:ArgumentType>boolean</l7:ArgumentType>
                            <l7:GuiLabel>Verify User is Administrator: </l7:GuiLabel>
                            <l7:GuiPrompt>true</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                    </l7:EncapsulatedArguments>
                    <l7:EncapsulatedResults>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>form.message</l7:ResultName>
                            <l7:ResultType>string</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>loggedIn</l7:ResultName>
                            <l7:ResultType>boolean</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>logout</l7:ResultName>
                            <l7:ResultType>boolean</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>redirectUrl</l7:ResultName>
                            <l7:ResultType>string</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>username</l7:ResultName>
                            <l7:ResultType>string</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                    </l7:EncapsulatedResults>
                    <l7:Properties>
                        <l7:Property key="allowTracing">
                            <l7:StringValue>false</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="description">
                            <l7:StringValue>Authenticate form submission or session cookie</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="paletteFolder">
                            <l7:StringValue>internalAssertions</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="paletteIconResourceName">
                            <l7:StringValue>user16.png</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="passMetricsToParent">
                            <l7:StringValue>false</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="policyGuid">
                            <l7:StringValue>fefc1213-858e-4be0-82cd-67e980463597</l7:StringValue>
                        </l7:Property>
                    </l7:Properties>
                </l7:EncapsulatedAssertion>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Utility: Set Web Page Wrappers</l7:Name>
            <l7:Id>eab176f668caa14ac7389886243507ea</l7:Id>
            <l7:Type>ENCAPSULATED_ASSERTION</l7:Type>
            <l7:TimeStamp>2022-04-29T11:42:05.280-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:EncapsulatedAssertion id="eab176f668caa14ac7389886243507ea" version="3">
                    <l7:Name>Utility: Set Web Page Wrappers</l7:Name>
                    <l7:Guid>43cbc673-f658-4e98-882d-111e752794b1</l7:Guid>
                    <l7:PolicyReference id="eab176f668caa14ac7389886243507b7" resourceUri="http://ns.l7tech.com/2010/04/gateway-management/policies"/>
                    <l7:EncapsulatedArguments>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>1</l7:Ordinal>
                            <l7:ArgumentName>utility.name</l7:ArgumentName>
                            <l7:ArgumentType>string</l7:ArgumentType>
                            <l7:GuiLabel>Utility Name (required): </l7:GuiLabel>
                            <l7:GuiPrompt>true</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>2</l7:Ordinal>
                            <l7:ArgumentName>utility.version</l7:ArgumentName>
                            <l7:ArgumentType>string</l7:ArgumentType>
                            <l7:GuiLabel>Version (required): </l7:GuiLabel>
                            <l7:GuiPrompt>true</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>3</l7:Ordinal>
                            <l7:ArgumentName>loggedIn</l7:ArgumentName>
                            <l7:ArgumentType>boolean</l7:ArgumentType>
                            <l7:GuiPrompt>false</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                    </l7:EncapsulatedArguments>
                    <l7:EncapsulatedResults>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>html.bottom</l7:ResultName>
                            <l7:ResultType>string</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>html.top</l7:ResultName>
                            <l7:ResultType>string</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                    </l7:EncapsulatedResults>
                    <l7:Properties>
                        <l7:Property key="allowTracing">
                            <l7:StringValue>false</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="description">
                            <l7:StringValue>Set the top and bottom of the web page templates</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="paletteFolder">
                            <l7:StringValue>internalAssertions</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="paletteIconResourceName">
                            <l7:StringValue>CreateWSDL16x16.gif</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="passMetricsToParent">
                            <l7:StringValue>false</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="policyGuid">
                            <l7:StringValue>65c71f16-b384-4aab-a883-04179b673ed0</l7:StringValue>
                        </l7:Property>
                    </l7:Properties>
                </l7:EncapsulatedAssertion>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>API Gateway License Report</l7:Name>
            <l7:Id>6f93d02a97830d62c2715d6d3a0168c2</l7:Id>
            <l7:Type>SERVICE</l7:Type>
            <l7:TimeStamp>2022-04-29T11:42:05.311-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Service id="6f93d02a97830d62c2715d6d3a0168c2" version="4">
                    <l7:ServiceDetail folderId="7215d076e3f7201974e2be3edf13f52e" id="6f93d02a97830d62c2715d6d3a0168c2" version="4">
                        <l7:Name>API Gateway License Report</l7:Name>
                        <l7:Enabled>true</l7:Enabled>
                        <l7:ServiceMappings>
                            <l7:HttpMapping>
                                <l7:UrlPattern>/apigw/licenseReport</l7:UrlPattern>
                                <l7:Verbs>
                                    <l7:Verb>GET</l7:Verb>
                                    <l7:Verb>POST</l7:Verb>
                                </l7:Verbs>
                            </l7:HttpMapping>
                        </l7:ServiceMappings>
                        <l7:Properties>
                            <l7:Property key="internal">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                            <l7:Property key="policyRevision">
                                <l7:LongValue>46</l7:LongValue>
                            </l7:Property>
                            <l7:Property key="soap">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                            <l7:Property key="tracingEnabled">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                            <l7:Property key="wssProcessingEnabled">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                        </l7:Properties>
                    </l7:ServiceDetail>
                    <l7:Resources>
                        <l7:ResourceSet tag="policy">
                            <l7:Resource type="policy" version="45">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**************************************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Service to query the ssg database and generate a report on licenses in the Gateway"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Default to HTML form based response. Change to application/json or text/xml using format parameter"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** If ${request.http.parameter.format} = JSON or XML then use Basic Auth for authentication"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** IMPORTANT: Ensure the database connection is valid. Search for ONBOARD comment in policy"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Response will set the following HTTP headers:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   X-AlertLevel (0=OK | 1=INFO | 2=WARNING | 3=SEVERE)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   X-AlertStatus (OK | INFO | WARNING | SEVERE)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   X-AlertMessage (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v1.0.0 - Jay MacDonald - 20220428 - Initial Version"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v1.0.1 - Jay MacDonald - 20220429 - Fixed bug where comparing -0 days still comes up as not expired"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**************************************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:AuditAssertion/&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="JHtyZXF1ZXN0Lmh0dHAucGFyYW1ldGVyLmZvcm1hdH0="/&gt;
            &lt;L7p:VariableToSet stringValue="format"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${format}"/&gt;
                &lt;L7p:Expression2 stringValue=""/&gt;
                &lt;L7p:Negate booleanValue="true"/&gt;
                &lt;L7p:Operator operator="EMPTY"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Negated booleanValue="true"/&gt;
                        &lt;L7p:Operator operator="EMPTY"/&gt;
                        &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="SFRNTA=="/&gt;
                &lt;L7p:VariableToSet stringValue="format"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Confirm ${format} is set, default to HTML"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:Regex&gt;
                &lt;L7p:AutoTarget booleanValue="false"/&gt;
                &lt;L7p:CaseInsensitive booleanValue="true"/&gt;
                &lt;L7p:OtherTargetMessageVariable stringValue="format"/&gt;
                &lt;L7p:Regex stringValue="^(JSON|XML|HTML)$"/&gt;
                &lt;L7p:Replacement stringValue=""/&gt;
                &lt;L7p:Target target="OTHER"/&gt;
            &lt;/L7p:Regex&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:CustomizeErrorResponse&gt;
                    &lt;L7p:Content stringValue="Bad request: unknown format (${format})"/&gt;
                    &lt;L7p:ExtraHeaders nameValuePairArray="included"/&gt;
                    &lt;L7p:HttpStatus stringValue="400"/&gt;
                &lt;/L7p:CustomizeErrorResponse&gt;
                &lt;L7p:FalseAssertion/&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Fail 400"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Validate ${format} else fail 400"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${format}"/&gt;
                        &lt;L7p:Expression2 stringValue="JSON"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="JSON"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${format}"/&gt;
                        &lt;L7p:Expression2 stringValue="XML"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="XML"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Check for ${format} == JSON|XML"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:SslAssertion/&gt;
                        &lt;L7p:HttpBasic/&gt;
                        &lt;L7p:Authentication&gt;
                            &lt;L7p:IdentityProviderOid goidValue="0000000000000000fffffffffffffffe"/&gt;
                        &lt;/L7p:Authentication&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="dHJ1ZQ=="/&gt;
                            &lt;L7p:VariableToSet stringValue="loggedIn"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Authenticate using Basic Auth"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="ZmFsc2U="/&gt;
                        &lt;L7p:VariableToSet stringValue="loggedIn"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Authenticate using Basic Auth and set ${loggedIn}"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// ${format} == JSON|XML"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${format}"/&gt;
                    &lt;L7p:Expression2 stringValue="HTML"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:RightValue stringValue="HTML"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:Encapsulated&gt;
                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="4bd10104-a43c-4ecf-ae4d-b95e312cad4b"/&gt;
                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Form and Session Authentication"/&gt;
                    &lt;L7p:Parameters mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="sessionTTL"/&gt;
                            &lt;L7p:value stringValue="1800"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="verifyAdmin"/&gt;
                            &lt;L7p:value stringValue="true"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Parameters&gt;
                &lt;/L7p:Encapsulated&gt;
                &lt;L7p:Encapsulated&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// v1.0.1"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="43cbc673-f658-4e98-882d-111e752794b1"/&gt;
                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Set Web Page Wrappers"/&gt;
                    &lt;L7p:Parameters mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="utility.name"/&gt;
                            &lt;L7p:value stringValue="API Gateway License Report"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="utility.version"/&gt;
                            &lt;L7p:value stringValue="1.0.1"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Parameters&gt;
                &lt;/L7p:Encapsulated&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// ${format} == HTML"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Authentication"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;wsp:All wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="VW5rbm93biBlcnJvciBmb3VuZA=="/&gt;
                    &lt;L7p:VariableToSet stringValue="error.message"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="NTAw"/&gt;
                    &lt;L7p:VariableToSet stringValue="error.status"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${format}"/&gt;
                            &lt;L7p:Expression2 stringValue="JSON"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="JSON"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:CustomizeErrorResponse&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// application/json"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:Content stringValueReference="inline"&gt;&lt;![CDATA[{
  "message": "${error.message}",
  "status": "${error.status}"
}]]&gt;&lt;/L7p:Content&gt;
                            &lt;L7p:ContentType stringValue="application/json; charset=UTF-8"/&gt;
                            &lt;L7p:ExtraHeaders nameValuePairArray="included"/&gt;
                            &lt;L7p:HttpStatus stringValue="${error.status}"/&gt;
                        &lt;/L7p:CustomizeErrorResponse&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${format} == JSON"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${format}"/&gt;
                            &lt;L7p:Expression2 stringValue="XML"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="XML"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:CustomizeErrorResponse&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// text/xml"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:Content stringValueReference="inline"&gt;&lt;![CDATA[&lt;Error&gt;
  &lt;Message&gt;${error.message}&lt;/Message&gt;
  &lt;Status&gt;${error.status}&lt;/Status&gt;
&lt;/Error&gt;]]&gt;&lt;/L7p:Content&gt;
                            &lt;L7p:ContentType stringValue="text/xml; charset=UTF-8"/&gt;
                            &lt;L7p:ExtraHeaders nameValuePairArray="included"/&gt;
                            &lt;L7p:HttpStatus stringValue="${error.status}"/&gt;
                        &lt;/L7p:CustomizeErrorResponse&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${format} == XML"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:CustomizeErrorResponse&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// text/html"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:Content stringValueReference="inline"&gt;&lt;![CDATA[${html.top}

  &lt;h1&gt;Error&lt;/h1&gt;

  &lt;p&gt;${error.message}&lt;/p&gt;

${html.bottom}]]&gt;&lt;/L7p:Content&gt;
                        &lt;L7p:ContentType stringValue="text/html; charset=UTF-8"/&gt;
                        &lt;L7p:ExtraHeaders nameValuePairArray="included"/&gt;
                        &lt;L7p:HttpStatus stringValue="${error.status}"/&gt;
                    &lt;/L7p:CustomizeErrorResponse&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Set error template per ${format}"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Configure error response"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// 2 hours"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:Base64Expression stringValue="NzIwMA=="/&gt;
                &lt;L7p:VariableToSet stringValue="cacheAge"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// days"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:Base64Expression stringValue="Nw=="/&gt;
                &lt;L7p:VariableToSet stringValue="alertAge.WARNING"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// days"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:Base64Expression stringValue="MzA="/&gt;
                &lt;L7p:VariableToSet stringValue="alertAge.INFO"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Configuration"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:All&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="PGR1bW15IC8+"/&gt;
            &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
            &lt;L7p:DataType variableDataType="message"/&gt;
            &lt;L7p:VariableToSet stringValue="dummy"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="MA=="/&gt;
            &lt;L7p:VariableToSet stringValue="alert.level"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="T0s="/&gt;
            &lt;L7p:VariableToSet stringValue="alert.status"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="QWxsIGxpY2Vuc2VzIGFyZSBmaW5l"/&gt;
            &lt;L7p:VariableToSet stringValue="alert.message"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${loggedIn}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="boolean"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:RightValue stringValue="true"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue=""/&gt;
                    &lt;L7p:DataType variableDataType="dateTime"/&gt;
                    &lt;L7p:DateFormat stringValue="&amp;lt;Timestamp&gt;"/&gt;
                    &lt;L7p:DateOffsetExpression stringValue=""/&gt;
                    &lt;L7p:VariableToSet stringValue="now"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtub3cuc2Vjb25kc30="/&gt;
                    &lt;L7p:VariableToSet stringValue="calc.now"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;L7p:JdbcQuery&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="LEFT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="ONBOARD"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Ensure the database connection is valid!"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:ConnectionName stringValue="ssg"/&gt;
                        &lt;L7p:ConvertVariablesToStrings booleanValue="false"/&gt;
                        &lt;L7p:NamingMap mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="contents"/&gt;
                                &lt;L7p:value stringValue="contents"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:NamingMap&gt;
                        &lt;L7p:SqlQuery stringValue="SELECT contents FROM license_document"/&gt;
                        &lt;L7p:VariablePrefix stringValue="licenses"/&gt;
                    &lt;/L7p:JdbcQuery&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="RXJyb3IgcXVlcnlpbmcgZGF0YWJhc2UuIFJlZmVyIHRvIE9OQk9BUkQgY29tbWVudHMgaW4gdGhlIHBvbGljeS4="/&gt;
                            &lt;L7p:VariableToSet stringValue="error.message"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="NTAw"/&gt;
                            &lt;L7p:VariableToSet stringValue="error.status"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:FalseAssertion/&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Fail 500"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Query database else fail 500"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue=""/&gt;
                    &lt;L7p:VariableToSet stringValue="licensesTable"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:ForEachLoop L7p:Usage="Required"
                    loopVariable="licenses.contents" variablePrefix="license"&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="JHtsaWNlbnNlLmN1cnJlbnR9"/&gt;
                        &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                        &lt;L7p:DataType variableDataType="message"/&gt;
                        &lt;L7p:VariableToSet stringValue="license.xml"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                        &lt;L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:VariablePrefix stringValue="description"/&gt;
                            &lt;L7p:XmlMsgSrc stringValue="license.xml"/&gt;
                            &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                &lt;L7p:Expression stringValue="/ns:license/ns:description"/&gt;
                                &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="ns"/&gt;
                                    &lt;L7p:value stringValue="http://l7tech.com/license"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Namespaces&gt;
                                &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                            &lt;/L7p:XpathExpression&gt;
                        &lt;/L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="Tm8gZGVzY3JpcHRpb24gYXZhaWxhYmxl"/&gt;
                            &lt;L7p:VariableToSet stringValue="description.result"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Ensure ${description.result} is set"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:VariablePrefix stringValue="valid"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="license.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/ns:license/ns:valid"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="ns"/&gt;
                                    &lt;L7p:value stringValue="http://l7tech.com/license"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:VariablePrefix stringValue="expires"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="license.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/ns:license/ns:expires"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="ns"/&gt;
                                    &lt;L7p:value stringValue="http://l7tech.com/license"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                        &lt;L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:VariablePrefix stringValue="product.name"/&gt;
                            &lt;L7p:XmlMsgSrc stringValue="license.xml"/&gt;
                            &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                &lt;L7p:Expression stringValue="/ns:license/ns:product/@name"/&gt;
                                &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="ns"/&gt;
                                    &lt;L7p:value stringValue="http://l7tech.com/license"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Namespaces&gt;
                                &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                            &lt;/L7p:XpathExpression&gt;
                        &lt;/L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="VW5rbm93biBwcm9kdWN0"/&gt;
                            &lt;L7p:VariableToSet stringValue="product.name.result"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Ensure ${product.name.result} is set"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:VariablePrefix stringValue="version.major"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="license.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/ns:license/ns:product/ns:version/@major"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="ns"/&gt;
                                    &lt;L7p:value stringValue="http://l7tech.com/license"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:VariablePrefix stringValue="version.minor"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="license.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/ns:license/ns:product/ns:version/@minor"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="ns"/&gt;
                                    &lt;L7p:value stringValue="http://l7tech.com/license"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${version.minor.result}"/&gt;
                            &lt;L7p:Operator operatorNull="null"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="string"/&gt;
                                &lt;/L7p:item&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:Operator operator="EMPTY"/&gt;
                                    &lt;L7p:RightValue stringValue=""/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="eA=="/&gt;
                            &lt;L7p:VariableToSet stringValue="version.minor.result"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Ensure ${version.minor.result} has a value"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                        &lt;L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:VariablePrefix stringValue="featureset"/&gt;
                            &lt;L7p:XmlMsgSrc stringValue="license.xml"/&gt;
                            &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                &lt;L7p:Expression stringValue="/ns:license/ns:product/ns:featureset/@name"/&gt;
                                &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="ns"/&gt;
                                    &lt;L7p:value stringValue="http://l7tech.com/license"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Namespaces&gt;
                                &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                            &lt;/L7p:XpathExpression&gt;
                        &lt;/L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="RmVhdHVyZXNldCBub3QgZGVjbGFyZWQ="/&gt;
                            &lt;L7p:VariableToSet stringValue="featureset.result"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Ensure ${featureset.result} is set"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                        &lt;L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:VariablePrefix stringValue="licensee.email"/&gt;
                            &lt;L7p:XmlMsgSrc stringValue="license.xml"/&gt;
                            &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                &lt;L7p:Expression stringValue="/ns:license/ns:licensee/@contactEmail"/&gt;
                                &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="ns"/&gt;
                                    &lt;L7p:value stringValue="http://l7tech.com/license"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Namespaces&gt;
                                &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                            &lt;/L7p:XpathExpression&gt;
                        &lt;/L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="TGljZW5zZWUncyBlbWFpbCBub3QgZGVjbGFyZWQ="/&gt;
                            &lt;L7p:VariableToSet stringValue="licensee.email.result"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Ensure ${licensee.email.result} is set"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                        &lt;L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:VariablePrefix stringValue="licensee.name"/&gt;
                            &lt;L7p:XmlMsgSrc stringValue="license.xml"/&gt;
                            &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                &lt;L7p:Expression stringValue="/ns:license/ns:licensee/@name"/&gt;
                                &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="ns"/&gt;
                                    &lt;L7p:value stringValue="http://l7tech.com/license"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Namespaces&gt;
                                &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                            &lt;/L7p:XpathExpression&gt;
                        &lt;/L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="TGljZW5zZWUncyBuYW1lIG5vdCBkZWNsYXJlZA=="/&gt;
                            &lt;L7p:VariableToSet stringValue="licensee.name.result"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Ensure ${licensee.name.result} is set"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="JHtleHBpcmVzLnJlc3VsdH0="/&gt;
                            &lt;L7p:DataType variableDataType="dateTime"/&gt;
                            &lt;L7p:DateOffsetExpression stringValue=""/&gt;
                            &lt;L7p:VariableToSet stringValue="expires"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="JHtleHBpcmVzLnNlY29uZHN9"/&gt;
                            &lt;L7p:VariableToSet stringValue="calc.expires"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Convert difference from seconds to float time in seconds"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:VariablePrefix stringValue="remaining"/&gt;
                            &lt;L7p:XmlMsgSrc stringValue="dummy"/&gt;
                            &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                &lt;L7p:Expression stringValue="$calc.expires - $calc.now"/&gt;
                                &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Namespaces&gt;
                                &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                            &lt;/L7p:XpathExpression&gt;
                        &lt;/L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cast to string"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:Base64Expression stringValue="JHtyZW1haW5pbmcucmVzdWx0fQ=="/&gt;
                            &lt;L7p:VariableToSet stringValue="remaining.time"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Convert difference from seconds to float days"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:VariablePrefix stringValue="remaining"/&gt;
                            &lt;L7p:XmlMsgSrc stringValue="dummy"/&gt;
                            &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                &lt;L7p:Expression stringValue="($calc.expires - $calc.now) div 60 div 60 div 24"/&gt;
                                &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Namespaces&gt;
                                &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                            &lt;/L7p:XpathExpression&gt;
                        &lt;/L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:CommentAssertion&gt;
                            &lt;L7p:Comment stringValue="** Isolate days"/&gt;
                        &lt;/L7p:CommentAssertion&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cast to string"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:Base64Expression stringValue="JHtyZW1haW5pbmcucmVzdWx0fQ=="/&gt;
                            &lt;L7p:VariableToSet stringValue="remaining.days"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:Regex&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Strip trailing decimals"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:AutoTarget booleanValue="false"/&gt;
                            &lt;L7p:OtherTargetMessageVariable stringValue="remaining.days"/&gt;
                            &lt;L7p:Regex stringValue="\..*"/&gt;
                            &lt;L7p:Replace booleanValue="true"/&gt;
                            &lt;L7p:Replacement stringValue=""/&gt;
                            &lt;L7p:Target target="OTHER"/&gt;
                        &lt;/L7p:Regex&gt;
                        &lt;L7p:Regex&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Strip away integer portion to leave decimal days remainder"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:AutoTarget booleanValue="false"/&gt;
                            &lt;L7p:OtherTargetMessageVariable stringValue="remaining.result"/&gt;
                            &lt;L7p:Regex stringValue="^-?[0-9]*\."/&gt;
                            &lt;L7p:Replace booleanValue="true"/&gt;
                            &lt;L7p:Replacement stringValue="0."/&gt;
                            &lt;L7p:Target target="OTHER"/&gt;
                        &lt;/L7p:Regex&gt;
                        &lt;L7p:CommentAssertion&gt;
                            &lt;L7p:Comment stringValue="** Isolate hours"/&gt;
                        &lt;/L7p:CommentAssertion&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cast to string"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:Base64Expression stringValue="JHtyZW1haW5pbmcucmVzdWx0fQ=="/&gt;
                            &lt;L7p:VariableToSet stringValue="remaining.hours"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:VariablePrefix stringValue="remaining"/&gt;
                            &lt;L7p:XmlMsgSrc stringValue="dummy"/&gt;
                            &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                &lt;L7p:Expression stringValue="$remaining.hours * 24"/&gt;
                                &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Namespaces&gt;
                                &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                            &lt;/L7p:XpathExpression&gt;
                        &lt;/L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cast to string"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:Base64Expression stringValue="JHtyZW1haW5pbmcucmVzdWx0fQ=="/&gt;
                            &lt;L7p:VariableToSet stringValue="remaining.hours"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:Regex&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Strip trailing decimals"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:AutoTarget booleanValue="false"/&gt;
                            &lt;L7p:OtherTargetMessageVariable stringValue="remaining.hours"/&gt;
                            &lt;L7p:Regex stringValue="\..*"/&gt;
                            &lt;L7p:Replace booleanValue="true"/&gt;
                            &lt;L7p:Replacement stringValue=""/&gt;
                            &lt;L7p:Target target="OTHER"/&gt;
                        &lt;/L7p:Regex&gt;
                        &lt;L7p:Regex&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Strip away integer portion to leave decimal hours remainder"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:AutoTarget booleanValue="false"/&gt;
                            &lt;L7p:OtherTargetMessageVariable stringValue="remaining.result"/&gt;
                            &lt;L7p:Regex stringValue="^[0-9]*\."/&gt;
                            &lt;L7p:Replace booleanValue="true"/&gt;
                            &lt;L7p:Replacement stringValue="0."/&gt;
                            &lt;L7p:Target target="OTHER"/&gt;
                        &lt;/L7p:Regex&gt;
                        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                            &lt;L7p:ComparisonAssertion&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:Expression1 stringValue="${remaining.hours}"/&gt;
                                &lt;L7p:Operator operatorNull="null"/&gt;
                                &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="int"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="GE"/&gt;
                                    &lt;L7p:RightValue stringValue="10"/&gt;
                                    &lt;/L7p:item&gt;
                                &lt;/L7p:Predicates&gt;
                            &lt;/L7p:ComparisonAssertion&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cast to string"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:Base64Expression stringValue="MCR7cmVtYWluaW5nLmhvdXJzfQ=="/&gt;
                                &lt;L7p:VariableToSet stringValue="remaining.hours"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Prefix ${remaining.hours} with 0 if &amp;lt; 10"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:OneOrMore&gt;
                        &lt;L7p:CommentAssertion&gt;
                            &lt;L7p:Comment stringValue="** Isolate minutes"/&gt;
                        &lt;/L7p:CommentAssertion&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cast to string"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:Base64Expression stringValue="JHtyZW1haW5pbmcucmVzdWx0fQ=="/&gt;
                            &lt;L7p:VariableToSet stringValue="remaining.minutes"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:VariablePrefix stringValue="remaining"/&gt;
                            &lt;L7p:XmlMsgSrc stringValue="dummy"/&gt;
                            &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                &lt;L7p:Expression stringValue="$remaining.minutes * 60"/&gt;
                                &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Namespaces&gt;
                                &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                            &lt;/L7p:XpathExpression&gt;
                        &lt;/L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cast to string"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:Base64Expression stringValue="JHtyZW1haW5pbmcucmVzdWx0fQ=="/&gt;
                            &lt;L7p:VariableToSet stringValue="remaining.minutes"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:Regex&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Strip trailing decimals"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:AutoTarget booleanValue="false"/&gt;
                            &lt;L7p:OtherTargetMessageVariable stringValue="remaining.minutes"/&gt;
                            &lt;L7p:Regex stringValue="\..*"/&gt;
                            &lt;L7p:Replace booleanValue="true"/&gt;
                            &lt;L7p:Replacement stringValue=""/&gt;
                            &lt;L7p:Target target="OTHER"/&gt;
                        &lt;/L7p:Regex&gt;
                        &lt;L7p:Regex&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Strip away integer portion to leave decimal minutes remainder"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:AutoTarget booleanValue="false"/&gt;
                            &lt;L7p:OtherTargetMessageVariable stringValue="remaining.result"/&gt;
                            &lt;L7p:Regex stringValue="^[0-9]*\."/&gt;
                            &lt;L7p:Replace booleanValue="true"/&gt;
                            &lt;L7p:Replacement stringValue="0."/&gt;
                            &lt;L7p:Target target="OTHER"/&gt;
                        &lt;/L7p:Regex&gt;
                        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                            &lt;L7p:ComparisonAssertion&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:Expression1 stringValue="${remaining.minutes}"/&gt;
                                &lt;L7p:Operator operatorNull="null"/&gt;
                                &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="int"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="GE"/&gt;
                                    &lt;L7p:RightValue stringValue="10"/&gt;
                                    &lt;/L7p:item&gt;
                                &lt;/L7p:Predicates&gt;
                            &lt;/L7p:ComparisonAssertion&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cast to string"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:Base64Expression stringValue="MCR7cmVtYWluaW5nLm1pbnV0ZXN9"/&gt;
                                &lt;L7p:VariableToSet stringValue="remaining.minutes"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Prefix ${remaining.minutes} with 0 if &amp;lt; 10"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:OneOrMore&gt;
                        &lt;L7p:CommentAssertion&gt;
                            &lt;L7p:Comment stringValue="** Isolate seconds"/&gt;
                        &lt;/L7p:CommentAssertion&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cast to string"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:Base64Expression stringValue="JHtyZW1haW5pbmcucmVzdWx0fQ=="/&gt;
                            &lt;L7p:VariableToSet stringValue="remaining.seconds"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:VariablePrefix stringValue="remaining"/&gt;
                            &lt;L7p:XmlMsgSrc stringValue="dummy"/&gt;
                            &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                &lt;L7p:Expression stringValue="$remaining.seconds * 60"/&gt;
                                &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Namespaces&gt;
                                &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                            &lt;/L7p:XpathExpression&gt;
                        &lt;/L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cast to string"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:Base64Expression stringValue="JHtyZW1haW5pbmcucmVzdWx0fQ=="/&gt;
                            &lt;L7p:VariableToSet stringValue="remaining.seconds"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:Regex&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Strip trailing decimals"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:AutoTarget booleanValue="false"/&gt;
                            &lt;L7p:OtherTargetMessageVariable stringValue="remaining.seconds"/&gt;
                            &lt;L7p:Regex stringValue="\..*"/&gt;
                            &lt;L7p:Replace booleanValue="true"/&gt;
                            &lt;L7p:Replacement stringValue=""/&gt;
                            &lt;L7p:Target target="OTHER"/&gt;
                        &lt;/L7p:Regex&gt;
                        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                            &lt;L7p:ComparisonAssertion&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:Expression1 stringValue="${remaining.seconds}"/&gt;
                                &lt;L7p:Operator operatorNull="null"/&gt;
                                &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="int"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="GE"/&gt;
                                    &lt;L7p:RightValue stringValue="10"/&gt;
                                    &lt;/L7p:item&gt;
                                &lt;/L7p:Predicates&gt;
                            &lt;/L7p:ComparisonAssertion&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cast to string"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:Base64Expression stringValue="MCR7cmVtYWluaW5nLnNlY29uZHN9"/&gt;
                                &lt;L7p:VariableToSet stringValue="remaining.seconds"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Prefix ${remaining.seconds} with 0 if &amp;lt; 10"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:OneOrMore&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Calculate days, hours, minutes and seconds until expiry"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                        &lt;wsp:All wsp:Usage="Required"&gt;
                            &lt;L7p:ComparisonAssertion&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:Expression1 stringValue="${remaining.time}"/&gt;
                                &lt;L7p:Operator operatorNull="null"/&gt;
                                &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="decimal"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="LT"/&gt;
                                    &lt;L7p:RightValue stringValue="0"/&gt;
                                    &lt;/L7p:item&gt;
                                &lt;/L7p:Predicates&gt;
                            &lt;/L7p:ComparisonAssertion&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="U0VWRVJF"/&gt;
                                &lt;L7p:VariableToSet stringValue="license.status"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="Mw=="/&gt;
                                &lt;L7p:VariableToSet stringValue="alert.level"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="U0VWRVJF"/&gt;
                                &lt;L7p:VariableToSet stringValue="alert.status"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="QXQgbGVhc3Qgb25lIGxpY2Vuc2UgaGFzIGV4cGlyZWQ="/&gt;
                                &lt;L7p:VariableToSet stringValue="alert.message"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Check for SEVERE status"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:All&gt;
                        &lt;wsp:All wsp:Usage="Required"&gt;
                            &lt;L7p:ComparisonAssertion&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:Expression1 stringValue="${remaining.days}"/&gt;
                                &lt;L7p:Operator operatorNull="null"/&gt;
                                &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="int"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:Operator operator="GE"/&gt;
                                    &lt;L7p:RightValue stringValue="${alertAge.INFO}"/&gt;
                                    &lt;/L7p:item&gt;
                                &lt;/L7p:Predicates&gt;
                            &lt;/L7p:ComparisonAssertion&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="T0s="/&gt;
                                &lt;L7p:VariableToSet stringValue="license.status"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Check for OK status"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:All&gt;
                        &lt;wsp:All wsp:Usage="Required"&gt;
                            &lt;L7p:ComparisonAssertion&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:Expression1 stringValue="${remaining.days}"/&gt;
                                &lt;L7p:Operator operatorNull="null"/&gt;
                                &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="int"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:Operator operator="GE"/&gt;
                                    &lt;L7p:RightValue stringValue="${alertAge.WARNING}"/&gt;
                                    &lt;/L7p:item&gt;
                                &lt;/L7p:Predicates&gt;
                            &lt;/L7p:ComparisonAssertion&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="SU5GTw=="/&gt;
                                &lt;L7p:VariableToSet stringValue="license.status"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${alert.level}"/&gt;
                                    &lt;L7p:Operator operatorNull="null"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="int"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="GE"/&gt;
                                    &lt;L7p:RightValue stringValue="1"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt;
                                &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="MQ=="/&gt;
                                    &lt;L7p:VariableToSet stringValue="alert.level"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="SU5GTw=="/&gt;
                                    &lt;L7p:VariableToSet stringValue="alert.status"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="QXQgbGVhc3Qgb25lIGxpY2Vuc2Ugd2lsbCBleHBpcmUgd2l0aGluZyAke2FsZXJ0QWdlLklORk99IGRheXM="/&gt;
                                    &lt;L7p:VariableToSet stringValue="alert.message"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Set ${alert.level}, ${alert.status}, and ${alert.message}"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                &lt;/wsp:All&gt;
                                &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Set ${alert.*} if not already at a higher state"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt;
                            &lt;/wsp:OneOrMore&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Check for INFO status"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:All&gt;
                        &lt;wsp:All wsp:Usage="Required"&gt;
                            &lt;L7p:ComparisonAssertion&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:Expression1 stringValue="${remaining.days}"/&gt;
                                &lt;L7p:Operator operatorNull="null"/&gt;
                                &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="int"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:Operator operator="GE"/&gt;
                                    &lt;L7p:RightValue stringValue="0"/&gt;
                                    &lt;/L7p:item&gt;
                                &lt;/L7p:Predicates&gt;
                            &lt;/L7p:ComparisonAssertion&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="V0FSTklORw=="/&gt;
                                &lt;L7p:VariableToSet stringValue="license.status"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${alert.level}"/&gt;
                                    &lt;L7p:Operator operatorNull="null"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="int"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="GE"/&gt;
                                    &lt;L7p:RightValue stringValue="2"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt;
                                &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="Mg=="/&gt;
                                    &lt;L7p:VariableToSet stringValue="alert.level"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="V0FSTklORw=="/&gt;
                                    &lt;L7p:VariableToSet stringValue="alert.status"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="QXQgbGVhc3Qgb25lIGxpY2Vuc2Ugd2lsbCBleHBpcmUgd2l0aGluZyAke2FsZXJ0QWdlLldBUk5JTkd9IGRheXM="/&gt;
                                    &lt;L7p:VariableToSet stringValue="alert.message"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Set ${alert.level}, ${alert.status}, and ${alert.message}"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                &lt;/wsp:All&gt;
                                &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Set ${alert.*} if not already at a higher state"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt;
                            &lt;/wsp:OneOrMore&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Check for WARNING status"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:All&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Set ${alert.*} based on expiration status"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                        &lt;wsp:All wsp:Usage="Required"&gt;
                            &lt;L7p:ComparisonAssertion&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:Expression1 stringValue="${format}"/&gt;
                                &lt;L7p:Expression2 stringValue="JSON"/&gt;
                                &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="JSON"/&gt;
                                    &lt;/L7p:item&gt;
                                &lt;/L7p:Predicates&gt;
                            &lt;/L7p:ComparisonAssertion&gt;
                            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${license.iterations}"/&gt;
                                    &lt;L7p:Expression2 stringValue="0"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="0"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt;
                                &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="JHtsaWNlbnNlc1RhYmxlfSw="/&gt;
                                    &lt;L7p:VariableToSet stringValue="licensesTable"/&gt;
                                &lt;/L7p:SetVariable&gt;
                                &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Append comma if not first iteration"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt;
                            &lt;/wsp:OneOrMore&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="JHtsaWNlbnNlc1RhYmxlfQ0KICAgIHsNCiAgICAgICJwcm9kdWN0IjogIiR7cHJvZHVjdC5uYW1lLnJlc3VsdH0iLA0KICAgICAgInZlcnNpb24iOiAiJHt2ZXJzaW9uLm1ham9yLnJlc3VsdH0uJHt2ZXJzaW9uLm1pbm9yLnJlc3VsdH0iLA0KICAgICAgImZlYXR1cmVzZXQiOiAiJHtmZWF0dXJlc2V0LnJlc3VsdH0iLA0KICAgICAgImRlc2NyaXB0aW9uIjogIiR7ZGVzY3JpcHRpb24ucmVzdWx0fSIsDQogICAgICAibGljZW5zZWUiOiB7DQogICAgICAgICAibmFtZSI6ICIke2xpY2Vuc2VlLm5hbWUucmVzdWx0fSIsDQogICAgICAgICAiZW1haWwiOiAiJHtsaWNlbnNlZS5lbWFpbC5yZXN1bHR9Ig0KICAgICAgfSwNCiAgICAgICJ2YWxpZCI6ICIke3ZhbGlkLnJlc3VsdH0iLA0KICAgICAgImV4cGlyZXMiOiAiJHtleHBpcmVzLnJlc3VsdH0iLA0KICAgICAgInJlbWFpbmluZyI6ICIke3JlbWFpbmluZy5kYXlzfToke3JlbWFpbmluZy5ob3Vyc306JHtyZW1haW5pbmcubWludXRlc306JHtyZW1haW5pbmcuc2Vjb25kc30iLA0KICAgICAgInN0YXR1cyI6ICIke2xpY2Vuc2Uuc3RhdHVzfSINCiAgICB9"/&gt;
                                &lt;L7p:VariableToSet stringValue="licensesTable"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${format} == JSON"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:All&gt;
                        &lt;wsp:All wsp:Usage="Required"&gt;
                            &lt;L7p:ComparisonAssertion&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:Expression1 stringValue="${format}"/&gt;
                                &lt;L7p:Expression2 stringValue="XML"/&gt;
                                &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="XML"/&gt;
                                    &lt;/L7p:item&gt;
                                &lt;/L7p:Predicates&gt;
                            &lt;/L7p:ComparisonAssertion&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="JHtsaWNlbnNlc1RhYmxlfQ0KICAgIDxMaWNlbnNlPg0KICAgICAgPFByb2R1Y3Q+JHtwcm9kdWN0Lm5hbWUucmVzdWx0fTwvUHJvZHVjdD4NCiAgICAgIDxWZXJzaW9uPiR7dmVyc2lvbi5tYWpvci5yZXN1bHR9LiR7dmVyc2lvbi5taW5vci5yZXN1bHR9PC9WZXJzaW9uPg0KICAgICAgPEZlYXR1cmVTZXQ+JHtmZWF0dXJlc2V0LnJlc3VsdH08L0ZlYXR1cmVTZXQ+DQogICAgICA8RGVzY3JpcHRpb24+JHtkZXNjcmlwdGlvbi5yZXN1bHR9PC9EZXNjcmlwdGlvbj4NCiAgICAgIDxMaWNlbnNlZT4NCiAgICAgICAgPE5hbWU+JHtsaWNlbnNlZS5uYW1lLnJlc3VsdH08L05hbWU+DQogICAgICAgIDxFbWFpbD4ke2xpY2Vuc2VlLmVtYWlsLnJlc3VsdH08L0VtYWlsPg0KICAgICAgPC9MaWNlbnNlZT4NCiAgICAgIDxWYWxpZD4ke3ZhbGlkLnJlc3VsdH08L1ZhbGlkPg0KICAgICAgPEV4cGlyZXM+JHtleHBpcmVzLnJlc3VsdH08L0V4cGlyZXM+DQogICAgICA8UmVtYWluaW5nPiR7cmVtYWluaW5nLmRheXN9OiR7cmVtYWluaW5nLmhvdXJzfToke3JlbWFpbmluZy5taW51dGVzfToke3JlbWFpbmluZy5zZWNvbmRzfTwvUmVtYWluaW5nPg0KICAgICAgPFN0YXR1cz4ke2xpY2Vuc2Uuc3RhdHVzfTwvU3RhdHVzPg0KICAgIDwvTGljZW5zZT4="/&gt;
                                &lt;L7p:VariableToSet stringValue="licensesTable"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${format} == XML"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:All&gt;
                        &lt;wsp:All wsp:Usage="Required"&gt;
                            &lt;L7p:ComparisonAssertion&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:Expression1 stringValue="${format}"/&gt;
                                &lt;L7p:Expression2 stringValue="HTML"/&gt;
                                &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="HTML"/&gt;
                                    &lt;/L7p:item&gt;
                                &lt;/L7p:Predicates&gt;
                            &lt;/L7p:ComparisonAssertion&gt;
                            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${remaining.days}"/&gt;
                                    &lt;L7p:Operator operatorNull="null"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="int"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="GE"/&gt;
                                    &lt;L7p:RightValue stringValue="${alertAge.INFO}"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                    &lt;/L7p:ComparisonAssertion&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="bGlnaHRncmVlbg=="/&gt;
                                    &lt;L7p:VariableToSet stringValue="bgcolor"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// No alert to set"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                &lt;/wsp:All&gt;
                                &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${remaining.days}"/&gt;
                                    &lt;L7p:Operator operatorNull="null"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="int"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="GE"/&gt;
                                    &lt;L7p:RightValue stringValue="${alertAge.WARNING}"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                    &lt;/L7p:ComparisonAssertion&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="eWVsbG93"/&gt;
                                    &lt;L7p:VariableToSet stringValue="bgcolor"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Set for INFO"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                &lt;/wsp:All&gt;
                                &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${remaining.time}"/&gt;
                                    &lt;L7p:Operator operatorNull="null"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="decimal"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="LT"/&gt;
                                    &lt;L7p:RightValue stringValue="0"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                    &lt;/L7p:ComparisonAssertion&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="cmVk"/&gt;
                                    &lt;L7p:VariableToSet stringValue="bgcolor"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Check for SEVERE if ${remaining.time} &amp;lt; 0"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                &lt;/wsp:All&gt;
                                &lt;L7p:SetVariable&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Must be WARNING level"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Base64Expression stringValue="b3Jhbmdl"/&gt;
                                    &lt;L7p:VariableToSet stringValue="bgcolor"/&gt;
                                &lt;/L7p:SetVariable&gt;
                                &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Set the background colour for the Time Remaining cell"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt;
                            &lt;/wsp:OneOrMore&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="JHtsaWNlbnNlc1RhYmxlfSAgPHRyPg0KICAgIDx0ZD4ke3Byb2R1Y3QubmFtZS5yZXN1bHR9PGJyLz5WZXJzaW9uICR7dmVyc2lvbi5tYWpvci5yZXN1bHR9LiR7dmVyc2lvbi5taW5vci5yZXN1bHR9PGJyLz4oJHtmZWF0dXJlc2V0LnJlc3VsdH0pPC90ZD4NCiAgICA8dGQ+JHtkZXNjcmlwdGlvbi5yZXN1bHR9PC90ZD4NCiAgICA8dGQ+JHtsaWNlbnNlZS5uYW1lLnJlc3VsdH08YnIvPigke2xpY2Vuc2VlLmVtYWlsLnJlc3VsdH0pPC90ZD4NCiAgICA8dGQ+JHt2YWxpZC5yZXN1bHR9PC90ZD4NCiAgICA8dGQ+JHtleHBpcmVzLnJlc3VsdH08L3RkPg0KICAgIDx0ZCBiZ2NvbG9yPSIke2JnY29sb3J9Ij4ke3JlbWFpbmluZy5kYXlzfToke3JlbWFpbmluZy5ob3Vyc306JHtyZW1haW5pbmcubWludXRlc306JHtyZW1haW5pbmcuc2Vjb25kc308L3RkPg0KICA8L3RyPg=="/&gt;
                                &lt;L7p:VariableToSet stringValue="licensesTable"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${format} == HTML"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:All&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Set response per ${format}"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:OneOrMore&gt;
                &lt;/L7p:ForEachLoop&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${format}"/&gt;
                            &lt;L7p:Expression2 stringValue="JSON"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="JSON"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:HardcodedResponse&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// application/json"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:Base64ResponseBody stringValue="ewogICJhbGVydFN0YXR1cyI6ICIke2FsZXJ0LnN0YXR1c30iLAogICJhbGVydExldmVsIjogIiR7YWxlcnQubGV2ZWx9IiwKICAiYWxlcnRNZXNzYWdlIjogIiR7YWxlcnQubWVzc2FnZX0iLAogICJ0aHJlc2hvbGQuSU5GTyI6ICIke2FsZXJ0QWdlLklORk99IGRheXMiLAogICJ0aHJlc2hvbGQuV0FSTklORyI6ICIke2FsZXJ0QWdlLldBUk5JTkd9IGRheXMiLAogICJsaWNlbnNlcyI6IFske2xpY2Vuc2VzVGFibGV9CiAgXSwKICAiYWNjZXNzZWRCeSI6ICIke3JlcXVlc3QuYXV0aGVudGljYXRlZHVzZXJ9Igp9"/&gt;
                            &lt;L7p:ResponseContentType stringValue="application/json; charset=UTF-8"/&gt;
                        &lt;/L7p:HardcodedResponse&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${format} == JSON"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${format}"/&gt;
                            &lt;L7p:Expression2 stringValue="XML"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="XML"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:HardcodedResponse&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// text/xml"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:Base64ResponseBody stringValue="PExpY2Vuc2VSZXBvcnQ+CiAgPEFsZXJ0U3RhdHVzPiR7YWxlcnQuc3RhdHVzfTwvQWxlcnRTdGF0dXM+CiAgPEFsZXJ0TGV2ZWw+JHthbGVydC5sZXZlbH08L0FsZXJ0TGV2ZWw+CiAgPEFsZXJ0TWVzc2FnZT4ke2FsZXJ0Lm1lc3NhZ2V9PC9BbGVydE1lc3NhZ2U+CiAgPFRocmVzaG9sZC5JTkZPPiR7YWxlcnRBZ2UuSU5GT30gZGF5czwvVGhyZXNob2xkLklORk8+CiAgPFRocmVzaG9sZC5XQVJOSU5HPiR7YWxlcnRBZ2UuV0FSTklOR30gZGF5czwvVGhyZXNob2xkLldBUk5JTkc+CiAgPExpY2Vuc2VzPiR7bGljZW5zZXNUYWJsZX0KICA8L0xpY2Vuc2VzPgogIDxBY2Nlc3NlZEJ5PiR7cmVxdWVzdC5hdXRoZW50aWNhdGVkdXNlcn08L0FjY2Vzc2VkQnk+CjwvTGljZW5zZVJlcG9ydD4="/&gt;
                        &lt;/L7p:HardcodedResponse&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${format} == XML"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${format}"/&gt;
                            &lt;L7p:Expression2 stringValue="HTML"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="HTML"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:HardcodedResponse&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// text/html"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:Base64ResponseBody stringValue="JHtodG1sLnRvcH0KCjxoMj5MaWNlbnNlczwvaDI+Cjx0YWJsZSBjbGFzcz0idGFibGUtc3RyaXBlZCB0YWJsZS1ob3ZlciI+CiAgPHRyIHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjE2LDIxNiwyMTYpOyI+CiAgICA8dGg+UHJvZHVjdCwgVmVyc2lvbiwgJmFtcDsgRmVhdHVyZVNldDwvdGg+CiAgICA8dGg+RGVzY3JpcHRpb248L3RoPgogICAgPHRoPklzc3VlZCBUbzwvdGg+CiAgICA8dGg+U3RhcnQ8L3RoPgogICAgPHRoPkV4cGlyZXM8L3RoPgogICAgPHRoPlRpbWUgUmVtYWluaW5nPC90aD4KICA8L3RyPgoke2xpY2Vuc2VzVGFibGV9CjwvdGFibGU+Cgo8aDI+TGVnZW5kPC9oMj4KPHRhYmxlIGNsYXNzPSJ0YWJsZS1zdHJpcGVkIHRhYmxlLWhvdmVyIj4KICA8dHI+CiAgICA8dGQgYmdjb2xvcj0ibGlnaHRncmVlbiI+TGljZW5zZSBpcyBPSzwvdGQ+CiAgICA8dGQgYmdjb2xvcj0ieWVsbG93Ij5MaWNlbnNlIHdpbGwgZXhwaXJlIGluIGxlc3MgdGhhbiAke2FsZXJ0QWdlLklORk99IGRheXM8L3RkPgogICAgPHRkIGJnY29sb3I9Im9yYW5nZSI+TGljZW5zZSB3aWxsIGV4cGlyZSBpbiBsZXNzIHRoYW4gJHthbGVydEFnZS5XQVJOSU5HfSBkYXlzPC90ZD4KICAgIDx0ZCBiZ2NvbG9yPSJyZWQiPkxpY2Vuc2UgaGFzIGV4cGlyZWQ8L3RkPgogIDwvdHI+CjwvdGFibGU+Cgoke2h0bWwuYm90dG9tfQ=="/&gt;
                            &lt;L7p:ResponseContentType stringValue="text/html; charset=UTF-8"/&gt;
                        &lt;/L7p:HardcodedResponse&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${format} == HTML"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Return response per ${format}"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:AddHeader&gt;
                    &lt;L7p:HeaderName stringValue="X-AlertLevel"/&gt;
                    &lt;L7p:HeaderValue stringValue="${alert.level}"/&gt;
                    &lt;L7p:Target target="RESPONSE"/&gt;
                &lt;/L7p:AddHeader&gt;
                &lt;L7p:AddHeader&gt;
                    &lt;L7p:HeaderName stringValue="X-AlertStatus"/&gt;
                    &lt;L7p:HeaderValue stringValue="${alert.status}"/&gt;
                    &lt;L7p:Target target="RESPONSE"/&gt;
                &lt;/L7p:AddHeader&gt;
                &lt;L7p:AddHeader&gt;
                    &lt;L7p:HeaderName stringValue="X-AlertMessage"/&gt;
                    &lt;L7p:HeaderValue stringValue="${alert.message}"/&gt;
                    &lt;L7p:Target target="RESPONSE"/&gt;
                &lt;/L7p:AddHeader&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// ${loggedIn} == true"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${loggedIn}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="boolean"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:RightValue stringValue="false"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                            &lt;L7p:ComparisonAssertion&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:Expression1 stringValue="${format}"/&gt;
                                &lt;L7p:Expression2 stringValue="JSON"/&gt;
                                &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="JSON"/&gt;
                                    &lt;/L7p:item&gt;
                                &lt;/L7p:Predicates&gt;
                            &lt;/L7p:ComparisonAssertion&gt;
                            &lt;L7p:ComparisonAssertion&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:Expression1 stringValue="${format}"/&gt;
                                &lt;L7p:Expression2 stringValue="XML"/&gt;
                                &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="XML"/&gt;
                                    &lt;/L7p:item&gt;
                                &lt;/L7p:Predicates&gt;
                            &lt;/L7p:ComparisonAssertion&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Check for ${format} == JSON|XML"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:OneOrMore&gt;
                        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                            &lt;wsp:All wsp:Usage="Required"&gt;
                                &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${request.http.secure}"/&gt;
                                    &lt;L7p:Operator operatorNull="null"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="boolean"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="true"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt;
                                &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="Tm90IEF1dGhvcml6ZWQ="/&gt;
                                    &lt;L7p:VariableToSet stringValue="error.message"/&gt;
                                &lt;/L7p:SetVariable&gt;
                                &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Secure connection, so just return &amp;quot;Not Authorized&amp;quot;"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt;
                            &lt;/wsp:All&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="U1NMIFJlcXVpcmVk"/&gt;
                                &lt;L7p:VariableToSet stringValue="error.message"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Set error response depending on whether it came over SSL or not"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:OneOrMore&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="NDAx"/&gt;
                            &lt;L7p:VariableToSet stringValue="error.status"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:FalseAssertion/&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${format} == JSON|XML"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${format}"/&gt;
                            &lt;L7p:Expression2 stringValue="HTML"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="HTML"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                            &lt;wsp:All wsp:Usage="Required"&gt;
                                &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${logout}"/&gt;
                                    &lt;L7p:Operator operatorNull="null"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="boolean"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="true"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt;
                                &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Detail stringValue="==&gt; Logging user out"/&gt;
                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                &lt;/L7p:AuditDetailAssertion&gt;
                                &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue=""/&gt;
                                    &lt;L7p:DataType variableDataType="dateTime"/&gt;
                                    &lt;L7p:DateOffsetExpression stringValue="-1"/&gt;
                                    &lt;L7p:DateOffsetField intValue="5"/&gt;
                                    &lt;L7p:VariableToSet stringValue="yesterday"/&gt;
                                &lt;/L7p:SetVariable&gt;
                                &lt;L7p:ManageCookie&gt;
                                    &lt;L7p:CookieAttributes mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="name"/&gt;
                                    &lt;L7p:value nameValuePair="included"&gt;
                                    &lt;L7p:Key stringValue="name"/&gt;
                                    &lt;L7p:Value stringValue="sessionKey"/&gt;
                                    &lt;/L7p:value&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="max-age"/&gt;
                                    &lt;L7p:value nameValuePair="included"&gt;
                                    &lt;L7p:Key stringValue="max-age"/&gt;
                                    &lt;L7p:Value stringValue="0"/&gt;
                                    &lt;/L7p:value&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="httpOnly"/&gt;
                                    &lt;L7p:value nameValuePair="included"&gt;
                                    &lt;L7p:Key stringValue="httpOnly"/&gt;
                                    &lt;L7p:Value stringValue="true"/&gt;
                                    &lt;/L7p:value&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="secure"/&gt;
                                    &lt;L7p:value nameValuePair="included"&gt;
                                    &lt;L7p:Key stringValue="secure"/&gt;
                                    &lt;L7p:Value stringValue="true"/&gt;
                                    &lt;/L7p:value&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="value"/&gt;
                                    &lt;L7p:value nameValuePair="included"&gt;
                                    &lt;L7p:Key stringValue="value"/&gt;
                                    &lt;L7p:Value stringValue="NULL"/&gt;
                                    &lt;/L7p:value&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:CookieAttributes&gt;
                                    &lt;L7p:Operation operation="ADD_OR_REPLACE"/&gt;
                                    &lt;L7p:Target target="RESPONSE"/&gt;
                                &lt;/L7p:ManageCookie&gt;
                                &lt;L7p:CacheStorage&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Remove from cache by setting TTL to 0"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:CacheEntryKey stringValue="${cookie.sessionKey}"/&gt;
                                    &lt;L7p:CacheId stringValue="loginCache"/&gt;
                                    &lt;L7p:MaxEntries stringValue="25"/&gt;
                                    &lt;L7p:MaxEntryAgeSeconds stringValue="0"/&gt;
                                    &lt;L7p:MaxEntrySizeBytes stringValue="1000"/&gt;
                                    &lt;L7p:OtherTargetMessageVariable stringValue="sessionDetail"/&gt;
                                    &lt;L7p:Target target="OTHER"/&gt;
                                &lt;/L7p:CacheStorage&gt;
                                &lt;L7p:AddHeader&gt;
                                    &lt;L7p:HeaderName stringValue="Location"/&gt;
                                    &lt;L7p:HeaderValue stringValue="${request.url.path}"/&gt;
                                    &lt;L7p:Target target="RESPONSE"/&gt;
                                &lt;/L7p:AddHeader&gt;
                                &lt;L7p:HardcodedResponse&gt;
                                    &lt;L7p:Base64ResponseBody stringValue="JHtodG1sLnRvcH0KPHA+JHtmb3JtLm1lc3NhZ2V9PC9wPgoKPHA+PGEgaHJlZj0iJHtyZXF1ZXN0LnVybC5wYXRofSI+Q29udGludWU8L3A+CiR7aHRtbC5ib3R0b219"/&gt;
                                    &lt;L7p:ResponseContentType stringValue="text/html; charset=UTF-8"/&gt;
                                    &lt;L7p:ResponseStatus stringValue="302"/&gt;
                                &lt;/L7p:HardcodedResponse&gt;
                                &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Logout"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt;
                            &lt;/wsp:All&gt;
                            &lt;wsp:All wsp:Usage="Required"&gt;
                                &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Detail stringValue="==&gt; Not authenticated, returning login form"/&gt;
                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                &lt;/L7p:AuditDetailAssertion&gt;
                                &lt;L7p:HardcodedResponse&gt;
                                    &lt;L7p:Base64ResponseBody stringValue="JHtodG1sLnRvcH0KCiAgICA8cD4ke2Zvcm0ubWVzc2FnZX08L3A+CgogICAgPHA+UGxlYXNlIHByb3ZpZGUgUG9saWN5IE1hbmFnZXIgYWRtaW5pc3RyYXRvciBjcmVkZW50aWFsczo8L3A+CiAgICA8Zm9ybSBtZXRob2Q9IlBPU1QiPgogICAgPHA+VXNlcm5hbWU6IDxpbnB1dCBuYW1lPSJ1c2VybmFtZSIgdHlwZT0idGV4dCIvPjxici8+CiAgICBQYXNzd29yZDogPGlucHV0IG5hbWU9InBhc3N3b3JkIiB0eXBlPSJwYXNzd29yZCIvPjxici8+CiAgICA8aW5wdXQgdHlwZT0ic3VibWl0IiB2YWx1ZT0iQ29udGludWUiLz48L3A+CiAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJhY3Rpb24iIHZhbHVlPSJsb2dpbiIvPgogICAgPC9mb3JtPgoKJHtodG1sLmJvdHRvbX0="/&gt;
                                    &lt;L7p:ResponseContentType stringValue="text/html; charset=UTF-8"/&gt;
                                &lt;/L7p:HardcodedResponse&gt;
                                &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Failed or new"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt;
                            &lt;/wsp:All&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Handle logout vs failed or new login"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:OneOrMore&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${request.http.parameter.format} != JSON|XML"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Handle format parameter"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// ${loggedIn} == false"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Do processing if ${loggedIn} == true else return login form"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
                        </l7:ResourceSet>
                    </l7:Resources>
                </l7:Service>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Utility: List Cassandra Connections</l7:Name>
            <l7:Id>d12aa7875d7217ab6c41e7d7acf6720b</l7:Id>
            <l7:Type>ENCAPSULATED_ASSERTION</l7:Type>
            <l7:TimeStamp>2022-04-29T11:42:05.311-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:EncapsulatedAssertion id="d12aa7875d7217ab6c41e7d7acf6720b" version="0">
                    <l7:Name>Utility: List Cassandra Connections</l7:Name>
                    <l7:Guid>b55454b6-3095-4e4d-92dc-3f10a6594fba</l7:Guid>
                    <l7:PolicyReference id="d12aa7875d7217ab6c41e7d7acf66dff" resourceUri="http://ns.l7tech.com/2010/04/gateway-management/policies"/>
                    <l7:EncapsulatedArguments>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>1</l7:Ordinal>
                            <l7:ArgumentName>refresh</l7:ArgumentName>
                            <l7:ArgumentType>string</l7:ArgumentType>
                            <l7:GuiLabel>Refresh Cache? (true|false) (optional): </l7:GuiLabel>
                            <l7:GuiPrompt>true</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>2</l7:Ordinal>
                            <l7:ArgumentName>cacheAge</l7:ArgumentName>
                            <l7:ArgumentType>string</l7:ArgumentType>
                            <l7:GuiLabel>Cache Age (optional): </l7:GuiLabel>
                            <l7:GuiPrompt>true</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                    </l7:EncapsulatedArguments>
                    <l7:EncapsulatedResults>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>cassandraConnections.sorted</l7:ResultName>
                            <l7:ResultType>message</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>error.msg</l7:ResultName>
                            <l7:ResultType>string</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                    </l7:EncapsulatedResults>
                    <l7:Properties>
                        <l7:Property key="allowTracing">
                            <l7:StringValue>false</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="description">
                            <l7:StringValue>Assertion to call restman and generate a sorted list of cassandra connections on the Gateway</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="paletteFolder">
                            <l7:StringValue>internalAssertions</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="paletteIconResourceName">
                            <l7:StringValue>Refresh16.gif</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="passMetricsToParent">
                            <l7:StringValue>false</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="policyGuid">
                            <l7:StringValue>a84290a6-ecec-41ed-96ea-6e9e68e2ff40</l7:StringValue>
                        </l7:Property>
                    </l7:Properties>
                </l7:EncapsulatedAssertion>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Utility: Escape HTML String</l7:Name>
            <l7:Id>c4706d99077459bed7ca5ef6c9e59840</l7:Id>
            <l7:Type>ENCAPSULATED_ASSERTION</l7:Type>
            <l7:TimeStamp>2022-04-29T11:42:05.311-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:EncapsulatedAssertion id="c4706d99077459bed7ca5ef6c9e59840" version="0">
                    <l7:Name>Utility: Escape HTML String</l7:Name>
                    <l7:Guid>f6b19229-a705-4c48-bc78-3975564a1a9a</l7:Guid>
                    <l7:PolicyReference id="c4706d99077459bed7ca5ef6c9e59800" resourceUri="http://ns.l7tech.com/2010/04/gateway-management/policies"/>
                    <l7:EncapsulatedArguments>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>1</l7:Ordinal>
                            <l7:ArgumentName>escapedString</l7:ArgumentName>
                            <l7:ArgumentType>string</l7:ArgumentType>
                            <l7:GuiLabel>String to escape: </l7:GuiLabel>
                            <l7:GuiPrompt>true</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                    </l7:EncapsulatedArguments>
                    <l7:EncapsulatedResults>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>escapedString</l7:ResultName>
                            <l7:ResultType>message</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                    </l7:EncapsulatedResults>
                    <l7:Properties>
                        <l7:Property key="allowTracing">
                            <l7:StringValue>false</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="description">
                            <l7:StringValue>Escape a string for HTML display</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="paletteFolder">
                            <l7:StringValue>internalAssertions</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="paletteIconResourceName">
                            <l7:StringValue>enableAllAssertions16.gif</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="passMetricsToParent">
                            <l7:StringValue>false</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="policyGuid">
                            <l7:StringValue>58c91da2-50ba-48ff-800c-1c96ad9659c0</l7:StringValue>
                        </l7:Property>
                    </l7:Properties>
                </l7:EncapsulatedAssertion>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Utility: List Cluster Properties</l7:Name>
            <l7:Id>bc46b1606b0639d4d49278d55a490dce</l7:Id>
            <l7:Type>ENCAPSULATED_ASSERTION</l7:Type>
            <l7:TimeStamp>2022-04-29T11:42:05.311-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:EncapsulatedAssertion id="bc46b1606b0639d4d49278d55a490dce" version="0">
                    <l7:Name>Utility: List Cluster Properties</l7:Name>
                    <l7:Guid>c8e30576-c290-4bd0-b63d-1eb3df866479</l7:Guid>
                    <l7:PolicyReference id="bc46b1606b0639d4d49278d55a4909b9" resourceUri="http://ns.l7tech.com/2010/04/gateway-management/policies"/>
                    <l7:EncapsulatedArguments>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>1</l7:Ordinal>
                            <l7:ArgumentName>refresh</l7:ArgumentName>
                            <l7:ArgumentType>string</l7:ArgumentType>
                            <l7:GuiLabel>Refresh Cache? (true|false) (optional): </l7:GuiLabel>
                            <l7:GuiPrompt>true</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>2</l7:Ordinal>
                            <l7:ArgumentName>cacheAge</l7:ArgumentName>
                            <l7:ArgumentType>string</l7:ArgumentType>
                            <l7:GuiLabel>Cache Age (optional): </l7:GuiLabel>
                            <l7:GuiPrompt>true</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                    </l7:EncapsulatedArguments>
                    <l7:EncapsulatedResults>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>clusterProperties.sorted</l7:ResultName>
                            <l7:ResultType>message</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>error.msg</l7:ResultName>
                            <l7:ResultType>string</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                    </l7:EncapsulatedResults>
                    <l7:Properties>
                        <l7:Property key="allowTracing">
                            <l7:StringValue>false</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="description">
                            <l7:StringValue>Assertion to call restman and generate a sorted list of encapsulated assertions on the Gateway</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="paletteFolder">
                            <l7:StringValue>internalAssertions</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="paletteIconResourceName">
                            <l7:StringValue>Refresh16.gif</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="passMetricsToParent">
                            <l7:StringValue>false</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="policyGuid">
                            <l7:StringValue>5d651487-691b-4060-8de1-b91c798cdd58</l7:StringValue>
                        </l7:Property>
                    </l7:Properties>
                </l7:EncapsulatedAssertion>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Utility: List Encapsulated Assertions</l7:Name>
            <l7:Id>bc46b1606b0639d4d49278d55a47e748</l7:Id>
            <l7:Type>ENCAPSULATED_ASSERTION</l7:Type>
            <l7:TimeStamp>2022-04-29T11:42:05.312-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:EncapsulatedAssertion id="bc46b1606b0639d4d49278d55a47e748" version="0">
                    <l7:Name>Utility: List Encapsulated Assertions</l7:Name>
                    <l7:Guid>8fc67f28-191e-4a4b-808b-299848593b53</l7:Guid>
                    <l7:PolicyReference id="bc46b1606b0639d4d49278d55a44cd84" resourceUri="http://ns.l7tech.com/2010/04/gateway-management/policies"/>
                    <l7:EncapsulatedArguments>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>1</l7:Ordinal>
                            <l7:ArgumentName>refresh</l7:ArgumentName>
                            <l7:ArgumentType>string</l7:ArgumentType>
                            <l7:GuiLabel>Refresh Cache? (true|false) (optional): </l7:GuiLabel>
                            <l7:GuiPrompt>true</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>2</l7:Ordinal>
                            <l7:ArgumentName>cacheAge</l7:ArgumentName>
                            <l7:ArgumentType>string</l7:ArgumentType>
                            <l7:GuiLabel>Cache Age (optional): </l7:GuiLabel>
                            <l7:GuiPrompt>true</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                    </l7:EncapsulatedArguments>
                    <l7:EncapsulatedResults>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>encapsulatedAssertions.sorted</l7:ResultName>
                            <l7:ResultType>message</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>error.msg</l7:ResultName>
                            <l7:ResultType>string</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                    </l7:EncapsulatedResults>
                    <l7:Properties>
                        <l7:Property key="allowTracing">
                            <l7:StringValue>false</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="description">
                            <l7:StringValue>Assertion to call restman and generate a sorted list of encapsulated assertions on the Gateway</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="paletteFolder">
                            <l7:StringValue>internalAssertions</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="paletteIconResourceName">
                            <l7:StringValue>Refresh16.gif</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="passMetricsToParent">
                            <l7:StringValue>false</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="policyGuid">
                            <l7:StringValue>63027bfb-ecd6-4219-944a-eb6661e11ebe</l7:StringValue>
                        </l7:Property>
                    </l7:Properties>
                </l7:EncapsulatedAssertion>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Utility: List Groups</l7:Name>
            <l7:Id>c4706d99077459bed7ca5ef6c9e6ebe7</l7:Id>
            <l7:Type>ENCAPSULATED_ASSERTION</l7:Type>
            <l7:TimeStamp>2022-04-29T11:42:05.312-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:EncapsulatedAssertion id="c4706d99077459bed7ca5ef6c9e6ebe7" version="0">
                    <l7:Name>Utility: List Groups</l7:Name>
                    <l7:Guid>ead32848-5ace-4468-95fe-50cb9d343d60</l7:Guid>
                    <l7:PolicyReference id="c4706d99077459bed7ca5ef6c9e6eb45" resourceUri="http://ns.l7tech.com/2010/04/gateway-management/policies"/>
                    <l7:EncapsulatedArguments>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>1</l7:Ordinal>
                            <l7:ArgumentName>identityProviderIds</l7:ArgumentName>
                            <l7:ArgumentType>string</l7:ArgumentType>
                            <l7:GuiLabel>Identity Provider IDs (comma separated, optional): </l7:GuiLabel>
                            <l7:GuiPrompt>true</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>2</l7:Ordinal>
                            <l7:ArgumentName>refresh</l7:ArgumentName>
                            <l7:ArgumentType>string</l7:ArgumentType>
                            <l7:GuiLabel>Refresh Cache? (true|false) (optional): </l7:GuiLabel>
                            <l7:GuiPrompt>true</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>3</l7:Ordinal>
                            <l7:ArgumentName>cacheAge</l7:ArgumentName>
                            <l7:ArgumentType>string</l7:ArgumentType>
                            <l7:GuiLabel>Cache Age (optional): </l7:GuiLabel>
                            <l7:GuiPrompt>true</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                    </l7:EncapsulatedArguments>
                    <l7:EncapsulatedResults>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>error.msg</l7:ResultName>
                            <l7:ResultType>string</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>groups.sorted</l7:ResultName>
                            <l7:ResultType>message</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                    </l7:EncapsulatedResults>
                    <l7:Properties>
                        <l7:Property key="allowTracing">
                            <l7:StringValue>false</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="description">
                            <l7:StringValue>Assertion to call restman and generate a sorted list of groups in the Internal Identity Provider on the Gateway</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="paletteFolder">
                            <l7:StringValue>internalAssertions</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="paletteIconResourceName">
                            <l7:StringValue>Refresh16.gif</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="passMetricsToParent">
                            <l7:StringValue>false</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="policyGuid">
                            <l7:StringValue>7cbd12a3-9650-4652-be81-8d14a80d5ef3</l7:StringValue>
                        </l7:Property>
                    </l7:Properties>
                </l7:EncapsulatedAssertion>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Utility: List JDBC Connections</l7:Name>
            <l7:Id>d12aa7875d7217ab6c41e7d7acf65398</l7:Id>
            <l7:Type>ENCAPSULATED_ASSERTION</l7:Type>
            <l7:TimeStamp>2022-04-29T11:42:05.312-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:EncapsulatedAssertion id="d12aa7875d7217ab6c41e7d7acf65398" version="0">
                    <l7:Name>Utility: List JDBC Connections</l7:Name>
                    <l7:Guid>f8abecfe-11d6-44e4-be07-16e6080a7e5e</l7:Guid>
                    <l7:PolicyReference id="d12aa7875d7217ab6c41e7d7acf651f4" resourceUri="http://ns.l7tech.com/2010/04/gateway-management/policies"/>
                    <l7:EncapsulatedArguments>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>1</l7:Ordinal>
                            <l7:ArgumentName>refresh</l7:ArgumentName>
                            <l7:ArgumentType>string</l7:ArgumentType>
                            <l7:GuiLabel>Refresh Cache? (true|false) (optional): </l7:GuiLabel>
                            <l7:GuiPrompt>true</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>2</l7:Ordinal>
                            <l7:ArgumentName>cacheAge</l7:ArgumentName>
                            <l7:ArgumentType>string</l7:ArgumentType>
                            <l7:GuiLabel>Cache Age (optional): </l7:GuiLabel>
                            <l7:GuiPrompt>true</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                    </l7:EncapsulatedArguments>
                    <l7:EncapsulatedResults>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>error.msg</l7:ResultName>
                            <l7:ResultType>string</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>jdbcConnections.sorted</l7:ResultName>
                            <l7:ResultType>message</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                    </l7:EncapsulatedResults>
                    <l7:Properties>
                        <l7:Property key="allowTracing">
                            <l7:StringValue>true</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="description">
                            <l7:StringValue>Assertion to call restman and generate a sorted list of JDBC connections on the Gateway
</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="paletteFolder">
                            <l7:StringValue>internalAssertions</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="paletteIconResourceName">
                            <l7:StringValue>Refresh16.gif</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="passMetricsToParent">
                            <l7:StringValue>false</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="policyGuid">
                            <l7:StringValue>98bdf50c-2273-441a-8d94-d91f0a1bc268</l7:StringValue>
                        </l7:Property>
                    </l7:Properties>
                </l7:EncapsulatedAssertion>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Utility: List JMS Destinations</l7:Name>
            <l7:Id>c4706d99077459bed7ca5ef6c9e64f9f</l7:Id>
            <l7:Type>ENCAPSULATED_ASSERTION</l7:Type>
            <l7:TimeStamp>2022-04-29T11:42:05.313-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:EncapsulatedAssertion id="c4706d99077459bed7ca5ef6c9e64f9f" version="0">
                    <l7:Name>Utility: List JMS Destinations</l7:Name>
                    <l7:Guid>53bc61d8-f0d0-4024-b09c-61fd5c9ef33e</l7:Guid>
                    <l7:PolicyReference id="c4706d99077459bed7ca5ef6c9e64a12" resourceUri="http://ns.l7tech.com/2010/04/gateway-management/policies"/>
                    <l7:EncapsulatedArguments>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>1</l7:Ordinal>
                            <l7:ArgumentName>refresh</l7:ArgumentName>
                            <l7:ArgumentType>string</l7:ArgumentType>
                            <l7:GuiLabel>Refresh Cache? (true|false) (optional): </l7:GuiLabel>
                            <l7:GuiPrompt>true</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>2</l7:Ordinal>
                            <l7:ArgumentName>cacheAge</l7:ArgumentName>
                            <l7:ArgumentType>string</l7:ArgumentType>
                            <l7:GuiLabel>Cache Age (optional): </l7:GuiLabel>
                            <l7:GuiPrompt>true</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                    </l7:EncapsulatedArguments>
                    <l7:EncapsulatedResults>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>error.msg</l7:ResultName>
                            <l7:ResultType>string</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>jmsDestinations.sorted</l7:ResultName>
                            <l7:ResultType>message</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                    </l7:EncapsulatedResults>
                    <l7:Properties>
                        <l7:Property key="allowTracing">
                            <l7:StringValue>false</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="description">
                            <l7:StringValue>Assertion to call restman and generate a sorted list of JMS destinations on the Gateway</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="paletteFolder">
                            <l7:StringValue>internalAssertions</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="paletteIconResourceName">
                            <l7:StringValue>Refresh16.gif</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="passMetricsToParent">
                            <l7:StringValue>false</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="policyGuid">
                            <l7:StringValue>ce8a2a1e-7f41-470c-aa4a-0203afefb27c</l7:StringValue>
                        </l7:Property>
                    </l7:Properties>
                </l7:EncapsulatedAssertion>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Utility: List Policy Backed Services</l7:Name>
            <l7:Id>3c21f93d84b26244a446414e97757399</l7:Id>
            <l7:Type>ENCAPSULATED_ASSERTION</l7:Type>
            <l7:TimeStamp>2022-04-29T11:42:05.313-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:EncapsulatedAssertion id="3c21f93d84b26244a446414e97757399" version="0">
                    <l7:Name>Utility: List Policy Backed Services</l7:Name>
                    <l7:Guid>461cb9aa-0d25-4bf0-85d2-7e2d8d895e47</l7:Guid>
                    <l7:PolicyReference id="3c21f93d84b26244a446414e97757263" resourceUri="http://ns.l7tech.com/2010/04/gateway-management/policies"/>
                    <l7:EncapsulatedArguments>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>1</l7:Ordinal>
                            <l7:ArgumentName>refresh</l7:ArgumentName>
                            <l7:ArgumentType>string</l7:ArgumentType>
                            <l7:GuiLabel>Refresh Cache? (true|false) (optional): </l7:GuiLabel>
                            <l7:GuiPrompt>true</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>2</l7:Ordinal>
                            <l7:ArgumentName>cacheAge</l7:ArgumentName>
                            <l7:ArgumentType>string</l7:ArgumentType>
                            <l7:GuiLabel>Cache Age (optional): </l7:GuiLabel>
                            <l7:GuiPrompt>true</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                    </l7:EncapsulatedArguments>
                    <l7:EncapsulatedResults>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>error.msg</l7:ResultName>
                            <l7:ResultType>string</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>policyBackedServices.sorted</l7:ResultName>
                            <l7:ResultType>message</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                    </l7:EncapsulatedResults>
                    <l7:Properties>
                        <l7:Property key="allowTracing">
                            <l7:StringValue>false</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="description">
                            <l7:StringValue>Assertion to call restman and generate a sorted list of policy backed services on the Gateway</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="paletteFolder">
                            <l7:StringValue>internalAssertions</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="paletteIconResourceName">
                            <l7:StringValue>Refresh16.gif</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="passMetricsToParent">
                            <l7:StringValue>false</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="policyGuid">
                            <l7:StringValue>1beb446f-b5b0-41f5-89d1-79e8fe122577</l7:StringValue>
                        </l7:Property>
                    </l7:Properties>
                </l7:EncapsulatedAssertion>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Utility: List Scheduled Tasks</l7:Name>
            <l7:Id>3c21f93d84b26244a446414e97757ceb</l7:Id>
            <l7:Type>ENCAPSULATED_ASSERTION</l7:Type>
            <l7:TimeStamp>2022-04-29T11:42:05.313-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:EncapsulatedAssertion id="3c21f93d84b26244a446414e97757ceb" version="0">
                    <l7:Name>Utility: List Scheduled Tasks</l7:Name>
                    <l7:Guid>100c1321-8d9f-45b9-80bd-ca1198081e5b</l7:Guid>
                    <l7:PolicyReference id="3c21f93d84b26244a446414e97757a31" resourceUri="http://ns.l7tech.com/2010/04/gateway-management/policies"/>
                    <l7:EncapsulatedArguments>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>1</l7:Ordinal>
                            <l7:ArgumentName>refresh</l7:ArgumentName>
                            <l7:ArgumentType>string</l7:ArgumentType>
                            <l7:GuiLabel>Refresh Cache? (true|false) (optional): </l7:GuiLabel>
                            <l7:GuiPrompt>true</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>2</l7:Ordinal>
                            <l7:ArgumentName>cacheAge</l7:ArgumentName>
                            <l7:ArgumentType>string</l7:ArgumentType>
                            <l7:GuiLabel>Cache Age (optional): </l7:GuiLabel>
                            <l7:GuiPrompt>true</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                    </l7:EncapsulatedArguments>
                    <l7:EncapsulatedResults>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>error.msg</l7:ResultName>
                            <l7:ResultType>string</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>scheduledTasks.sorted</l7:ResultName>
                            <l7:ResultType>message</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                    </l7:EncapsulatedResults>
                    <l7:Properties>
                        <l7:Property key="allowTracing">
                            <l7:StringValue>false</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="description">
                            <l7:StringValue>Assertion to call restman and generate a sorted list of scheduled tasks on the Gateway</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="paletteFolder">
                            <l7:StringValue>internalAssertions</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="paletteIconResourceName">
                            <l7:StringValue>Refresh16.gif</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="passMetricsToParent">
                            <l7:StringValue>false</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="policyGuid">
                            <l7:StringValue>3b9346d2-cc38-41ef-aac3-965942d95749</l7:StringValue>
                        </l7:Property>
                    </l7:Properties>
                </l7:EncapsulatedAssertion>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Utility: List Private Keys</l7:Name>
            <l7:Id>c4706d99077459bed7ca5ef6c9e5c6b8</l7:Id>
            <l7:Type>ENCAPSULATED_ASSERTION</l7:Type>
            <l7:TimeStamp>2022-04-29T11:42:05.313-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:EncapsulatedAssertion id="c4706d99077459bed7ca5ef6c9e5c6b8" version="0">
                    <l7:Name>Utility: List Private Keys</l7:Name>
                    <l7:Guid>fbdcb4ad-bf2d-44f7-8aef-c8e1553c13ba</l7:Guid>
                    <l7:PolicyReference id="c4706d99077459bed7ca5ef6c9e52876" resourceUri="http://ns.l7tech.com/2010/04/gateway-management/policies"/>
                    <l7:EncapsulatedArguments>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>1</l7:Ordinal>
                            <l7:ArgumentName>refresh</l7:ArgumentName>
                            <l7:ArgumentType>string</l7:ArgumentType>
                            <l7:GuiLabel>Refresh Cache? (true|false) (optional): </l7:GuiLabel>
                            <l7:GuiPrompt>true</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>2</l7:Ordinal>
                            <l7:ArgumentName>cacheAge</l7:ArgumentName>
                            <l7:ArgumentType>string</l7:ArgumentType>
                            <l7:GuiLabel>Cache Age (optional): </l7:GuiLabel>
                            <l7:GuiPrompt>true</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                    </l7:EncapsulatedArguments>
                    <l7:EncapsulatedResults>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>error.msg</l7:ResultName>
                            <l7:ResultType>string</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>privateKeys.sorted</l7:ResultName>
                            <l7:ResultType>message</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                    </l7:EncapsulatedResults>
                    <l7:Properties>
                        <l7:Property key="allowTracing">
                            <l7:StringValue>false</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="description">
                            <l7:StringValue>Assertion to call restman and generate a sorted list of private keys on the Gateway</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="paletteFolder">
                            <l7:StringValue>internalAssertions</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="paletteIconResourceName">
                            <l7:StringValue>Refresh16.gif</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="passMetricsToParent">
                            <l7:StringValue>false</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="policyGuid">
                            <l7:StringValue>1f2ab8ee-cf83-49df-b17e-5f78c6a2cf2d</l7:StringValue>
                        </l7:Property>
                    </l7:Properties>
                </l7:EncapsulatedAssertion>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Utility: List Generic Entities</l7:Name>
            <l7:Id>3c21f93d84b26244a446414e9774ede0</l7:Id>
            <l7:Type>ENCAPSULATED_ASSERTION</l7:Type>
            <l7:TimeStamp>2022-04-29T11:42:05.313-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:EncapsulatedAssertion id="3c21f93d84b26244a446414e9774ede0" version="0">
                    <l7:Name>Utility: List Generic Entities</l7:Name>
                    <l7:Guid>6db56c26-58d7-4ffc-8fa5-01b525d5468b</l7:Guid>
                    <l7:PolicyReference id="3c21f93d84b26244a446414e9774ecf3" resourceUri="http://ns.l7tech.com/2010/04/gateway-management/policies"/>
                    <l7:EncapsulatedArguments>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>1</l7:Ordinal>
                            <l7:ArgumentName>refresh</l7:ArgumentName>
                            <l7:ArgumentType>string</l7:ArgumentType>
                            <l7:GuiLabel>Refresh Cache? (true|false) (optional): </l7:GuiLabel>
                            <l7:GuiPrompt>true</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>2</l7:Ordinal>
                            <l7:ArgumentName>cacheAge</l7:ArgumentName>
                            <l7:ArgumentType>string</l7:ArgumentType>
                            <l7:GuiLabel>Cache Age (optional): </l7:GuiLabel>
                            <l7:GuiPrompt>true</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                    </l7:EncapsulatedArguments>
                    <l7:EncapsulatedResults>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>error.msg</l7:ResultName>
                            <l7:ResultType>string</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>genericEntities.sorted</l7:ResultName>
                            <l7:ResultType>message</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                    </l7:EncapsulatedResults>
                    <l7:Properties>
                        <l7:Property key="allowTracing">
                            <l7:StringValue>false</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="description">
                            <l7:StringValue>Assertion to call restman and generate a sorted list of generic entities on the Gateway</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="paletteFolder">
                            <l7:StringValue>internalAssertions</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="paletteIconResourceName">
                            <l7:StringValue>Refresh16.gif</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="passMetricsToParent">
                            <l7:StringValue>false</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="policyGuid">
                            <l7:StringValue>635c9c5a-6aa0-4b8f-b74f-b2dbb3de6a05</l7:StringValue>
                        </l7:Property>
                    </l7:Properties>
                </l7:EncapsulatedAssertion>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Utility: List Active Connectors</l7:Name>
            <l7:Id>c4706d99077459bed7ca5ef6c9e81607</l7:Id>
            <l7:Type>ENCAPSULATED_ASSERTION</l7:Type>
            <l7:TimeStamp>2022-04-29T11:42:05.313-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:EncapsulatedAssertion id="c4706d99077459bed7ca5ef6c9e81607" version="0">
                    <l7:Name>Utility: List Active Connectors</l7:Name>
                    <l7:Guid>48b49f89-16fe-4b7a-bb66-02d86ad236d8</l7:Guid>
                    <l7:PolicyReference id="c4706d99077459bed7ca5ef6c9e8150b" resourceUri="http://ns.l7tech.com/2010/04/gateway-management/policies"/>
                    <l7:EncapsulatedArguments>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>1</l7:Ordinal>
                            <l7:ArgumentName>refresh</l7:ArgumentName>
                            <l7:ArgumentType>string</l7:ArgumentType>
                            <l7:GuiLabel>Refresh Cache? (true|false) (optional): </l7:GuiLabel>
                            <l7:GuiPrompt>true</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>2</l7:Ordinal>
                            <l7:ArgumentName>cacheAge</l7:ArgumentName>
                            <l7:ArgumentType>string</l7:ArgumentType>
                            <l7:GuiLabel>Cache Age (optional): </l7:GuiLabel>
                            <l7:GuiPrompt>true</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                    </l7:EncapsulatedArguments>
                    <l7:EncapsulatedResults>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>activeConnectors.sorted</l7:ResultName>
                            <l7:ResultType>message</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>error.msg</l7:ResultName>
                            <l7:ResultType>string</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                    </l7:EncapsulatedResults>
                    <l7:Properties>
                        <l7:Property key="allowTracing">
                            <l7:StringValue>false</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="description">
                            <l7:StringValue>Assertion to call restman and generate a sorted list of active connectors on the Gateway</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="paletteFolder">
                            <l7:StringValue>internalAssertions</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="paletteIconResourceName">
                            <l7:StringValue>Refresh16.gif</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="passMetricsToParent">
                            <l7:StringValue>false</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="policyGuid">
                            <l7:StringValue>5e77b1ed-3cd9-4c5a-b038-601cca3fbc27</l7:StringValue>
                        </l7:Property>
                    </l7:Properties>
                </l7:EncapsulatedAssertion>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Utility: List Secure Passwords</l7:Name>
            <l7:Id>c4706d99077459bed7ca5ef6c9e65da4</l7:Id>
            <l7:Type>ENCAPSULATED_ASSERTION</l7:Type>
            <l7:TimeStamp>2022-04-29T11:42:05.313-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:EncapsulatedAssertion id="c4706d99077459bed7ca5ef6c9e65da4" version="0">
                    <l7:Name>Utility: List Secure Passwords</l7:Name>
                    <l7:Guid>eeb96501-f75c-4078-bcf7-98bc2c52bfe8</l7:Guid>
                    <l7:PolicyReference id="c4706d99077459bed7ca5ef6c9e65c43" resourceUri="http://ns.l7tech.com/2010/04/gateway-management/policies"/>
                    <l7:EncapsulatedArguments>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>1</l7:Ordinal>
                            <l7:ArgumentName>refresh</l7:ArgumentName>
                            <l7:ArgumentType>string</l7:ArgumentType>
                            <l7:GuiLabel>Refresh Cache? (true|false) (optional): </l7:GuiLabel>
                            <l7:GuiPrompt>true</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>2</l7:Ordinal>
                            <l7:ArgumentName>cacheAge</l7:ArgumentName>
                            <l7:ArgumentType>string</l7:ArgumentType>
                            <l7:GuiLabel>Cache Age (optional): </l7:GuiLabel>
                            <l7:GuiPrompt>true</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                    </l7:EncapsulatedArguments>
                    <l7:EncapsulatedResults>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>error.msg</l7:ResultName>
                            <l7:ResultType>string</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>securePasswords.sorted</l7:ResultName>
                            <l7:ResultType>message</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                    </l7:EncapsulatedResults>
                    <l7:Properties>
                        <l7:Property key="allowTracing">
                            <l7:StringValue>false</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="description">
                            <l7:StringValue>Assertion to call restman and generate a sorted list of secure passwords on the Gateway</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="paletteFolder">
                            <l7:StringValue>internalAssertions</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="paletteIconResourceName">
                            <l7:StringValue>Refresh16.gif</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="passMetricsToParent">
                            <l7:StringValue>false</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="policyGuid">
                            <l7:StringValue>18f3eb02-e82b-42a4-843a-276dfb2b0bfe</l7:StringValue>
                        </l7:Property>
                    </l7:Properties>
                </l7:EncapsulatedAssertion>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Utility: List Email Listeners</l7:Name>
            <l7:Id>c4706d99077459bed7ca5ef6c9e80382</l7:Id>
            <l7:Type>ENCAPSULATED_ASSERTION</l7:Type>
            <l7:TimeStamp>2022-04-29T11:42:05.313-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:EncapsulatedAssertion id="c4706d99077459bed7ca5ef6c9e80382" version="0">
                    <l7:Name>Utility: List Email Listeners</l7:Name>
                    <l7:Guid>33877201-e5e7-4d81-a8d2-34c1250204ec</l7:Guid>
                    <l7:PolicyReference id="c4706d99077459bed7ca5ef6c9e8029f" resourceUri="http://ns.l7tech.com/2010/04/gateway-management/policies"/>
                    <l7:EncapsulatedArguments>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>1</l7:Ordinal>
                            <l7:ArgumentName>refresh</l7:ArgumentName>
                            <l7:ArgumentType>string</l7:ArgumentType>
                            <l7:GuiLabel>Refresh Cache? (true|false) (optional): </l7:GuiLabel>
                            <l7:GuiPrompt>true</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>2</l7:Ordinal>
                            <l7:ArgumentName>cacheAge</l7:ArgumentName>
                            <l7:ArgumentType>string</l7:ArgumentType>
                            <l7:GuiLabel>Cache Age (optional): </l7:GuiLabel>
                            <l7:GuiPrompt>true</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                    </l7:EncapsulatedArguments>
                    <l7:EncapsulatedResults>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>emailListeners.sorted</l7:ResultName>
                            <l7:ResultType>message</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>error.msg</l7:ResultName>
                            <l7:ResultType>string</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                    </l7:EncapsulatedResults>
                    <l7:Properties>
                        <l7:Property key="allowTracing">
                            <l7:StringValue>false</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="description">
                            <l7:StringValue>Assertion to call restman and generate a sorted list of email listeners on the Gateway</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="paletteFolder">
                            <l7:StringValue>internalAssertions</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="paletteIconResourceName">
                            <l7:StringValue>Refresh16.gif</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="passMetricsToParent">
                            <l7:StringValue>false</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="policyGuid">
                            <l7:StringValue>29e9d372-9141-4543-b5ac-873454847d38</l7:StringValue>
                        </l7:Property>
                    </l7:Properties>
                </l7:EncapsulatedAssertion>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Utility: List HTTP Configurations</l7:Name>
            <l7:Id>c4706d99077459bed7ca5ef6c9e80e7c</l7:Id>
            <l7:Type>ENCAPSULATED_ASSERTION</l7:Type>
            <l7:TimeStamp>2022-04-29T11:42:05.313-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:EncapsulatedAssertion id="c4706d99077459bed7ca5ef6c9e80e7c" version="0">
                    <l7:Name>Utility: List HTTP Configurations</l7:Name>
                    <l7:Guid>8ad8d013-cb3d-4ab1-b92d-8ad943148b5f</l7:Guid>
                    <l7:PolicyReference id="c4706d99077459bed7ca5ef6c9e80d57" resourceUri="http://ns.l7tech.com/2010/04/gateway-management/policies"/>
                    <l7:EncapsulatedArguments>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>1</l7:Ordinal>
                            <l7:ArgumentName>refresh</l7:ArgumentName>
                            <l7:ArgumentType>string</l7:ArgumentType>
                            <l7:GuiLabel>Refresh Cache? (true|false) (optional): </l7:GuiLabel>
                            <l7:GuiPrompt>true</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>2</l7:Ordinal>
                            <l7:ArgumentName>cacheAge</l7:ArgumentName>
                            <l7:ArgumentType>string</l7:ArgumentType>
                            <l7:GuiLabel>Cache Age (optional): </l7:GuiLabel>
                            <l7:GuiPrompt>true</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                    </l7:EncapsulatedArguments>
                    <l7:EncapsulatedResults>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>error.msg</l7:ResultName>
                            <l7:ResultType>string</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>httpConfigurations.sorted</l7:ResultName>
                            <l7:ResultType>message</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                    </l7:EncapsulatedResults>
                    <l7:Properties>
                        <l7:Property key="allowTracing">
                            <l7:StringValue>false</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="description">
                            <l7:StringValue>Assertion to call restman and generate a sorted list of HTTP configurations on the Gateway</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="paletteFolder">
                            <l7:StringValue>internalAssertions</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="paletteIconResourceName">
                            <l7:StringValue>Refresh16.gif</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="passMetricsToParent">
                            <l7:StringValue>false</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="policyGuid">
                            <l7:StringValue>fbf889bf-cb0b-4067-ac18-4b0ff6d5e6c1</l7:StringValue>
                        </l7:Property>
                    </l7:Properties>
                </l7:EncapsulatedAssertion>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Utility: List Listen Ports</l7:Name>
            <l7:Id>3c21f93d84b26244a446414e97759281</l7:Id>
            <l7:Type>ENCAPSULATED_ASSERTION</l7:Type>
            <l7:TimeStamp>2022-04-29T11:42:05.313-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:EncapsulatedAssertion id="3c21f93d84b26244a446414e97759281" version="0">
                    <l7:Name>Utility: List Listen Ports</l7:Name>
                    <l7:Guid>9bee9837-82a1-4aab-99f4-08b664773ad7</l7:Guid>
                    <l7:PolicyReference id="3c21f93d84b26244a446414e9775919d" resourceUri="http://ns.l7tech.com/2010/04/gateway-management/policies"/>
                    <l7:EncapsulatedArguments>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>1</l7:Ordinal>
                            <l7:ArgumentName>refresh</l7:ArgumentName>
                            <l7:ArgumentType>string</l7:ArgumentType>
                            <l7:GuiLabel>Refresh Cache? (true|false) (optional): </l7:GuiLabel>
                            <l7:GuiPrompt>true</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>2</l7:Ordinal>
                            <l7:ArgumentName>cacheAge</l7:ArgumentName>
                            <l7:ArgumentType>string</l7:ArgumentType>
                            <l7:GuiLabel>Cache Age (optional): </l7:GuiLabel>
                            <l7:GuiPrompt>true</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                    </l7:EncapsulatedArguments>
                    <l7:EncapsulatedResults>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>error.msg</l7:ResultName>
                            <l7:ResultType>string</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>listenPorts.sorted</l7:ResultName>
                            <l7:ResultType>message</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                    </l7:EncapsulatedResults>
                    <l7:Properties>
                        <l7:Property key="allowTracing">
                            <l7:StringValue>false</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="description">
                            <l7:StringValue>Assertion to call restman and generate a sorted list of listen ports on the Gateway</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="paletteFolder">
                            <l7:StringValue>internalAssertions</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="paletteIconResourceName">
                            <l7:StringValue>Refresh16.gif</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="passMetricsToParent">
                            <l7:StringValue>false</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="policyGuid">
                            <l7:StringValue>d076c049-b5b3-4990-aad3-d9c35c3e17ef</l7:StringValue>
                        </l7:Property>
                    </l7:Properties>
                </l7:EncapsulatedAssertion>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Utility: List SiteMinder Configurations</l7:Name>
            <l7:Id>c4706d99077459bed7ca5ef6c9e6d213</l7:Id>
            <l7:Type>ENCAPSULATED_ASSERTION</l7:Type>
            <l7:TimeStamp>2022-04-29T11:42:05.314-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:EncapsulatedAssertion id="c4706d99077459bed7ca5ef6c9e6d213" version="0">
                    <l7:Name>Utility: List SiteMinder Configurations</l7:Name>
                    <l7:Guid>779a8f46-fcef-4739-b6c7-95eea2a160ff</l7:Guid>
                    <l7:PolicyReference id="c4706d99077459bed7ca5ef6c9e688cb" resourceUri="http://ns.l7tech.com/2010/04/gateway-management/policies"/>
                    <l7:EncapsulatedArguments>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>1</l7:Ordinal>
                            <l7:ArgumentName>refresh</l7:ArgumentName>
                            <l7:ArgumentType>string</l7:ArgumentType>
                            <l7:GuiLabel>Refresh Cache? (true|false) (optional): </l7:GuiLabel>
                            <l7:GuiPrompt>true</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>2</l7:Ordinal>
                            <l7:ArgumentName>cacheAge</l7:ArgumentName>
                            <l7:ArgumentType>string</l7:ArgumentType>
                            <l7:GuiLabel>Cache Age (optional): </l7:GuiLabel>
                            <l7:GuiPrompt>true</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                    </l7:EncapsulatedArguments>
                    <l7:EncapsulatedResults>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>error.msg</l7:ResultName>
                            <l7:ResultType>string</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>siteminderConfigurations.sorted</l7:ResultName>
                            <l7:ResultType>message</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                    </l7:EncapsulatedResults>
                    <l7:Properties>
                        <l7:Property key="allowTracing">
                            <l7:StringValue>false</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="description">
                            <l7:StringValue>Assertion to call restman and generate a sorted list of siteminder configurations on the Gateway</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="paletteFolder">
                            <l7:StringValue>internalAssertions</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="paletteIconResourceName">
                            <l7:StringValue>Refresh16.gif</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="passMetricsToParent">
                            <l7:StringValue>false</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="policyGuid">
                            <l7:StringValue>4551eaad-90f5-467f-ba1d-c134ab0d3096</l7:StringValue>
                        </l7:Property>
                    </l7:Properties>
                </l7:EncapsulatedAssertion>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Utility: List Trusted Certificates</l7:Name>
            <l7:Id>d12aa7875d7217ab6c41e7d7acf69a23</l7:Id>
            <l7:Type>ENCAPSULATED_ASSERTION</l7:Type>
            <l7:TimeStamp>2022-04-29T11:42:05.314-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:EncapsulatedAssertion id="d12aa7875d7217ab6c41e7d7acf69a23" version="0">
                    <l7:Name>Utility: List Trusted Certificates</l7:Name>
                    <l7:Guid>1feebe6b-c754-4bdc-834b-c6f3065d0216</l7:Guid>
                    <l7:PolicyReference id="d12aa7875d7217ab6c41e7d7acf6992e" resourceUri="http://ns.l7tech.com/2010/04/gateway-management/policies"/>
                    <l7:EncapsulatedArguments>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>1</l7:Ordinal>
                            <l7:ArgumentName>refresh</l7:ArgumentName>
                            <l7:ArgumentType>string</l7:ArgumentType>
                            <l7:GuiLabel>Refresh Cache? (true|false) (optional): </l7:GuiLabel>
                            <l7:GuiPrompt>true</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>2</l7:Ordinal>
                            <l7:ArgumentName>cacheAge</l7:ArgumentName>
                            <l7:ArgumentType>string</l7:ArgumentType>
                            <l7:GuiLabel>Cache Age (optional): </l7:GuiLabel>
                            <l7:GuiPrompt>true</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                    </l7:EncapsulatedArguments>
                    <l7:EncapsulatedResults>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>error.msg</l7:ResultName>
                            <l7:ResultType>string</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>trustedCertificates.sorted</l7:ResultName>
                            <l7:ResultType>message</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                    </l7:EncapsulatedResults>
                    <l7:Properties>
                        <l7:Property key="allowTracing">
                            <l7:StringValue>false</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="description">
                            <l7:StringValue>Assertion to call restman and generate a sorted list of trusted certificates on the Gateway</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="paletteFolder">
                            <l7:StringValue>internalAssertions</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="paletteIconResourceName">
                            <l7:StringValue>Refresh16.gif</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="passMetricsToParent">
                            <l7:StringValue>false</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="policyGuid">
                            <l7:StringValue>339953eb-58b5-451e-a733-c4e01ed39dee</l7:StringValue>
                        </l7:Property>
                    </l7:Properties>
                </l7:EncapsulatedAssertion>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Utility: List Users</l7:Name>
            <l7:Id>c4706d99077459bed7ca5ef6c9e6e8a7</l7:Id>
            <l7:Type>ENCAPSULATED_ASSERTION</l7:Type>
            <l7:TimeStamp>2022-04-29T11:42:05.314-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:EncapsulatedAssertion id="c4706d99077459bed7ca5ef6c9e6e8a7" version="0">
                    <l7:Name>Utility: List Users</l7:Name>
                    <l7:Guid>005d518f-604e-4c02-b889-85c2607e46cc</l7:Guid>
                    <l7:PolicyReference id="c4706d99077459bed7ca5ef6c9e6e077" resourceUri="http://ns.l7tech.com/2010/04/gateway-management/policies"/>
                    <l7:EncapsulatedArguments>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>1</l7:Ordinal>
                            <l7:ArgumentName>identityProviderIds</l7:ArgumentName>
                            <l7:ArgumentType>string</l7:ArgumentType>
                            <l7:GuiLabel>Identity Provider IDs (comma separated, optional): </l7:GuiLabel>
                            <l7:GuiPrompt>true</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>2</l7:Ordinal>
                            <l7:ArgumentName>refresh</l7:ArgumentName>
                            <l7:ArgumentType>string</l7:ArgumentType>
                            <l7:GuiLabel>Refresh Cache? (true|false) (optional): </l7:GuiLabel>
                            <l7:GuiPrompt>true</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>3</l7:Ordinal>
                            <l7:ArgumentName>cacheAge</l7:ArgumentName>
                            <l7:ArgumentType>string</l7:ArgumentType>
                            <l7:GuiLabel>Cache Age (optional): </l7:GuiLabel>
                            <l7:GuiPrompt>true</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                    </l7:EncapsulatedArguments>
                    <l7:EncapsulatedResults>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>error.msg</l7:ResultName>
                            <l7:ResultType>string</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>users.sorted</l7:ResultName>
                            <l7:ResultType>message</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                    </l7:EncapsulatedResults>
                    <l7:Properties>
                        <l7:Property key="allowTracing">
                            <l7:StringValue>false</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="description">
                            <l7:StringValue>Assertion to call restman and generate a sorted list of users in the Internal Identity Provider on the Gateway</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="paletteFolder">
                            <l7:StringValue>internalAssertions</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="paletteIconResourceName">
                            <l7:StringValue>Refresh16.gif</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="passMetricsToParent">
                            <l7:StringValue>false</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="policyGuid">
                            <l7:StringValue>57909023-fab7-453a-80dd-1c3354e7f942</l7:StringValue>
                        </l7:Property>
                    </l7:Properties>
                </l7:EncapsulatedAssertion>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>API Gateway Dependency Analyzer</l7:Name>
            <l7:Id>7215d076e3f7201974e2be3edf13ee8c</l7:Id>
            <l7:Type>SERVICE</l7:Type>
            <l7:TimeStamp>2022-04-29T11:42:05.461-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Service id="7215d076e3f7201974e2be3edf13ee8c" version="2">
                    <l7:ServiceDetail folderId="7215d076e3f7201974e2be3edf13f52e" id="7215d076e3f7201974e2be3edf13ee8c" version="2">
                        <l7:Name>API Gateway Dependency Analyzer</l7:Name>
                        <l7:Enabled>true</l7:Enabled>
                        <l7:ServiceMappings>
                            <l7:HttpMapping>
                                <l7:UrlPattern>/apigw/dependencyAnalyzer</l7:UrlPattern>
                                <l7:Verbs>
                                    <l7:Verb>GET</l7:Verb>
                                    <l7:Verb>POST</l7:Verb>
                                    <l7:Verb>PUT</l7:Verb>
                                    <l7:Verb>DELETE</l7:Verb>
                                </l7:Verbs>
                            </l7:HttpMapping>
                        </l7:ServiceMappings>
                        <l7:Properties>
                            <l7:Property key="internal">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                            <l7:Property key="policyRevision">
                                <l7:LongValue>126</l7:LongValue>
                            </l7:Property>
                            <l7:Property key="soap">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                            <l7:Property key="tracingEnabled">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                            <l7:Property key="wssProcessingEnabled">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                        </l7:Properties>
                    </l7:ServiceDetail>
                    <l7:Resources>
                        <l7:ResourceSet tag="policy">
                            <l7:Resource type="policy" version="125">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**************************************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Web interface to determine what depends on something"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** WARNING: Most dependencies have been accounted for, but some are probably still missing."/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Caches results for two hours. Check the &amp;quot;Refresh cache&amp;quot; box on the form to pull fresh data from Gateway"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Caching duration is set by ${cacheAge} in the Configuration block"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v1.0.0 - Jay MacDonald - 20201107 - Initial Version"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v1.0.1 - Jay MacDonald - 20211102 - Added JWS encoding to Private Key searches and updated XPath for newer"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**                                                     List Private Keys encas"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v1.0.2 - Jay MacDonald - 20220214 - Fixed Trusted Certs in policy issue and added TlsTrustedCertGoids to the dependency search in policies"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v1.0.3 - Jay MacDonald - 20220315 - Added finding dependencies to the default private key in policies"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v1.0.4 - Jay MacDonald - 20220425 - Added stylesheet and Gateway Management Utilities Cacher service, minor bug fixes"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**************************************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:AuditAssertion/&gt;
        &lt;L7p:Encapsulated&gt;
            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="4bd10104-a43c-4ecf-ae4d-b95e312cad4b"/&gt;
            &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Form and Session Authentication"/&gt;
            &lt;L7p:Parameters mapValue="included"&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="sessionTTL"/&gt;
                    &lt;L7p:value stringValue="1800"/&gt;
                &lt;/L7p:entry&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="verifyAdmin"/&gt;
                    &lt;L7p:value stringValue="true"/&gt;
                &lt;/L7p:entry&gt;
            &lt;/L7p:Parameters&gt;
        &lt;/L7p:Encapsulated&gt;
        &lt;L7p:Encapsulated&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// v1.0.4"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="43cbc673-f658-4e98-882d-111e752794b1"/&gt;
            &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Set Web Page Wrappers"/&gt;
            &lt;L7p:Parameters mapValue="included"&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="utility.name"/&gt;
                    &lt;L7p:value stringValue="API Gateway Dependency Analyzer"/&gt;
                &lt;/L7p:entry&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="utility.version"/&gt;
                    &lt;L7p:value stringValue="1.0.4"/&gt;
                &lt;/L7p:entry&gt;
            &lt;/L7p:Parameters&gt;
        &lt;/L7p:Encapsulated&gt;
        &lt;wsp:All wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="VW5rbm93biBlcnJvciBmb3VuZA=="/&gt;
                    &lt;L7p:VariableToSet stringValue="error.message"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="NTAw"/&gt;
                    &lt;L7p:VariableToSet stringValue="error.status"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:CustomizeErrorResponse&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// text/html"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Content stringValueReference="inline"&gt;&lt;![CDATA[${html.top}

  &lt;h1&gt;Error&lt;/h1&gt;

  &lt;p&gt;${error.message}&lt;/p&gt;

${html.bottom}]]&gt;&lt;/L7p:Content&gt;
                    &lt;L7p:ContentType stringValue="text/html; charset=UTF-8"/&gt;
                    &lt;L7p:ExtraHeaders nameValuePairArray="included"/&gt;
                    &lt;L7p:HttpStatus stringValue="${error.status}"/&gt;
                &lt;/L7p:CustomizeErrorResponse&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Configure error response"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// List of object types we recognize"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:Base64Expression stringValue="Q2Fzc2FuZHJhIENvbm5lY3Rpb24sQ2x1c3RlciBQcm9wZXJ0eSxFbmNhcHN1bGF0ZWQgQXNzZXJ0aW9uLEdyb3VwLElkZW50aXR5IFByb3ZpZGVyLEpEQkMgQ29ubmVjdGlvbixKTVMgRGVzdGluYXRpb24sUG9saWN5LFByaXZhdGUgS2V5LFNlY3VyZSBQYXNzd29yZCxTZXJ2aWNlLFNpdGVNaW5kZXIgQ29uZmlndXJhdGlvbixUcnVzdGVkIENlcnRpZmljYXRlLFVzZXI="/&gt;
                &lt;L7p:VariableToSet stringValue="objectTypes"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Set the default object type in case it was not passed as a parameter"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:Base64Expression stringValue="UG9saWN5"/&gt;
                &lt;L7p:VariableToSet stringValue="objectType.default"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// 2 hours"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:Base64Expression stringValue="NzIwMA=="/&gt;
                &lt;L7p:VariableToSet stringValue="cacheAge"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Configuration"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:All&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${loggedIn}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="boolean"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:RightValue stringValue="true"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// INFO"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; User authenticated: ${username}"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtyZXF1ZXN0Lmh0dHAucGFyYW1ldGVycy5vYmplY3RUeXBlfQ=="/&gt;
                    &lt;L7p:VariableToSet stringValue="objectType"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${objectType}"/&gt;
                        &lt;L7p:Expression2 stringValue=""/&gt;
                        &lt;L7p:Negate booleanValue="true"/&gt;
                        &lt;L7p:Operator operator="EMPTY"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:Negated booleanValue="true"/&gt;
                                &lt;L7p:Operator operator="EMPTY"/&gt;
                                &lt;L7p:RightValue stringValue=""/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="JHtvYmplY3RUeXBlLmRlZmF1bHR9"/&gt;
                        &lt;L7p:VariableToSet stringValue="objectType"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Default objectType is ${objectType.default}"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:Split&gt;
                        &lt;L7p:InputVariable stringValue="objectTypes"/&gt;
                        &lt;L7p:OutputVariable stringValue="objectTypes"/&gt;
                    &lt;/L7p:Split&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:Expression1 stringValue="${objectTypes}"/&gt;
                            &lt;L7p:Expression2 stringValue="${objectType}"/&gt;
                            &lt;L7p:MultivaluedComparison multivaluedComparison="ANY"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:RightValue stringValue="${objectType}"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;wsp:All wsp:Usage="Required"&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="VW5rbm93biBvYmplY3QgdHlwZTogJHtvYmplY3RUeXBlfTwvcD4NCg0KPHA+PGEgaHJlZj0iJHtyZXF1ZXN0LnVybC5wYXRofSI+Q29udGludWU8L2E+"/&gt;
                                &lt;L7p:VariableToSet stringValue="error.message"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="NDAw"/&gt;
                                &lt;L7p:VariableToSet stringValue="error.status"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:FalseAssertion/&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Fail"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:All&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Verify the submitted objectType is legitimate"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="PHNlbGVjdCBuYW1lPSJvYmplY3RUeXBlIiBvbmNoYW5nZT0ndGhpcy5mb3JtLnN1Ym1pdCgpJz4="/&gt;
                        &lt;L7p:VariableToSet stringValue="objectType.select"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:ForEachLoop L7p:Usage="Required"
                        loopVariable="objectTypes" variablePrefix="objectType"&gt;
                        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                            &lt;wsp:All wsp:Usage="Required"&gt;
                                &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:Expression1 stringValue="${objectType}"/&gt;
                                    &lt;L7p:Expression2 stringValue="${objectType.current}"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:RightValue stringValue="${objectType.current}"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt;
                                &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="JHtvYmplY3RUeXBlLnNlbGVjdH08b3B0aW9uIHNlbGVjdGVkPiR7b2JqZWN0VHlwZS5jdXJyZW50fTwvb3B0aW9uPg=="/&gt;
                                    &lt;L7p:VariableToSet stringValue="objectType.select"/&gt;
                                &lt;/L7p:SetVariable&gt;
                                &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// This is the selected one"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt;
                            &lt;/wsp:All&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="JHtvYmplY3RUeXBlLnNlbGVjdH08b3B0aW9uPiR7b2JqZWN0VHlwZS5jdXJyZW50fTwvb3B0aW9uPg=="/&gt;
                                &lt;L7p:VariableToSet stringValue="objectType.select"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Append each objectType, setting selected when it is the current one"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:OneOrMore&gt;
                    &lt;/L7p:ForEachLoop&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="JHtvYmplY3RUeXBlLnNlbGVjdH08L3NlbGVjdD4="/&gt;
                        &lt;L7p:VariableToSet stringValue="objectType.select"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Build ${objectType.select} HTML element"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// INFO"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; Object type = ${objectType}"/&gt;
                    &lt;L7p:Level stringValue="FINE"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtyZXF1ZXN0Lmh0dHAucGFyYW1ldGVyLmlkfQ=="/&gt;
                    &lt;L7p:VariableToSet stringValue="id"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// INFO"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; Id = ${id}"/&gt;
                    &lt;L7p:Level stringValue="FINE"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue=""/&gt;
                    &lt;L7p:VariableToSet stringValue="htmlContent"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue=""/&gt;
                    &lt;L7p:VariableToSet stringValue="dependers.html"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// FINE"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="=================== Get Policy XML, list of policies and list of services ======"/&gt;
                    &lt;L7p:Level stringValue="FINE"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:Encapsulated&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Retrieve all of the policy XML for searching references"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="420909da-0e72-4996-a6ed-cf3c21b8bc59"/&gt;
                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Get All Policy XML"/&gt;
                    &lt;L7p:Parameters mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="cacheAge"/&gt;
                            &lt;L7p:value stringValue="${cacheAge}"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="refresh"/&gt;
                            &lt;L7p:value stringValue="${request.http.parameter.refresh}"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Parameters&gt;
                &lt;/L7p:Encapsulated&gt;
                &lt;L7p:Encapsulated&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Need this to get folderpath, etc"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="da84740e-cee3-47d8-b6f7-0a9eb1fd9638"/&gt;
                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: List Policies"/&gt;
                    &lt;L7p:Parameters mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="cacheAge"/&gt;
                            &lt;L7p:value stringValue="${cacheAge}"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="folderId"/&gt;
                            &lt;L7p:value stringValue=""/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="policyList.refresh"/&gt;
                            &lt;L7p:value stringValue="${refresh}"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="refresh"/&gt;
                            &lt;L7p:value stringValue="${request.http.parameter.refresh}"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Parameters&gt;
                &lt;/L7p:Encapsulated&gt;
                &lt;L7p:Encapsulated&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Need this to get folderpath, etc"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="6fcf3e6c-eac9-4b2b-ac49-aa5fb2ff801f"/&gt;
                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: List Services"/&gt;
                    &lt;L7p:Parameters mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="cacheAge"/&gt;
                            &lt;L7p:value stringValue="${cacheAge}"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="folderId"/&gt;
                            &lt;L7p:value stringValue=""/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="refresh"/&gt;
                            &lt;L7p:value stringValue="${request.http.parameter.refresh}"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Parameters&gt;
                &lt;/L7p:Encapsulated&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// FINE"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="=================== Do stuff now! =============================================="/&gt;
                    &lt;L7p:Level stringValue="FINE"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${objectType}"/&gt;
                            &lt;L7p:Expression2 stringValue="Cassandra Connection"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="Cassandra Connection"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:AuditDetailAssertion&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:Detail stringValue="======&gt; Listing ${objectType} objects"/&gt;
                            &lt;L7p:Level stringValue="FINE"/&gt;
                        &lt;/L7p:AuditDetailAssertion&gt;
                        &lt;L7p:Encapsulated&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get list of objectTypes to display and search for references"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="b55454b6-3095-4e4d-92dc-3f10a6594fba"/&gt;
                            &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: List Cassandra Connections"/&gt;
                            &lt;L7p:Parameters mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="cacheAge"/&gt;
                                    &lt;L7p:value stringValue="${cacheAge}"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="refresh"/&gt;
                                    &lt;L7p:value stringValue="${request.http.parameter.refresh}"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Parameters&gt;
                        &lt;/L7p:Encapsulated&gt;
                        &lt;L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get list of ids"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:VariablePrefix stringValue="ids"/&gt;
                            &lt;L7p:XmlMsgSrc stringValue="cassandraConnections.sorted"/&gt;
                            &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                &lt;L7p:Expression stringValue="/CassandraConnections/CassandraConnection/@id"/&gt;
                                &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Namespaces&gt;
                                &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                            &lt;/L7p:XpathExpression&gt;
                        &lt;/L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:ForEachLoop L7p:Usage="Required"
                            loopVariable="ids.results" variablePrefix="id"&gt;
                            &lt;L7p:ResponseXpathAssertion&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get name of the object for display"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:VariablePrefix stringValue="name"/&gt;
                                &lt;L7p:XmlMsgSrc stringValue="cassandraConnections.sorted"/&gt;
                                &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/CassandraConnections/CassandraConnection[@id=$id.current]/Name"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                &lt;/L7p:XpathExpression&gt;
                            &lt;/L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:AuditDetailAssertion&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:Detail stringValue="=====&gt; Processing ${objectType}: ${name.result} (${id.current})"/&gt;
                                &lt;L7p:Level stringValue="FINE"/&gt;
                            &lt;/L7p:AuditDetailAssertion&gt;
                            &lt;L7p:Encapsulated&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// name.result"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="f6b19229-a705-4c48-bc78-3975564a1a9a"/&gt;
                                &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Escape HTML String"/&gt;
                                &lt;L7p:Parameters mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="escapedString"/&gt;
                                    &lt;L7p:value stringValue="${name.result}"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Parameters&gt;
                            &lt;/L7p:Encapsulated&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="JHtodG1sQ29udGVudH0NCjxhIGlkPSIke2lkLmN1cnJlbnR9Ii8+PGEgaHJlZj0iJHtyZXF1ZXN0LnVybC5wYXRofT9vYmplY3RUeXBlPSR7b2JqZWN0VHlwZX0maWQ9JHtpZC5jdXJyZW50fSMke2lkLmN1cnJlbnR9IiBvbkNsaWNrPSJzZXRSZWZyZXNoKHRoaXMpIj4ke2VzY2FwZWRTdHJpbmd9PC9hPjxici8+"/&gt;
                                &lt;L7p:VariableToSet stringValue="htmlContent"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:Expression1 stringValue="${id}"/&gt;
                                    &lt;L7p:Expression2 stringValue="${id.current}"/&gt;
                                    &lt;L7p:Negate booleanValue="true"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:RightValue stringValue="${id.current}"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt;
                                &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Detail stringValue="====&gt; ID matched, processing for dependencies =================================="/&gt;
                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// The final identifier string we'll use"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Base64Expression stringValue="JHtuYW1lLnJlc3VsdH0="/&gt;
                                    &lt;L7p:VariableToSet stringValue="referenceString"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Detail stringValue="===&gt; Searching objects for references to ${referenceString}"/&gt;
                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Detail stringValue="==&gt; Searching policy XML"/&gt;
                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Extract all policy objects that contain a CassandraQuery element"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:VariablePrefix stringValue="policies"/&gt;
                                    &lt;L7p:XmlMsgSrc stringValue="allPolicyXML"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/AllPolicyXML/PolicyXML[contains(.,'&amp;lt;L7p:CassandraQuery&gt;')]"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:ForEachLoop
                                    L7p:Usage="Required"
                                    loopVariable="policies.elements" variablePrefix="policy"&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Cast to message type for XPath"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:Base64Expression stringValue="JHtwb2xpY3kuY3VycmVudH0="/&gt;
                                    &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                                    &lt;L7p:DataType variableDataType="message"/&gt;
                                    &lt;L7p:VariableToSet stringValue="policyObject.xml"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Extract the policy XML from the policy object"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:VariablePrefix stringValue="policy.xml"/&gt;
                                    &lt;L7p:XmlMsgSrc stringValue="policyObject.xml"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/PolicyXML/text()"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;

                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;

                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Cast to message type for XPath"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:Base64Expression stringValue="JHtwb2xpY3kueG1sLnJlc3VsdH0="/&gt;
                                    &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                                    &lt;L7p:DataType variableDataType="message"/&gt;
                                    &lt;L7p:VariableToSet stringValue="policy.xml"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Check if the policy XML has a reference to this cassandra connection"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:VariablePrefix stringValue=""/&gt;

                                    &lt;L7p:XmlMsgSrc stringValue="policy.xml"/&gt;

                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;

                                    &lt;L7p:Expression stringValue="//L7p:CassandraQuery/L7p:ConnectionName[@stringValue=$referenceString]"/&gt;

                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="L7p"/&gt;

                                    &lt;L7p:value stringValue="http://www.layer7tech.com/ws/policy"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="wsp"/&gt;

                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/ws/2002/12/policy"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:Include&gt;

                                    &lt;L7p:PolicyGuid stringValue="8f33b165-bc16-4959-a524-aba67aff3cdf"/&gt;
                                    &lt;/L7p:Include&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:Base64Expression stringValue="JHtzb3VyY2VUeXBlLnJlc3VsdH06ICR7Zm9sZGVyUGF0aC5yZXN1bHR9JHtuYW1lLnJlc3VsdH0="/&gt;

                                    &lt;L7p:VariableToSet stringValue="depender"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:ManipulateMultiValuedVariable&gt;

                                    &lt;L7p:SourceVariableName stringValue="depender"/&gt;

                                    &lt;L7p:TargetVariableName stringValue="dependers.list"/&gt;
                                    &lt;/L7p:ManipulateMultiValuedVariable&gt;
                                    &lt;L7p:assertionComment&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Search policy XML for CassandraQuery element matching our reference"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:TrueAssertion/&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Search policy XML for CassandraQuery element matching our reference, never fail"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cycle through each policy that has an &amp;lt;L7p:CassandraQuery&gt; element and check if it is our cassandra connection"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/L7p:ForEachLoop&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Search for references in policy XML"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:TrueAssertion/&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Search for references in policy XML, never fail"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${dependers.list.length}"/&gt;
                                    &lt;L7p:Expression2 stringValue="1"/&gt;
                                    &lt;L7p:Operator operator="GE"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;

                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="GE"/&gt;
                                    &lt;L7p:RightValue stringValue="1"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                    &lt;/L7p:ComparisonAssertion&gt;
                                    &lt;L7p:ForEachLoop
                                    L7p:Usage="Required"
                                    loopVariable="dependers.list" variablePrefix="depender"&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:Base64Expression stringValue="JHtkZXBlbmRlcnMuaHRtbH0NCiAgPGxpPiR7ZGVwZW5kZXIuY3VycmVudH08L2xpPg=="/&gt;
                                    &lt;L7p:VariableToSet stringValue="dependers.html"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;/L7p:ForEachLoop&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="JHtodG1sQ29udGVudH0NCg0KPHA+VGhlIGZvbGxvd2luZyBvYmplY3RzIHJlZmVyZW5jZSB0aGlzIGNhc3NhbmRyYSBjb25uZWN0aW9uOjwvcD4NCjx1bD4ke2RlcGVuZGVycy5odG1sfTwvdWw+"/&gt;
                                    &lt;L7p:VariableToSet stringValue="htmlContent"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${dependers.list} has content"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="JHtodG1sQ29udGVudH0NCjxwPk5vdGhpbmcgd2FzIGZvdW5kIHRoYXQgcmVmZXJlbmNlcyB0aGlzIGNhc3NhbmRyYSBjb25uZWN0aW9uPC9wPg=="/&gt;
                                    &lt;L7p:VariableToSet stringValue="htmlContent"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Append ${dependers.html} to ${htmlContent} if ${dependers.list} has any entries"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${id} matches so retrieve dependers"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                &lt;/wsp:All&gt;
                                &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Do reverse dependency search if id matches"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt;
                            &lt;/wsp:OneOrMore&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cycle through each object to add to display and check if search must be run"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/L7p:ForEachLoop&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${objectType} == &amp;quot;Cassandra Connection&amp;quot;"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${objectType}"/&gt;
                            &lt;L7p:Expression2 stringValue="Cluster Property"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="Cluster Property"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:AuditDetailAssertion&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:Detail stringValue="======&gt; Listing ${objectType} objects"/&gt;
                            &lt;L7p:Level stringValue="FINE"/&gt;
                        &lt;/L7p:AuditDetailAssertion&gt;
                        &lt;L7p:Encapsulated&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get list of objectTypes to display and search for references"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="c8e30576-c290-4bd0-b63d-1eb3df866479"/&gt;
                            &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: List Cluster Properties"/&gt;
                            &lt;L7p:Parameters mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="cacheAge"/&gt;
                                    &lt;L7p:value stringValue="${cacheAge}"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="refresh"/&gt;
                                    &lt;L7p:value stringValue="${request.http.parameter.refresh}"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Parameters&gt;
                        &lt;/L7p:Encapsulated&gt;
                        &lt;L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get list of ids"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:VariablePrefix stringValue="ids"/&gt;
                            &lt;L7p:XmlMsgSrc stringValue="clusterProperties.sorted"/&gt;
                            &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                &lt;L7p:Expression stringValue="/ClusterProperties/ClusterProperty/@id"/&gt;
                                &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Namespaces&gt;
                                &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                            &lt;/L7p:XpathExpression&gt;
                        &lt;/L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:ForEachLoop L7p:Usage="Required"
                            loopVariable="ids.results" variablePrefix="id"&gt;
                            &lt;L7p:ResponseXpathAssertion&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get name of the object for display"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:VariablePrefix stringValue="name"/&gt;
                                &lt;L7p:XmlMsgSrc stringValue="clusterProperties.sorted"/&gt;
                                &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/ClusterProperties/ClusterProperty[@id=$id.current]/Name"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                &lt;/L7p:XpathExpression&gt;
                            &lt;/L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:AuditDetailAssertion&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:Detail stringValue="=====&gt; Processing ${objectType}: ${name.result} (${id.current})"/&gt;
                                &lt;L7p:Level stringValue="FINE"/&gt;
                            &lt;/L7p:AuditDetailAssertion&gt;
                            &lt;L7p:Encapsulated&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// name.result"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="f6b19229-a705-4c48-bc78-3975564a1a9a"/&gt;
                                &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Escape HTML String"/&gt;
                                &lt;L7p:Parameters mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="escapedString"/&gt;
                                    &lt;L7p:value stringValue="${name.result}"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Parameters&gt;
                            &lt;/L7p:Encapsulated&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="JHtodG1sQ29udGVudH0NCjxhIGlkPSIke2lkLmN1cnJlbnR9Ii8+PGEgaHJlZj0iJHtyZXF1ZXN0LnVybC5wYXRofT9vYmplY3RUeXBlPSR7b2JqZWN0VHlwZX0maWQ9JHtpZC5jdXJyZW50fSMke2lkLmN1cnJlbnR9IiBvbkNsaWNrPSJzZXRSZWZyZXNoKHRoaXMpIj4ke2VzY2FwZWRTdHJpbmd9PC9hPjxici8+"/&gt;
                                &lt;L7p:VariableToSet stringValue="htmlContent"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:Expression1 stringValue="${id}"/&gt;
                                    &lt;L7p:Expression2 stringValue="${id.current}"/&gt;
                                    &lt;L7p:Negate booleanValue="true"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:RightValue stringValue="${id.current}"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt;
                                &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Detail stringValue="====&gt; ID matched, processing for dependencies =================================="/&gt;
                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="e2dhdGV3YXkuJHtuYW1lLnJlc3VsdH19"/&gt;
                                    &lt;L7p:VariableToSet stringValue="referenceString"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Prepend $ to the string we will search for"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Base64Expression stringValue="JCR7cmVmZXJlbmNlU3RyaW5nfQ=="/&gt;
                                    &lt;L7p:VariableToSet stringValue="referenceString"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Detail stringValue="===&gt; Searching objects for references to ${referenceString}"/&gt;
                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Detail stringValue="==&gt; Searching policy XML for non-encoded references"/&gt;
                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Check if this policy has a direct reference to the cluster property"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:VariablePrefix stringValue="policies"/&gt;
                                    &lt;L7p:XmlMsgSrc stringValue="allPolicyXML"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="//AllPolicyXML/PolicyXML[contains(.,$referenceString)]"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:ForEachLoop
                                    L7p:Usage="Required"
                                    loopVariable="policies.elements" variablePrefix="policy"&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Cast to message type for XPath"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:Base64Expression stringValue="JHtwb2xpY3kuY3VycmVudH0="/&gt;
                                    &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                                    &lt;L7p:DataType variableDataType="message"/&gt;
                                    &lt;L7p:VariableToSet stringValue="policyObject.xml"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:Include&gt;
                                    &lt;L7p:PolicyGuid stringValue="8f33b165-bc16-4959-a524-aba67aff3cdf"/&gt;
                                    &lt;/L7p:Include&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:Base64Expression stringValue="JHtzb3VyY2VUeXBlLnJlc3VsdH06ICR7Zm9sZGVyUGF0aC5yZXN1bHR9JHtuYW1lLnJlc3VsdH0gKGluIGRpcmVjdCByZWZlcmVuY2Up"/&gt;
                                    &lt;L7p:VariableToSet stringValue="depender"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:ManipulateMultiValuedVariable&gt;

                                    &lt;L7p:SourceVariableName stringValue="depender"/&gt;

                                    &lt;L7p:TargetVariableName stringValue="dependers.list"/&gt;
                                    &lt;/L7p:ManipulateMultiValuedVariable&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cycle through each policy that matched and append to ${dependers.list}"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/L7p:ForEachLoop&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Search for non-encoded references in policy XML"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:TrueAssertion/&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Search for non-encoded references in policy XML, never fail"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Detail stringValue="==&gt; Searching policy XML for encoded references"/&gt;
                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Extract all policy objects that contain Base64Expression or Base64ResponseBody elements"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:VariablePrefix stringValue="policies"/&gt;
                                    &lt;L7p:XmlMsgSrc stringValue="allPolicyXML"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="//AllPolicyXML/PolicyXML[(contains(.,'&amp;lt;L7p:Base64Expression ') or contains(.,'&amp;lt;L7p:Base64ResponseBody '))]"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:ForEachLoop
                                    L7p:Usage="Required"
                                    loopVariable="policies.elements" variablePrefix="policy"&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Cast to message type for XPath"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:Base64Expression stringValue="JHtwb2xpY3kuY3VycmVudH0="/&gt;
                                    &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                                    &lt;L7p:DataType variableDataType="message"/&gt;
                                    &lt;L7p:VariableToSet stringValue="policyObject.xml"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Extract the policy XML from the policy object"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:VariablePrefix stringValue="policy.xml"/&gt;
                                    &lt;L7p:XmlMsgSrc stringValue="policyObject.xml"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/PolicyXML/text()"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;

                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;

                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Cast to message type for XPath"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:Base64Expression stringValue="JHtwb2xpY3kueG1sLnJlc3VsdH0="/&gt;
                                    &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                                    &lt;L7p:DataType variableDataType="message"/&gt;
                                    &lt;L7p:VariableToSet stringValue="policy.xml"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Extract all of the (Base64Expression | Base64ResponseBody)/@stringValue instances for analysis"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:VariablePrefix stringValue="stringValue"/&gt;

                                    &lt;L7p:XmlMsgSrc stringValue="policy.xml"/&gt;

                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;

                                    &lt;L7p:Expression stringValue="(//L7p:Base64Expression | //L7p:Base64ResponseBody)/@stringValue"/&gt;

                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="s"/&gt;

                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="L7p"/&gt;

                                    &lt;L7p:value stringValue="http://www.layer7tech.com/ws/policy"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="wsp"/&gt;

                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/ws/2002/12/policy"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Reset in case we broke out of something earlier"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:Base64Expression stringValue="ZmFsc2U="/&gt;

                                    &lt;L7p:VariableToSet stringValue="stringValue.break"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:ForEachLoop
                                    L7p:Usage="Required"
                                    loopVariable="stringValue.results" variablePrefix="stringValue"&gt;
                                    &lt;L7p:EncodeDecode&gt;

                                    &lt;L7p:SourceVariableName stringValue="stringValue.current"/&gt;

                                    &lt;L7p:TargetDataType variableDataType="string"/&gt;

                                    &lt;L7p:TargetVariableName stringValue="stringValue.current"/&gt;

                                    &lt;L7p:TransformType transformType="BASE64_DECODE"/&gt;
                                    &lt;/L7p:EncodeDecode&gt;

                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;L7p:ComparisonAssertion&gt;

                                    &lt;L7p:Expression1 stringValue="${stringValue.current}"/&gt;

                                    &lt;L7p:Expression2 stringValue="${referenceString}"/&gt;

                                    &lt;L7p:Negate booleanValue="true"/&gt;

                                    &lt;L7p:Operator operator="CONTAINS"/&gt;

                                    &lt;L7p:Predicates predicates="included"&gt;

                                    &lt;L7p:item binary="included"&gt;

                                    &lt;L7p:Negated booleanValue="true"/&gt;

                                    &lt;L7p:Operator operator="CONTAINS"/&gt;

                                    &lt;L7p:RightValue stringValue="${referenceString}"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                    &lt;/L7p:ComparisonAssertion&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:Include&gt;

                                    &lt;L7p:PolicyGuid stringValue="8f33b165-bc16-4959-a524-aba67aff3cdf"/&gt;
                                    &lt;/L7p:Include&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:Base64Expression stringValue="JHtzb3VyY2VUeXBlLnJlc3VsdH06ICR7Zm9sZGVyUGF0aC5yZXN1bHR9JHtuYW1lLnJlc3VsdH0gKGluIEJhc2U2NCBlbmNvZGVkIGF0dHJpYnV0ZSk="/&gt;

                                    &lt;L7p:VariableToSet stringValue="depender"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:ManipulateMultiValuedVariable&gt;

                                    &lt;L7p:SourceVariableName stringValue="depender"/&gt;

                                    &lt;L7p:TargetVariableName stringValue="dependers.list"/&gt;
                                    &lt;/L7p:ManipulateMultiValuedVariable&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Don't need any more"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:Base64Expression stringValue="dHJ1ZQ=="/&gt;

                                    &lt;L7p:VariableToSet stringValue="stringValue.break"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:assertionComment&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Extract id and append to ${dependers.list}"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:assertionComment&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Check if ${stringValue.current} contains ${referenceString}"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;L7p:assertionComment&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Cycle through each base64 string and check for ${referenceString}"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/L7p:ForEachLoop&gt;
                                    &lt;L7p:assertionComment&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Extract Base64Expressions from policy and check for matches"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:TrueAssertion/&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Extract Base64Expressions from policy and check for matches, never fail"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cycle through each policy with Base64 content, extract base64 strings and analyse for ${referenceString}"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/L7p:ForEachLoop&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Search for encoded references in policy XML"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:TrueAssertion/&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Search for encoded references in policy XML, never fail"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${dependers.list.length}"/&gt;
                                    &lt;L7p:Expression2 stringValue="1"/&gt;
                                    &lt;L7p:Operator operator="GE"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;

                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="GE"/&gt;
                                    &lt;L7p:RightValue stringValue="1"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                    &lt;/L7p:ComparisonAssertion&gt;
                                    &lt;L7p:ForEachLoop
                                    L7p:Usage="Required"
                                    loopVariable="dependers.list" variablePrefix="depender"&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:Base64Expression stringValue="JHtkZXBlbmRlcnMuaHRtbH0NCiAgPGxpPiR7ZGVwZW5kZXIuY3VycmVudH08L2xpPg=="/&gt;
                                    &lt;L7p:VariableToSet stringValue="dependers.html"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;/L7p:ForEachLoop&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="JHtodG1sQ29udGVudH0NCg0KPHA+VGhlIGZvbGxvd2luZyBvYmplY3RzIHJlZmVyZW5jZSB0aGlzIGNsdXN0ZXIgcHJvcGVydHk6PC9wPg0KPHVsPiR7ZGVwZW5kZXJzLmh0bWx9PC91bD4="/&gt;
                                    &lt;L7p:VariableToSet stringValue="htmlContent"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${dependers.list} has content"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="JHtodG1sQ29udGVudH0NCjxwPk5vdGhpbmcgd2FzIGZvdW5kIHRoYXQgcmVmZXJlbmNlcyB0aGlzIGNsdXN0ZXIgcHJvcGVydHk8L3A+"/&gt;
                                    &lt;L7p:VariableToSet stringValue="htmlContent"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Append ${dependers.html} to ${htmlContent} if ${dependers.list} has any entries"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${id} matches so retrieve dependers"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                &lt;/wsp:All&gt;
                                &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Do reverse dependency search if id matches"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt;
                            &lt;/wsp:OneOrMore&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cycle through each object to add to display and check if search must be run"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/L7p:ForEachLoop&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${objectType} == &amp;quot;Cluster Property&amp;quot;"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${objectType}"/&gt;
                            &lt;L7p:Expression2 stringValue="Encapsulated Assertion"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="Encapsulated Assertion"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:AuditDetailAssertion&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:Detail stringValue="======&gt; Listing ${objectType} objects"/&gt;
                            &lt;L7p:Level stringValue="FINE"/&gt;
                        &lt;/L7p:AuditDetailAssertion&gt;
                        &lt;L7p:Encapsulated&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get list of objectTypes to display and search for references"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="8fc67f28-191e-4a4b-808b-299848593b53"/&gt;
                            &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: List Encapsulated Assertions"/&gt;
                            &lt;L7p:Parameters mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="cacheAge"/&gt;
                                    &lt;L7p:value stringValue="${cacheAge}"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="refresh"/&gt;
                                    &lt;L7p:value stringValue="${request.http.parameter.refresh}"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Parameters&gt;
                        &lt;/L7p:Encapsulated&gt;
                        &lt;L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Extract list of encapsulated assertion ids"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:VariablePrefix stringValue="ids"/&gt;
                            &lt;L7p:XmlMsgSrc stringValue="encapsulatedAssertions.sorted"/&gt;
                            &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                &lt;L7p:Expression stringValue="/EncapsulatedAssertions/EncapsulatedAssertion/@id"/&gt;
                                &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Namespaces&gt;
                                &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                            &lt;/L7p:XpathExpression&gt;
                        &lt;/L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:ForEachLoop L7p:Usage="Required"
                            loopVariable="ids.results" variablePrefix="id"&gt;
                            &lt;L7p:ResponseXpathAssertion&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get name of the object for display"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:VariablePrefix stringValue="name"/&gt;
                                &lt;L7p:XmlMsgSrc stringValue="encapsulatedAssertions.sorted"/&gt;
                                &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/EncapsulatedAssertions/EncapsulatedAssertion[@id=$id.current]/Name"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                &lt;/L7p:XpathExpression&gt;
                            &lt;/L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:AuditDetailAssertion&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:Detail stringValue="=====&gt; Processing ${objectType}: ${name.result} (${id.current})"/&gt;
                                &lt;L7p:Level stringValue="FINE"/&gt;
                            &lt;/L7p:AuditDetailAssertion&gt;
                            &lt;L7p:Encapsulated&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// name.result"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="f6b19229-a705-4c48-bc78-3975564a1a9a"/&gt;
                                &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Escape HTML String"/&gt;
                                &lt;L7p:Parameters mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="escapedString"/&gt;
                                    &lt;L7p:value stringValue="${name.result}"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Parameters&gt;
                            &lt;/L7p:Encapsulated&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="JHtodG1sQ29udGVudH0NCjxhIGlkPSIke2lkLmN1cnJlbnR9Ii8+PGEgaHJlZj0iJHtyZXF1ZXN0LnVybC5wYXRofT9vYmplY3RUeXBlPSR7b2JqZWN0VHlwZX0maWQ9JHtpZC5jdXJyZW50fSMke2lkLmN1cnJlbnR9IiBvbkNsaWNrPSJzZXRSZWZyZXNoKHRoaXMpIj4ke2VzY2FwZWRTdHJpbmd9PC9hPjxici8+"/&gt;
                                &lt;L7p:VariableToSet stringValue="htmlContent"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:Expression1 stringValue="${id}"/&gt;
                                    &lt;L7p:Expression2 stringValue="${id.current}"/&gt;
                                    &lt;L7p:Negate booleanValue="true"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:RightValue stringValue="${id.current}"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt;
                                &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Detail stringValue="====&gt; ID matched, processing for dependencies =================================="/&gt;
                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Extract GUID for encapsulated assertion"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:VariablePrefix stringValue="guid"/&gt;
                                    &lt;L7p:XmlMsgSrc stringValue="encapsulatedAssertions.sorted"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/EncapsulatedAssertions/EncapsulatedAssertion[@id=$id.current]/GUID"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="RW5jYXBzdWxhdGVkQXNzZXJ0aW9uQ29uZmlnR3VpZCBzdHJpbmdWYWx1ZT0iJHtndWlkLnJlc3VsdH0i"/&gt;
                                    &lt;L7p:VariableToSet stringValue="referenceString"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Detail stringValue="===&gt; Searching objects for references to ${referenceString}"/&gt;
                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Detail stringValue="==&gt; Searching policy XML"/&gt;
                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Extract policiies with reference to this encapsulated assertion"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:VariablePrefix stringValue="policies"/&gt;
                                    &lt;L7p:XmlMsgSrc stringValue="allPolicyXML"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="//AllPolicyXML/PolicyXML[contains(.,$referenceString)]"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:ForEachLoop
                                    L7p:Usage="Required"
                                    loopVariable="policies.elements" variablePrefix="policy"&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Cast to message type for XPath"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:Base64Expression stringValue="JHtwb2xpY3kuY3VycmVudH0="/&gt;
                                    &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                                    &lt;L7p:DataType variableDataType="message"/&gt;
                                    &lt;L7p:VariableToSet stringValue="policyObject.xml"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:Include&gt;
                                    &lt;L7p:PolicyGuid stringValue="8f33b165-bc16-4959-a524-aba67aff3cdf"/&gt;
                                    &lt;/L7p:Include&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:Base64Expression stringValue="JHtzb3VyY2VUeXBlLnJlc3VsdH06ICR7Zm9sZGVyUGF0aC5yZXN1bHR9JHtuYW1lLnJlc3VsdH0="/&gt;
                                    &lt;L7p:VariableToSet stringValue="depender"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:ManipulateMultiValuedVariable&gt;

                                    &lt;L7p:SourceVariableName stringValue="depender"/&gt;

                                    &lt;L7p:TargetVariableName stringValue="dependers.list"/&gt;
                                    &lt;/L7p:ManipulateMultiValuedVariable&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cycle through the policies, get folderpath and name and append to ${dependers.list}"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/L7p:ForEachLoop&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Search for references in policy XML"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:TrueAssertion/&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Search for references in policy XML, never fail"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${dependers.list.length}"/&gt;
                                    &lt;L7p:Expression2 stringValue="1"/&gt;
                                    &lt;L7p:Operator operator="GE"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;

                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="GE"/&gt;
                                    &lt;L7p:RightValue stringValue="1"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                    &lt;/L7p:ComparisonAssertion&gt;
                                    &lt;L7p:ForEachLoop
                                    L7p:Usage="Required"
                                    loopVariable="dependers.list" variablePrefix="depender"&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:Base64Expression stringValue="JHtkZXBlbmRlcnMuaHRtbH0NCiAgPGxpPiR7ZGVwZW5kZXIuY3VycmVudH08L2xpPg=="/&gt;
                                    &lt;L7p:VariableToSet stringValue="dependers.html"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;/L7p:ForEachLoop&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="JHtodG1sQ29udGVudH0NCg0KPHA+VGhlIGZvbGxvd2luZyBvYmplY3RzIHVzZSB0aGlzIGVuY2Fwc3VsYXRlZCBhc3NlcnRpb246PC9wPg0KPHVsPiR7ZGVwZW5kZXJzLmh0bWx9PC91bD4="/&gt;
                                    &lt;L7p:VariableToSet stringValue="htmlContent"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${dependers.list} has content"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="JHtodG1sQ29udGVudH0NCjxwPk5vdGhpbmcgd2FzIGZvdW5kIHRoYXQgdXNlcyB0aGlzIGVuY2Fwc3VsYXRlZCBhc3NlcnRpb248L3A+"/&gt;
                                    &lt;L7p:VariableToSet stringValue="htmlContent"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Append ${dependers.html} to ${htmlContent} if ${dependers.list} has any entries"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${id} matches so retrieve dependers"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                &lt;/wsp:All&gt;
                                &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Do reverse dependency search if id matches"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt;
                            &lt;/wsp:OneOrMore&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cycle through each object to add to display and check if search must be run"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/L7p:ForEachLoop&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${objectType} == &amp;quot;Encapsulated Assertion&amp;quot;"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${objectType}"/&gt;
                            &lt;L7p:Expression2 stringValue="Group"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="Group"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:AuditDetailAssertion&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:Detail stringValue="======&gt; Listing ${objectType} objects"/&gt;
                            &lt;L7p:Level stringValue="FINE"/&gt;
                        &lt;/L7p:AuditDetailAssertion&gt;
                        &lt;L7p:Encapsulated&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get list of objectTypes to display and search for references"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="ead32848-5ace-4468-95fe-50cb9d343d60"/&gt;
                            &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: List Groups"/&gt;
                            &lt;L7p:Parameters mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="cacheAge"/&gt;
                                    &lt;L7p:value stringValue="${cacheAge}"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="identityProviderIds"/&gt;
                                    &lt;L7p:value stringValue=""/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="refresh"/&gt;
                                    &lt;L7p:value stringValue="${request.http.parameter.refresh}"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Parameters&gt;
                        &lt;/L7p:Encapsulated&gt;
                        &lt;L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get list of ids"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:VariablePrefix stringValue="ids"/&gt;
                            &lt;L7p:XmlMsgSrc stringValue="groups.sorted"/&gt;
                            &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                &lt;L7p:Expression stringValue="/Groups/Group/@id"/&gt;
                                &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Namespaces&gt;
                                &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                            &lt;/L7p:XpathExpression&gt;
                        &lt;/L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:ForEachLoop L7p:Usage="Required"
                            loopVariable="ids.results" variablePrefix="id"&gt;
                            &lt;L7p:ResponseXpathAssertion&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get name of the object for display"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:VariablePrefix stringValue="name"/&gt;
                                &lt;L7p:XmlMsgSrc stringValue="groups.sorted"/&gt;
                                &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/Groups/Group[@id=$id.current]/Name"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                &lt;/L7p:XpathExpression&gt;
                            &lt;/L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:ResponseXpathAssertion&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get providerName of the object for display"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:VariablePrefix stringValue="providerName"/&gt;
                                &lt;L7p:XmlMsgSrc stringValue="groups.sorted"/&gt;
                                &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/Groups/Group[@id=$id.current]/@providerName"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                &lt;/L7p:XpathExpression&gt;
                            &lt;/L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:AuditDetailAssertion&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:Detail stringValue="=====&gt; Processing ${objectType}: ${login.result} (${id.current})"/&gt;
                                &lt;L7p:Level stringValue="FINE"/&gt;
                            &lt;/L7p:AuditDetailAssertion&gt;
                            &lt;L7p:Encapsulated&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${providerName.result}: ${name.result}"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="f6b19229-a705-4c48-bc78-3975564a1a9a"/&gt;
                                &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Escape HTML String"/&gt;
                                &lt;L7p:Parameters mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="escapedString"/&gt;
                                    &lt;L7p:value stringValue="${providerName.result} : ${name.result}"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Parameters&gt;
                            &lt;/L7p:Encapsulated&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="JHtodG1sQ29udGVudH0NCjxhIGlkPSIke2lkLmN1cnJlbnR9Ii8+PGEgaHJlZj0iJHtyZXF1ZXN0LnVybC5wYXRofT9vYmplY3RUeXBlPSR7b2JqZWN0VHlwZX0maWQ9JHtpZC5jdXJyZW50fSMke2lkLmN1cnJlbnR9IiBvbkNsaWNrPSJzZXRSZWZyZXNoKHRoaXMpIj4ke2VzY2FwZWRTdHJpbmd9PC9hPjxici8+"/&gt;
                                &lt;L7p:VariableToSet stringValue="htmlContent"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:Expression1 stringValue="${id}"/&gt;
                                    &lt;L7p:Expression2 stringValue="${id.current}"/&gt;
                                    &lt;L7p:Negate booleanValue="true"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:RightValue stringValue="${id.current}"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt;
                                &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Detail stringValue="====&gt; ID matched, processing for dependencies =================================="/&gt;
                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get providerId of the object for confirmation"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:VariablePrefix stringValue="providerId"/&gt;
                                    &lt;L7p:XmlMsgSrc stringValue="groups.sorted"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/Groups/Group[@id=$id.current]/@providerId"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// The final identifier string we'll use"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Base64Expression stringValue="PEw3cDpHcm91cElkIHN0cmluZ1ZhbHVlPSIke2lkLmN1cnJlbnR9Ii8+"/&gt;
                                    &lt;L7p:VariableToSet stringValue="referenceString"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Detail stringValue="===&gt; Searching objects for references to ${referenceString}"/&gt;
                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Detail stringValue="==&gt; Searching policy XML"/&gt;
                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Extract all policy objects that contain the reference string"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:VariablePrefix stringValue="policies"/&gt;
                                    &lt;L7p:XmlMsgSrc stringValue="allPolicyXML"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/AllPolicyXML/PolicyXML[contains(.,$referenceString)]"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:ForEachLoop
                                    L7p:Usage="Required"
                                    loopVariable="policies.elements" variablePrefix="policy"&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Cast to message type for XPath"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:Base64Expression stringValue="JHtwb2xpY3kuY3VycmVudH0="/&gt;
                                    &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                                    &lt;L7p:DataType variableDataType="message"/&gt;
                                    &lt;L7p:VariableToSet stringValue="policyObject.xml"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Extract the policy XML from the policy object"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:VariablePrefix stringValue="policy.xml"/&gt;
                                    &lt;L7p:XmlMsgSrc stringValue="policyObject.xml"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/PolicyXML/text()"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;

                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;

                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Cast to message type for XPath"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:Base64Expression stringValue="JHtwb2xpY3kueG1sLnJlc3VsdH0="/&gt;
                                    &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                                    &lt;L7p:DataType variableDataType="message"/&gt;
                                    &lt;L7p:VariableToSet stringValue="policy.xml"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Check if the policy XML has a reference to this group id"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:VariablePrefix stringValue=""/&gt;

                                    &lt;L7p:XmlMsgSrc stringValue="policy.xml"/&gt;

                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;

                                    &lt;L7p:Expression stringValue="//L7p:MemberOfGroup/L7p:IdentityProviderOid[@goidValue=$providerId.result]"/&gt;

                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="L7p"/&gt;

                                    &lt;L7p:value stringValue="http://www.layer7tech.com/ws/policy"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="wsp"/&gt;

                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/ws/2002/12/policy"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:Include&gt;

                                    &lt;L7p:PolicyGuid stringValue="8f33b165-bc16-4959-a524-aba67aff3cdf"/&gt;
                                    &lt;/L7p:Include&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:Base64Expression stringValue="JHtzb3VyY2VUeXBlLnJlc3VsdH06ICR7Zm9sZGVyUGF0aC5yZXN1bHR9JHtuYW1lLnJlc3VsdH0="/&gt;

                                    &lt;L7p:VariableToSet stringValue="depender"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:ManipulateMultiValuedVariable&gt;

                                    &lt;L7p:SourceVariableName stringValue="depender"/&gt;

                                    &lt;L7p:TargetVariableName stringValue="dependers.list"/&gt;
                                    &lt;/L7p:ManipulateMultiValuedVariable&gt;
                                    &lt;L7p:assertionComment&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Search policy XML for IdentityProviderOid element matching our reference"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:TrueAssertion/&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Search policy XML for IdentityProviderOid element matching our reference, never fail"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cycle through each policy that has our reference string and confirm the provider"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/L7p:ForEachLoop&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Search for references in policy XML"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:TrueAssertion/&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Search for references in policy XML, never fail"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${dependers.list.length}"/&gt;
                                    &lt;L7p:Expression2 stringValue="1"/&gt;
                                    &lt;L7p:Operator operator="GE"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;

                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="GE"/&gt;
                                    &lt;L7p:RightValue stringValue="1"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                    &lt;/L7p:ComparisonAssertion&gt;
                                    &lt;L7p:ForEachLoop
                                    L7p:Usage="Required"
                                    loopVariable="dependers.list" variablePrefix="depender"&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:Base64Expression stringValue="JHtkZXBlbmRlcnMuaHRtbH0NCiAgPGxpPiR7ZGVwZW5kZXIuY3VycmVudH08L2xpPg=="/&gt;
                                    &lt;L7p:VariableToSet stringValue="dependers.html"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;/L7p:ForEachLoop&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="JHtodG1sQ29udGVudH0NCg0KPHA+VGhlIGZvbGxvd2luZyBvYmplY3RzIHJlZmVyZW5jZSB0aGlzIGdyb3VwOjwvcD4NCjx1bD4ke2RlcGVuZGVycy5odG1sfTwvdWw+"/&gt;
                                    &lt;L7p:VariableToSet stringValue="htmlContent"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${dependers.list} has content"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="JHtodG1sQ29udGVudH0NCjxwPk5vdGhpbmcgd2FzIGZvdW5kIHRoYXQgcmVmZXJlbmNlcyB0aGlzIGdyb3VwPC9wPg=="/&gt;
                                    &lt;L7p:VariableToSet stringValue="htmlContent"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Append ${dependers.html} to ${htmlContent} if ${dependers.list} has any entries"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${id} matches so retrieve dependers"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                &lt;/wsp:All&gt;
                                &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Do reverse dependency search if id matches"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt;
                            &lt;/wsp:OneOrMore&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cycle through each object to add to display and check if search must be run"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/L7p:ForEachLoop&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${objectType} == &amp;quot;Group&amp;quot;"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${objectType}"/&gt;
                            &lt;L7p:Expression2 stringValue="Identity Provider"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="Identity Provider"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:AuditDetailAssertion&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:Detail stringValue="======&gt; Listing ${objectType} objects"/&gt;
                            &lt;L7p:Level stringValue="FINE"/&gt;
                        &lt;/L7p:AuditDetailAssertion&gt;
                        &lt;L7p:Encapsulated&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get list of objectTypes to display and search for references"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="1ab6158d-33ce-4fa6-a7d8-2b8dc8e31faf"/&gt;
                            &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: List Identity Providers"/&gt;
                            &lt;L7p:Parameters mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="cacheAge"/&gt;
                                    &lt;L7p:value stringValue="${cacheAge}"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="refresh"/&gt;
                                    &lt;L7p:value stringValue="${request.http.parameter.refresh}"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Parameters&gt;
                        &lt;/L7p:Encapsulated&gt;
                        &lt;L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get list of ids"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:VariablePrefix stringValue="ids"/&gt;
                            &lt;L7p:XmlMsgSrc stringValue="identityProviders.sorted"/&gt;
                            &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                &lt;L7p:Expression stringValue="/IdentityProviders/IdentityProvider/@id"/&gt;
                                &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Namespaces&gt;
                                &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                            &lt;/L7p:XpathExpression&gt;
                        &lt;/L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:ForEachLoop L7p:Usage="Required"
                            loopVariable="ids.results" variablePrefix="id"&gt;
                            &lt;L7p:ResponseXpathAssertion&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get name of the object for display"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:VariablePrefix stringValue="name"/&gt;
                                &lt;L7p:XmlMsgSrc stringValue="identityProviders.sorted"/&gt;
                                &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/IdentityProviders/IdentityProvider[@id=$id.current]/Name"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                &lt;/L7p:XpathExpression&gt;
                            &lt;/L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:ResponseXpathAssertion&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get type of the object for display"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:VariablePrefix stringValue="type"/&gt;
                                &lt;L7p:XmlMsgSrc stringValue="identityProviders.sorted"/&gt;
                                &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/IdentityProviders/IdentityProvider[@id=$id.current]/Type"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                &lt;/L7p:XpathExpression&gt;
                            &lt;/L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:AuditDetailAssertion&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:Detail stringValue="=====&gt; Processing ${objectType}: ${name.result} (${id.current})"/&gt;
                                &lt;L7p:Level stringValue="FINE"/&gt;
                            &lt;/L7p:AuditDetailAssertion&gt;
                            &lt;L7p:Encapsulated&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// name.result"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="f6b19229-a705-4c48-bc78-3975564a1a9a"/&gt;
                                &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Escape HTML String"/&gt;
                                &lt;L7p:Parameters mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="escapedString"/&gt;
                                    &lt;L7p:value stringValue="${name.result}"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Parameters&gt;
                            &lt;/L7p:Encapsulated&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="JHtodG1sQ29udGVudH0NCjxhIGlkPSIke2lkLmN1cnJlbnR9Ii8+PGEgaHJlZj0iJHtyZXF1ZXN0LnVybC5wYXRofT9vYmplY3RUeXBlPSR7b2JqZWN0VHlwZX0maWQ9JHtpZC5jdXJyZW50fSMke2lkLmN1cnJlbnR9IiBvbkNsaWNrPSJzZXRSZWZyZXNoKHRoaXMpIj4ke2VzY2FwZWRTdHJpbmd9PC9hPiAoJHt0eXBlLnJlc3VsdH0pPGJyLz4="/&gt;
                                &lt;L7p:VariableToSet stringValue="htmlContent"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:Expression1 stringValue="${id}"/&gt;
                                    &lt;L7p:Expression2 stringValue="${id.current}"/&gt;
                                    &lt;L7p:Negate booleanValue="true"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:RightValue stringValue="${id.current}"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt;
                                &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Detail stringValue="====&gt; ID matched, processing for dependencies =================================="/&gt;
                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="PEw3cDpJZGVudGl0eVByb3ZpZGVyT2lkIGdvaWRWYWx1ZT0iJHtpZC5jdXJyZW50fSI="/&gt;
                                    &lt;L7p:VariableToSet stringValue="referenceString"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Detail stringValue="===&gt; Searching objects for references to ${referenceString}"/&gt;
                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Detail stringValue="==&gt; Searching policy XML"/&gt;
                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Extract all policy objects that contain the IdentityProviderOid element"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:VariablePrefix stringValue="policies"/&gt;
                                    &lt;L7p:XmlMsgSrc stringValue="allPolicyXML"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/AllPolicyXML/PolicyXML[contains(.,$referenceString)]"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:ForEachLoop
                                    L7p:Usage="Required"
                                    loopVariable="policies.elements" variablePrefix="policy"&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Cast to message type for XPath"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:Base64Expression stringValue="JHtwb2xpY3kuY3VycmVudH0="/&gt;
                                    &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                                    &lt;L7p:DataType variableDataType="message"/&gt;
                                    &lt;L7p:VariableToSet stringValue="policyObject.xml"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Extract the policy XML from the policy object"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:VariablePrefix stringValue="policy.xml"/&gt;
                                    &lt;L7p:XmlMsgSrc stringValue="policyObject.xml"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/PolicyXML/text()"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;

                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;

                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:Include&gt;
                                    &lt;L7p:PolicyGuid stringValue="8f33b165-bc16-4959-a524-aba67aff3cdf"/&gt;
                                    &lt;/L7p:Include&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Cast to message type for XPath"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:Base64Expression stringValue="JHtwb2xpY3kueG1sLnJlc3VsdH0="/&gt;
                                    &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                                    &lt;L7p:DataType variableDataType="message"/&gt;
                                    &lt;L7p:VariableToSet stringValue="policy.xml"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Get the name of the parent elements to display"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:VariablePrefix stringValue="assertion"/&gt;
                                    &lt;L7p:XmlMsgSrc stringValue="policy.xml"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="//L7p:IdentityProviderOid[@goidValue=$id.current]/../name()"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="L7p"/&gt;

                                    &lt;L7p:value stringValue="http://www.layer7tech.com/ws/policy"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_2_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:Base64Expression stringValue="JHtzb3VyY2VUeXBlLnJlc3VsdH06ICR7Zm9sZGVyUGF0aC5yZXN1bHR9JHtuYW1lLnJlc3VsdH0gKCR7YXNzZXJ0aW9uLnJlc3VsdHN9KQ=="/&gt;
                                    &lt;L7p:VariableToSet stringValue="depender"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:ManipulateMultiValuedVariable&gt;

                                    &lt;L7p:SourceVariableName stringValue="depender"/&gt;

                                    &lt;L7p:TargetVariableName stringValue="dependers.list"/&gt;
                                    &lt;/L7p:ManipulateMultiValuedVariable&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cycle through each to extract parent elements and add to ${dependers.list}"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/L7p:ForEachLoop&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Search for references in policy XML, never fail"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:TrueAssertion/&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Search for references in policy XML, never fail"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${dependers.list.length}"/&gt;
                                    &lt;L7p:Expression2 stringValue="1"/&gt;
                                    &lt;L7p:Operator operator="GE"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;

                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="GE"/&gt;
                                    &lt;L7p:RightValue stringValue="1"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                    &lt;/L7p:ComparisonAssertion&gt;
                                    &lt;L7p:ForEachLoop
                                    L7p:Usage="Required"
                                    loopVariable="dependers.list" variablePrefix="depender"&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:Base64Expression stringValue="JHtkZXBlbmRlcnMuaHRtbH0NCiAgPGxpPiR7ZGVwZW5kZXIuY3VycmVudH08L2xpPg=="/&gt;
                                    &lt;L7p:VariableToSet stringValue="dependers.html"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;/L7p:ForEachLoop&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="JHtodG1sQ29udGVudH0NCg0KPHA+VGhlIGZvbGxvd2luZyBvYmplY3RzIHJlZmVyZW5jZSB0aGlzIGlkZW50aXR5IHByb3ZpZGVyOjwvcD4NCjx1bD4ke2RlcGVuZGVycy5odG1sfTwvdWw+"/&gt;
                                    &lt;L7p:VariableToSet stringValue="htmlContent"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${dependers.list} has content"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="JHtodG1sQ29udGVudH0NCjxwPk5vdGhpbmcgd2FzIGZvdW5kIHRoYXQgcmVmZXJlbmNlcyB0aGlzIGlkZW50aXR5IHByb3ZpZGVyPC9wPg=="/&gt;
                                    &lt;L7p:VariableToSet stringValue="htmlContent"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Append ${dependers.html} to ${htmlContent} if ${dependers.list} has any entries"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${id} matches so retrieve dependers"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                &lt;/wsp:All&gt;
                                &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Do reverse dependency search if id matches"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt;
                            &lt;/wsp:OneOrMore&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cycle through each object to add to display and check if search must be run"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/L7p:ForEachLoop&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${objectType} == &amp;quot;Identity Provider&amp;quot;"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${objectType}"/&gt;
                            &lt;L7p:Expression2 stringValue="JDBC Connection"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="JDBC Connection"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:AuditDetailAssertion&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:Detail stringValue="======&gt; Listing ${objectType} objects"/&gt;
                            &lt;L7p:Level stringValue="FINE"/&gt;
                        &lt;/L7p:AuditDetailAssertion&gt;
                        &lt;L7p:Encapsulated&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get list of objectTypes to display and search for references"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="f8abecfe-11d6-44e4-be07-16e6080a7e5e"/&gt;
                            &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: List JDBC Connections"/&gt;
                            &lt;L7p:Parameters mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="cacheAge"/&gt;
                                    &lt;L7p:value stringValue="${cacheAge}"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="refresh"/&gt;
                                    &lt;L7p:value stringValue="${request.http.parameter.refresh}"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Parameters&gt;
                        &lt;/L7p:Encapsulated&gt;
                        &lt;L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get list of ids"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:VariablePrefix stringValue="ids"/&gt;
                            &lt;L7p:XmlMsgSrc stringValue="jdbcConnections.sorted"/&gt;
                            &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                &lt;L7p:Expression stringValue="/JDBCConnections/JDBCConnection/@id"/&gt;
                                &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Namespaces&gt;
                                &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                            &lt;/L7p:XpathExpression&gt;
                        &lt;/L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:ForEachLoop L7p:Usage="Required"
                            loopVariable="ids.results" variablePrefix="id"&gt;
                            &lt;L7p:ResponseXpathAssertion&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get name of the object for display"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:VariablePrefix stringValue="name"/&gt;
                                &lt;L7p:XmlMsgSrc stringValue="jdbcConnections.sorted"/&gt;
                                &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/JDBCConnections/JDBCConnection[@id=$id.current]/Name"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                &lt;/L7p:XpathExpression&gt;
                            &lt;/L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:AuditDetailAssertion&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:Detail stringValue="=====&gt; Processing ${objectType}: ${name.result} (${id.current})"/&gt;
                                &lt;L7p:Level stringValue="FINE"/&gt;
                            &lt;/L7p:AuditDetailAssertion&gt;
                            &lt;L7p:Encapsulated&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// name.result"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="f6b19229-a705-4c48-bc78-3975564a1a9a"/&gt;
                                &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Escape HTML String"/&gt;
                                &lt;L7p:Parameters mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="escapedString"/&gt;
                                    &lt;L7p:value stringValue="${name.result}"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Parameters&gt;
                            &lt;/L7p:Encapsulated&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="JHtodG1sQ29udGVudH0NCjxhIGlkPSIke2lkLmN1cnJlbnR9Ii8+PGEgaHJlZj0iJHtyZXF1ZXN0LnVybC5wYXRofT9vYmplY3RUeXBlPSR7b2JqZWN0VHlwZX0maWQ9JHtpZC5jdXJyZW50fSMke2lkLmN1cnJlbnR9IiBvbkNsaWNrPSJzZXRSZWZyZXNoKHRoaXMpIj4ke2VzY2FwZWRTdHJpbmd9PC9hPjxici8+"/&gt;
                                &lt;L7p:VariableToSet stringValue="htmlContent"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:Expression1 stringValue="${id}"/&gt;
                                    &lt;L7p:Expression2 stringValue="${id.current}"/&gt;
                                    &lt;L7p:Negate booleanValue="true"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:RightValue stringValue="${id.current}"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt;
                                &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Detail stringValue="====&gt; ID matched, processing for dependencies =================================="/&gt;
                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="JHtuYW1lLnJlc3VsdH0="/&gt;
                                    &lt;L7p:VariableToSet stringValue="referenceString"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Detail stringValue="===&gt; Searching objects for references to ${referenceString}"/&gt;
                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Detail stringValue="==&gt; Searching policy XML"/&gt;
                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Extract all policy objects that contain the JdbcQuery element"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:VariablePrefix stringValue="policies"/&gt;
                                    &lt;L7p:XmlMsgSrc stringValue="allPolicyXML"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/AllPolicyXML/PolicyXML[contains(.,'&amp;lt;L7p:JdbcQuery&gt;')]"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:ForEachLoop
                                    L7p:Usage="Required"
                                    loopVariable="policies.elements" variablePrefix="policy"&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Cast to message type for XPath"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:Base64Expression stringValue="JHtwb2xpY3kuY3VycmVudH0="/&gt;
                                    &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                                    &lt;L7p:DataType variableDataType="message"/&gt;
                                    &lt;L7p:VariableToSet stringValue="policyObject.xml"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Extract the policy XML from the policy object"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:VariablePrefix stringValue="policy.xml"/&gt;
                                    &lt;L7p:XmlMsgSrc stringValue="policyObject.xml"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/PolicyXML/text()"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;

                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;

                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Cast to message type for XPath"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:Base64Expression stringValue="JHtwb2xpY3kueG1sLnJlc3VsdH0="/&gt;
                                    &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                                    &lt;L7p:DataType variableDataType="message"/&gt;
                                    &lt;L7p:VariableToSet stringValue="policy.xml"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Check if the policy XML has a reference to this JDBC connection"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:VariablePrefix stringValue=""/&gt;

                                    &lt;L7p:XmlMsgSrc stringValue="policy.xml"/&gt;

                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;

                                    &lt;L7p:Expression stringValue="//L7p:JdbcQuery/L7p:ConnectionName[@stringValue=$referenceString]"/&gt;

                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="L7p"/&gt;

                                    &lt;L7p:value stringValue="http://www.layer7tech.com/ws/policy"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="wsp"/&gt;

                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/ws/2002/12/policy"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:Include&gt;

                                    &lt;L7p:PolicyGuid stringValue="8f33b165-bc16-4959-a524-aba67aff3cdf"/&gt;
                                    &lt;/L7p:Include&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:Base64Expression stringValue="JHtzb3VyY2VUeXBlLnJlc3VsdH06ICR7Zm9sZGVyUGF0aC5yZXN1bHR9JHtuYW1lLnJlc3VsdH0="/&gt;

                                    &lt;L7p:VariableToSet stringValue="depender"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:ManipulateMultiValuedVariable&gt;

                                    &lt;L7p:SourceVariableName stringValue="depender"/&gt;

                                    &lt;L7p:TargetVariableName stringValue="dependers.list"/&gt;
                                    &lt;/L7p:ManipulateMultiValuedVariable&gt;
                                    &lt;L7p:assertionComment&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Search policy XML for JdbcQuery element matching our reference"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:TrueAssertion/&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Search policy XML for JdbcQuery element matching our reference, never fail"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cycle through each policy to see if the JDBC connection is the one we want and append to ${dependers.list}"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/L7p:ForEachLoop&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Search for references in policy XML"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:TrueAssertion/&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Search for references in policy XML, never fail"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${dependers.list.length}"/&gt;
                                    &lt;L7p:Expression2 stringValue="1"/&gt;
                                    &lt;L7p:Operator operator="GE"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;

                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="GE"/&gt;
                                    &lt;L7p:RightValue stringValue="1"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                    &lt;/L7p:ComparisonAssertion&gt;
                                    &lt;L7p:ForEachLoop
                                    L7p:Usage="Required"
                                    loopVariable="dependers.list" variablePrefix="depender"&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:Base64Expression stringValue="JHtkZXBlbmRlcnMuaHRtbH0NCiAgPGxpPiR7ZGVwZW5kZXIuY3VycmVudH08L2xpPg=="/&gt;
                                    &lt;L7p:VariableToSet stringValue="dependers.html"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;/L7p:ForEachLoop&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="JHtodG1sQ29udGVudH0NCg0KPHA+VGhlIGZvbGxvd2luZyBvYmplY3RzIHJlZmVyZW5jZSB0aGlzIEpEQkMgY29ubmVjdGlvbjo8L3A+DQo8dWw+JHtkZXBlbmRlcnMuaHRtbH08L3VsPg=="/&gt;
                                    &lt;L7p:VariableToSet stringValue="htmlContent"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${dependers.list} has content"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="JHtodG1sQ29udGVudH0NCjxwPk5vdGhpbmcgd2FzIGZvdW5kIHRoYXQgcmVmZXJlbmNlcyB0aGlzIEpEQkMgY29ubmVjdGlvbjwvcD4="/&gt;
                                    &lt;L7p:VariableToSet stringValue="htmlContent"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Append ${dependers.html} to ${htmlContent} if ${dependers.list} has any entries"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${id} matches so retrieve dependers"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                &lt;/wsp:All&gt;
                                &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Do reverse dependency search if id matches"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt;
                            &lt;/wsp:OneOrMore&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cycle through each object to add to display and check if search must be run"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/L7p:ForEachLoop&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${objectType} == &amp;quot;JDBC Connection&amp;quot;"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${objectType}"/&gt;
                            &lt;L7p:Expression2 stringValue="JMS Destination"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="JMS Destination"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:AuditDetailAssertion&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:Detail stringValue="======&gt; Listing ${objectType} objects"/&gt;
                            &lt;L7p:Level stringValue="FINE"/&gt;
                        &lt;/L7p:AuditDetailAssertion&gt;
                        &lt;L7p:Encapsulated&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get list of objectTypes to display and search for references"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="53bc61d8-f0d0-4024-b09c-61fd5c9ef33e"/&gt;
                            &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: List JMS Destinations"/&gt;
                            &lt;L7p:Parameters mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="cacheAge"/&gt;
                                    &lt;L7p:value stringValue="${cacheAge}"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="refresh"/&gt;
                                    &lt;L7p:value stringValue="${request.http.parameter.refresh}"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Parameters&gt;
                        &lt;/L7p:Encapsulated&gt;
                        &lt;L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get list of ids"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:VariablePrefix stringValue="ids"/&gt;
                            &lt;L7p:XmlMsgSrc stringValue="jmsDestinations.sorted"/&gt;
                            &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                &lt;L7p:Expression stringValue="/JMSDestinations/JMSDestination/@id"/&gt;
                                &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Namespaces&gt;
                                &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                            &lt;/L7p:XpathExpression&gt;
                        &lt;/L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:ForEachLoop L7p:Usage="Required"
                            loopVariable="ids.results" variablePrefix="id"&gt;
                            &lt;L7p:ResponseXpathAssertion&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get name of the object for display"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:VariablePrefix stringValue="name"/&gt;
                                &lt;L7p:XmlMsgSrc stringValue="jmsDestinations.sorted"/&gt;
                                &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/JMSDestinations/JMSDestination[@id=$id.current]/Name"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                &lt;/L7p:XpathExpression&gt;
                            &lt;/L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:ResponseXpathAssertion&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get direction of the object for display"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:VariablePrefix stringValue="direction"/&gt;
                                &lt;L7p:XmlMsgSrc stringValue="jmsDestinations.sorted"/&gt;
                                &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/JMSDestinations/JMSDestination[@id=$id.current]/Direction"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                &lt;/L7p:XpathExpression&gt;
                            &lt;/L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:AuditDetailAssertion&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:Detail stringValue="=====&gt; Processing ${objectType}: ${name.result} (${id.current})"/&gt;
                                &lt;L7p:Level stringValue="FINE"/&gt;
                            &lt;/L7p:AuditDetailAssertion&gt;
                            &lt;L7p:Encapsulated&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// name.result"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="f6b19229-a705-4c48-bc78-3975564a1a9a"/&gt;
                                &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Escape HTML String"/&gt;
                                &lt;L7p:Parameters mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="escapedString"/&gt;
                                    &lt;L7p:value stringValue="${name.result}"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Parameters&gt;
                            &lt;/L7p:Encapsulated&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="JHtodG1sQ29udGVudH0NCjxhIGlkPSIke2lkLmN1cnJlbnR9Ii8+PGEgaHJlZj0iJHtyZXF1ZXN0LnVybC5wYXRofT9vYmplY3RUeXBlPSR7b2JqZWN0VHlwZX0maWQ9JHtpZC5jdXJyZW50fSMke2lkLmN1cnJlbnR9IiBvbkNsaWNrPSJzZXRSZWZyZXNoKHRoaXMpIj4ke2VzY2FwZWRTdHJpbmd9ICgke2RpcmVjdGlvbi5yZXN1bHR9KTwvYT48YnIvPg=="/&gt;
                                &lt;L7p:VariableToSet stringValue="htmlContent"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:Expression1 stringValue="${id}"/&gt;
                                    &lt;L7p:Expression2 stringValue="${id.current}"/&gt;
                                    &lt;L7p:Negate booleanValue="true"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:RightValue stringValue="${id.current}"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt;
                                &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Detail stringValue="====&gt; ID matched, processing for dependencies =================================="/&gt;
                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="JHtpZC5jdXJyZW50fQ=="/&gt;
                                    &lt;L7p:VariableToSet stringValue="referenceString"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Detail stringValue="===&gt; Searching objects for references to ${referenceString}"/&gt;
                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Detail stringValue="==&gt; Searching policy XML"/&gt;
                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Extract all policy objects that contain the JmsRoutingAssertion element"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:VariablePrefix stringValue="policies"/&gt;
                                    &lt;L7p:XmlMsgSrc stringValue="allPolicyXML"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/AllPolicyXML/PolicyXML[contains(.,'&amp;lt;L7p:JmsRoutingAssertion&gt;')]"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:ForEachLoop
                                    L7p:Usage="Required"
                                    loopVariable="policies.elements" variablePrefix="policy"&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Cast to message type for XPath"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:Base64Expression stringValue="JHtwb2xpY3kuY3VycmVudH0="/&gt;
                                    &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                                    &lt;L7p:DataType variableDataType="message"/&gt;
                                    &lt;L7p:VariableToSet stringValue="policyObject.xml"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Extract the policy XML from the policy object"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:VariablePrefix stringValue="policy.xml"/&gt;
                                    &lt;L7p:XmlMsgSrc stringValue="policyObject.xml"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/PolicyXML/text()"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;

                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;

                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Cast to message type for XPath"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:Base64Expression stringValue="JHtwb2xpY3kueG1sLnJlc3VsdH0="/&gt;
                                    &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                                    &lt;L7p:DataType variableDataType="message"/&gt;
                                    &lt;L7p:VariableToSet stringValue="policy.xml"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Check if the policy XML has a reference to this JMS destination"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:VariablePrefix stringValue=""/&gt;

                                    &lt;L7p:XmlMsgSrc stringValue="policy.xml"/&gt;

                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;

                                    &lt;L7p:Expression stringValue="//L7p:JmsRoutingAssertion/L7p:EndpointOid[@goidValue=$referenceString]"/&gt;

                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="L7p"/&gt;

                                    &lt;L7p:value stringValue="http://www.layer7tech.com/ws/policy"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="wsp"/&gt;

                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/ws/2002/12/policy"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:Include&gt;

                                    &lt;L7p:PolicyGuid stringValue="8f33b165-bc16-4959-a524-aba67aff3cdf"/&gt;
                                    &lt;/L7p:Include&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:Base64Expression stringValue="JHtzb3VyY2VUeXBlLnJlc3VsdH06ICR7Zm9sZGVyUGF0aC5yZXN1bHR9JHtuYW1lLnJlc3VsdH0="/&gt;

                                    &lt;L7p:VariableToSet stringValue="depender"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:ManipulateMultiValuedVariable&gt;

                                    &lt;L7p:SourceVariableName stringValue="depender"/&gt;

                                    &lt;L7p:TargetVariableName stringValue="dependers.list"/&gt;
                                    &lt;/L7p:ManipulateMultiValuedVariable&gt;
                                    &lt;L7p:assertionComment&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Search policy XML for JmsRoutingAssertion element matching our reference"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:TrueAssertion/&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Search policy XML for JmsRoutingAssertion element matching our reference, never fail"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cycle through each policy to see if the JMS assertion is the one we want and append to ${dependers.list}"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/L7p:ForEachLoop&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Search for references in policy XML"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:TrueAssertion/&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Search for references in policy XML, never fail"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${dependers.list.length}"/&gt;
                                    &lt;L7p:Expression2 stringValue="1"/&gt;
                                    &lt;L7p:Operator operator="GE"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;

                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="GE"/&gt;
                                    &lt;L7p:RightValue stringValue="1"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                    &lt;/L7p:ComparisonAssertion&gt;
                                    &lt;L7p:ForEachLoop
                                    L7p:Usage="Required"
                                    loopVariable="dependers.list" variablePrefix="depender"&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:Base64Expression stringValue="JHtkZXBlbmRlcnMuaHRtbH0NCiAgPGxpPiR7ZGVwZW5kZXIuY3VycmVudH08L2xpPg=="/&gt;
                                    &lt;L7p:VariableToSet stringValue="dependers.html"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;/L7p:ForEachLoop&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="JHtodG1sQ29udGVudH0NCg0KPHA+VGhlIGZvbGxvd2luZyBvYmplY3RzIHJlZmVyZW5jZSB0aGlzIEpNUyBkZXN0aW5hdGlvbjo8L3A+DQo8dWw+JHtkZXBlbmRlcnMuaHRtbH08L3VsPg=="/&gt;
                                    &lt;L7p:VariableToSet stringValue="htmlContent"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${dependers.list} has content"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="JHtodG1sQ29udGVudH0NCjxwPk5vdGhpbmcgd2FzIGZvdW5kIHRoYXQgcmVmZXJlbmNlcyB0aGlzIEpNUyBkZXN0aW5hdGlvbjwvcD4="/&gt;
                                    &lt;L7p:VariableToSet stringValue="htmlContent"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Append ${dependers.html} to ${htmlContent} if ${dependers.list} has any entries"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${id} matches so retrieve dependers"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                &lt;/wsp:All&gt;
                                &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Do reverse dependency search if id matches"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt;
                            &lt;/wsp:OneOrMore&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cycle through each object to add to display and check if search must be run"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/L7p:ForEachLoop&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${objectType} == &amp;quot;JMS Destination&amp;quot;"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${objectType}"/&gt;
                            &lt;L7p:Expression2 stringValue="Policy"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="Policy"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:AuditDetailAssertion&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:Detail stringValue="======&gt; Listing ${objectType} objects"/&gt;
                            &lt;L7p:Level stringValue="FINE"/&gt;
                        &lt;/L7p:AuditDetailAssertion&gt;
                        &lt;L7p:CommentAssertion&gt;
                            &lt;L7p:Comment stringValue="* Note: ${policies.sorted} was set earlier, so don't call Utility: List Policies it here"/&gt;
                        &lt;/L7p:CommentAssertion&gt;
                        &lt;L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get list of ids"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:VariablePrefix stringValue="ids"/&gt;
                            &lt;L7p:XmlMsgSrc stringValue="policies.sorted"/&gt;
                            &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                &lt;L7p:Expression stringValue="/Policies/Policy/@id"/&gt;
                                &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Namespaces&gt;
                                &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                            &lt;/L7p:XpathExpression&gt;
                        &lt;/L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:ForEachLoop L7p:Usage="Required"
                            loopVariable="ids.results" variablePrefix="id"&gt;
                            &lt;L7p:ResponseXpathAssertion&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get name of the object for display"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:VariablePrefix stringValue="name"/&gt;
                                &lt;L7p:XmlMsgSrc stringValue="policies.sorted"/&gt;
                                &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/Policies/Policy[@id=$id.current]/Name"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                &lt;/L7p:XpathExpression&gt;
                            &lt;/L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:ResponseXpathAssertion&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get folderPath of the object to display"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:VariablePrefix stringValue="folderPath"/&gt;
                                &lt;L7p:XmlMsgSrc stringValue="policies.sorted"/&gt;
                                &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/Policies/Policy[@id=$id.current]/FolderPath"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                &lt;/L7p:XpathExpression&gt;
                            &lt;/L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:AuditDetailAssertion&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:Detail stringValue="=====&gt; Processing ${objectType}: ${name.result} (${id.current})"/&gt;
                                &lt;L7p:Level stringValue="FINE"/&gt;
                            &lt;/L7p:AuditDetailAssertion&gt;
                            &lt;L7p:Encapsulated&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// name.result"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="f6b19229-a705-4c48-bc78-3975564a1a9a"/&gt;
                                &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Escape HTML String"/&gt;
                                &lt;L7p:Parameters mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="escapedString"/&gt;
                                    &lt;L7p:value stringValue="${name.result}"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Parameters&gt;
                            &lt;/L7p:Encapsulated&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="JHtlc2NhcGVkU3RyaW5nfQ=="/&gt;
                                &lt;L7p:VariableToSet stringValue="name"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:Encapsulated&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// folderPath.result"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="f6b19229-a705-4c48-bc78-3975564a1a9a"/&gt;
                                &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Escape HTML String"/&gt;
                                &lt;L7p:Parameters mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="escapedString"/&gt;
                                    &lt;L7p:value stringValue="${folderPath.result}"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Parameters&gt;
                            &lt;/L7p:Encapsulated&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="JHtodG1sQ29udGVudH0NCjxhIGlkPSIke2lkLmN1cnJlbnR9Ii8+PGEgaHJlZj0iJHtyZXF1ZXN0LnVybC5wYXRofT9vYmplY3RUeXBlPSR7b2JqZWN0VHlwZX0maWQ9JHtpZC5jdXJyZW50fSMke2lkLmN1cnJlbnR9IiBvbkNsaWNrPSJzZXRSZWZyZXNoKHRoaXMpIj4ke2VzY2FwZWRTdHJpbmd9JHtuYW1lfTwvYT48YnIvPg=="/&gt;
                                &lt;L7p:VariableToSet stringValue="htmlContent"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:Expression1 stringValue="${id}"/&gt;
                                    &lt;L7p:Expression2 stringValue="${id.current}"/&gt;
                                    &lt;L7p:Negate booleanValue="true"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:RightValue stringValue="${id.current}"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt;
                                &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Detail stringValue="====&gt; ID matched, processing for dependencies =================================="/&gt;
                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get the GUID for this policy"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:VariablePrefix stringValue="guid"/&gt;
                                    &lt;L7p:XmlMsgSrc stringValue="policies.sorted"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/Policies/Policy[@id=$id]/GUID"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="UG9saWN5R3VpZCBzdHJpbmdWYWx1ZT0iJHtndWlkLnJlc3VsdH0i"/&gt;
                                    &lt;L7p:VariableToSet stringValue="referenceString"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Detail stringValue="===&gt; Searching objects for references to ${referenceString}"/&gt;
                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Detail stringValue="==&gt; Searching policy XML"/&gt;
                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Find policies that include this fragment"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:VariablePrefix stringValue="policies"/&gt;
                                    &lt;L7p:XmlMsgSrc stringValue="allPolicyXML"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="//AllPolicyXML/PolicyXML[contains(.,$referenceString)]"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:ForEachLoop
                                    L7p:Usage="Required"
                                    loopVariable="policies.elements" variablePrefix="policy"&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Cast to message type for XPath"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:Base64Expression stringValue="JHtwb2xpY3kuY3VycmVudH0="/&gt;
                                    &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                                    &lt;L7p:DataType variableDataType="message"/&gt;
                                    &lt;L7p:VariableToSet stringValue="policyObject.xml"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:Include&gt;
                                    &lt;L7p:PolicyGuid stringValue="8f33b165-bc16-4959-a524-aba67aff3cdf"/&gt;
                                    &lt;/L7p:Include&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:Base64Expression stringValue="JHtzb3VyY2VUeXBlLnJlc3VsdH06ICR7Zm9sZGVyUGF0aC5yZXN1bHR9JHtuYW1lLnJlc3VsdH0="/&gt;
                                    &lt;L7p:VariableToSet stringValue="depender"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:ManipulateMultiValuedVariable&gt;

                                    &lt;L7p:SourceVariableName stringValue="depender"/&gt;

                                    &lt;L7p:TargetVariableName stringValue="dependers.list"/&gt;
                                    &lt;/L7p:ManipulateMultiValuedVariable&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Add each one to ${dependers.list}"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/L7p:ForEachLoop&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Search for references in policy XML"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:TrueAssertion/&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Search for references in policy XML, never fail"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Detail stringValue="==&gt; Searching encapsulated assertion definitions"/&gt;
                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:Encapsulated&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// GET encapsulatedAssertions"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="c8a5a0d5-1ae2-4144-b538-5c311efc1560"/&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Call Restman"/&gt;
                                    &lt;L7p:Parameters mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="element"/&gt;
                                    &lt;L7p:value stringValue=""/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="message"/&gt;
                                    &lt;L7p:value stringValue=""/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="method"/&gt;
                                    &lt;L7p:value stringValue="GET"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="resource"/&gt;
                                    &lt;L7p:value stringValue="encapsulatedAssertions"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Parameters&gt;
                                    &lt;/L7p:Encapsulated&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get list of Encapsulate Assertions that link to this policy (max 1)"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:VariablePrefix stringValue="dependers"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/l7:List/l7:Item/l7:Resource/l7:EncapsulatedAssertion/l7:PolicyReference[@id=$id.current]/../l7:Name"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:ForEachLoop
                                    L7p:Usage="Required"
                                    loopVariable="dependers.results" variablePrefix="depender"&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:Base64Expression stringValue="RU5DQVBTVUxBVEVEIEFTU0VSVElPTjogJHtkZXBlbmRlci5jdXJyZW50fQ=="/&gt;
                                    &lt;L7p:VariableToSet stringValue="depender"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:ManipulateMultiValuedVariable&gt;

                                    &lt;L7p:SourceVariableName stringValue="depender"/&gt;

                                    &lt;L7p:TargetVariableName stringValue="dependers.list"/&gt;
                                    &lt;/L7p:ManipulateMultiValuedVariable&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Add each one to ${dependers.list}"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/L7p:ForEachLoop&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Search for references in encpasulated assertion definitions"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:TrueAssertion/&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Search for references in encpasulated assertion definitions, never fail"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Detail stringValue="==&gt; Searching identity provider definitions"/&gt;
                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:Encapsulated&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// GET identityProviders"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="c8a5a0d5-1ae2-4144-b538-5c311efc1560"/&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Call Restman"/&gt;
                                    &lt;L7p:Parameters mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="element"/&gt;
                                    &lt;L7p:value stringValue=""/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="message"/&gt;
                                    &lt;L7p:value stringValue=""/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="method"/&gt;
                                    &lt;L7p:value stringValue="GET"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="resource"/&gt;
                                    &lt;L7p:value stringValue="identityProviders"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Parameters&gt;
                                    &lt;/L7p:Encapsulated&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get list of policy backed identity providers that link to this policy"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:VariablePrefix stringValue="dependers"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/l7:List/l7:Item/l7:Resource/l7:IdentityProvider/l7:Extension/l7:PolicyBackedIdentityProviderDetail[l7:AuthenticationPolicyId=$id.current]/../../@id"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:Encapsulated&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get a sorted list of identity providers"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="1ab6158d-33ce-4fa6-a7d8-2b8dc8e31faf"/&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: List Identity Providers"/&gt;
                                    &lt;L7p:Parameters mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="cacheAge"/&gt;
                                    &lt;L7p:value stringValue="${cacheAge}"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="refresh"/&gt;
                                    &lt;L7p:value stringValue="${request.http.parameter.refresh}"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Parameters&gt;
                                    &lt;/L7p:Encapsulated&gt;
                                    &lt;L7p:ForEachLoop
                                    L7p:Usage="Required"
                                    loopVariable="dependers.results" variablePrefix="depender"&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Get name of the identity provider that references this policy"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:VariablePrefix stringValue="providerName"/&gt;
                                    &lt;L7p:XmlMsgSrc stringValue="identityProviders.sorted"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/IdentityProviders/IdentityProvider[@id=$depender.current]/Name"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;

                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Get type of the identity provider that references this policy"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:VariablePrefix stringValue="type"/&gt;
                                    &lt;L7p:XmlMsgSrc stringValue="identityProviders.sorted"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/IdentityProviders/IdentityProvider[@id=$depender.current]/Type"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;

                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:Base64Expression stringValue="SURFTlRJVFkgUFJPVklERVI6ICR7cHJvdmlkZXJOYW1lLnJlc3VsdH0gKCR7dHlwZS5yZXN1bHR9KQ=="/&gt;
                                    &lt;L7p:VariableToSet stringValue="depender"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:ManipulateMultiValuedVariable&gt;

                                    &lt;L7p:SourceVariableName stringValue="depender"/&gt;

                                    &lt;L7p:TargetVariableName stringValue="dependers.list"/&gt;
                                    &lt;/L7p:ManipulateMultiValuedVariable&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Add each one to ${dependers.list}"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/L7p:ForEachLoop&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Search for references in identity provider definitions"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:TrueAssertion/&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Search for references in identity provider definitions, never fail"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Detail stringValue="==&gt; Searching policy backed service definitions"/&gt;
                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:Encapsulated&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get a sorted list of policy backed services"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="461cb9aa-0d25-4bf0-85d2-7e2d8d895e47"/&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: List Policy Backed Services"/&gt;
                                    &lt;L7p:Parameters mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="cacheAge"/&gt;
                                    &lt;L7p:value stringValue="${cacheAge}"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="refresh"/&gt;
                                    &lt;L7p:value stringValue="${request.http.parameter.refresh}"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Parameters&gt;
                                    &lt;/L7p:Encapsulated&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get list of policy backed services that link to this policy"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:VariablePrefix stringValue="dependers"/&gt;
                                    &lt;L7p:XmlMsgSrc stringValue="policyBackedServices.sorted"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/PolicyBackedServices/PolicyBackedService[PolicyId=$id.current]/Name"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:ForEachLoop
                                    L7p:Usage="Required"
                                    loopVariable="dependers.results" variablePrefix="depender"&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:Base64Expression stringValue="UE9MSUNZIEJBQ0tFRCBTRVJWSUNFOiAke2RlcGVuZGVyLmN1cnJlbnR9"/&gt;
                                    &lt;L7p:VariableToSet stringValue="depender"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:ManipulateMultiValuedVariable&gt;

                                    &lt;L7p:SourceVariableName stringValue="depender"/&gt;

                                    &lt;L7p:TargetVariableName stringValue="dependers.list"/&gt;
                                    &lt;/L7p:ManipulateMultiValuedVariable&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Add each one to ${dependers.list}"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/L7p:ForEachLoop&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Search for references in policy backed service definitions"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:TrueAssertion/&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Search for references in policy backed service definitions, never fail"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Detail stringValue="==&gt; Searching scheduled task definitions"/&gt;
                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:Encapsulated&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get a sorted list of scheduled tasks"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="100c1321-8d9f-45b9-80bd-ca1198081e5b"/&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: List Scheduled Tasks"/&gt;
                                    &lt;L7p:Parameters mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="cacheAge"/&gt;
                                    &lt;L7p:value stringValue="${cacheAge}"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="refresh"/&gt;
                                    &lt;L7p:value stringValue="${request.http.parameter.refresh}"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Parameters&gt;
                                    &lt;/L7p:Encapsulated&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get list of schedule tasks that link to this policy"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:VariablePrefix stringValue="dependers"/&gt;
                                    &lt;L7p:XmlMsgSrc stringValue="scheduledTasks.sorted"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/ScheduledTasks/ScheduledTask[PolicyId=$id.current]/Name"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:ForEachLoop
                                    L7p:Usage="Required"
                                    loopVariable="dependers.results" variablePrefix="depender"&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:Base64Expression stringValue="U0NIRURVTEVEIFRBU0s6ICR7ZGVwZW5kZXIuY3VycmVudH0="/&gt;
                                    &lt;L7p:VariableToSet stringValue="depender"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:ManipulateMultiValuedVariable&gt;

                                    &lt;L7p:SourceVariableName stringValue="depender"/&gt;

                                    &lt;L7p:TargetVariableName stringValue="dependers.list"/&gt;
                                    &lt;/L7p:ManipulateMultiValuedVariable&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Add each one to ${dependers.list}"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/L7p:ForEachLoop&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Search for references in scheduled task definitions"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:TrueAssertion/&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Search for references in scheduled task definitions, never fail"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${dependers.list.length}"/&gt;
                                    &lt;L7p:Expression2 stringValue="1"/&gt;
                                    &lt;L7p:Operator operator="GE"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;

                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="GE"/&gt;
                                    &lt;L7p:RightValue stringValue="1"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                    &lt;/L7p:ComparisonAssertion&gt;
                                    &lt;L7p:ForEachLoop
                                    L7p:Usage="Required"
                                    loopVariable="dependers.list" variablePrefix="depender"&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:Base64Expression stringValue="JHtkZXBlbmRlcnMuaHRtbH0NCiAgPGxpPiR7ZGVwZW5kZXIuY3VycmVudH08L2xpPg=="/&gt;
                                    &lt;L7p:VariableToSet stringValue="dependers.html"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;/L7p:ForEachLoop&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="JHtodG1sQ29udGVudH0NCg0KPHA+VGhlIGZvbGxvd2luZyBvYmplY3RzIGRlcGVuZCBvbiB0aGlzIHBvbGljeTo8L3A+DQo8dWw+JHtkZXBlbmRlcnMuaHRtbH08L3VsPg=="/&gt;
                                    &lt;L7p:VariableToSet stringValue="htmlContent"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${dependers.list} has content"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="JHtodG1sQ29udGVudH0NCjxwPk5vdGhpbmcgd2FzIGZvdW5kIHRoYXQgZGVwZW5kcyBvbiB0aGlzIHBvbGljeTwvcD4="/&gt;
                                    &lt;L7p:VariableToSet stringValue="htmlContent"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Append ${dependers.html} to ${htmlContent} if ${dependers.list} has any entries"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${id} matches so retrieve dependers"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                &lt;/wsp:All&gt;
                                &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Do reverse dependency search if id matches"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt;
                            &lt;/wsp:OneOrMore&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cycle through each object to add to display and check if search must be run"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/L7p:ForEachLoop&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${objectType} == &amp;quot;Policy&amp;quot;"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${objectType}"/&gt;
                            &lt;L7p:Expression2 stringValue="Private Key"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="Private Key"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:AuditDetailAssertion&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:Detail stringValue="======&gt; Listing ${objectType} objects"/&gt;
                            &lt;L7p:Level stringValue="FINE"/&gt;
                        &lt;/L7p:AuditDetailAssertion&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// List out all the possible elements that may use a private key for searching &amp;quot;default&amp;quot; references"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:Base64Expression stringValue="Tm9uU29hcFNpZ25FbGVtZW50LEVuY29kZUpzb25XZWJUb2tlbixBZGRXc3NTZWN1cml0eVRva2VuLEFkZFdzc1RpbWVzdGFtcCxTYW1scFJlcXVlc3RCdWlsZGVyLFNhbWxwUmVzcG9uc2VCdWlsZGVyLFdzc0NvbmZpZ3VyYXRpb24sU2FtbElzc3VlcixXc3NTaWduRWxlbWVudCxDc3JTaWduZXI="/&gt;
                            &lt;L7p:VariableToSet stringValue="privateKeyElements"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:Encapsulated&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get list of objectTypes to display and search for references"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="fbdcb4ad-bf2d-44f7-8aef-c8e1553c13ba"/&gt;
                            &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: List Private Keys"/&gt;
                            &lt;L7p:Parameters mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="cacheAge"/&gt;
                                    &lt;L7p:value stringValue="${cacheAge}"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="refresh"/&gt;
                                    &lt;L7p:value stringValue="${request.http.parameter.refresh}"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Parameters&gt;
                        &lt;/L7p:Encapsulated&gt;
                        &lt;L7p:AuditDetailAssertion&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:Detail stringValue="${privateKeys.sorted.mainpart}"/&gt;
                            &lt;L7p:Level stringValue="FINE"/&gt;
                        &lt;/L7p:AuditDetailAssertion&gt;
                        &lt;L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get list of ids"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:VariablePrefix stringValue="ids"/&gt;
                            &lt;L7p:XmlMsgSrc stringValue="privateKeys.sorted"/&gt;
                            &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                &lt;L7p:Expression stringValue="/PrivateKeys/PrivateKey/@id"/&gt;
                                &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Namespaces&gt;
                                &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                            &lt;/L7p:XpathExpression&gt;
                        &lt;/L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:ForEachLoop L7p:Usage="Required"
                            loopVariable="ids.results" variablePrefix="id"&gt;
                            &lt;L7p:ResponseXpathAssertion&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get alias of the object for display"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:VariablePrefix stringValue="alias"/&gt;
                                &lt;L7p:XmlMsgSrc stringValue="privateKeys.sorted"/&gt;
                                &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/PrivateKeys/PrivateKey[@id=$id.current]/Alias"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                &lt;/L7p:XpathExpression&gt;
                            &lt;/L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:AuditDetailAssertion&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:Detail stringValue="=====&gt; Processing ${objectType}: ${alias.result} (${id.current})"/&gt;
                                &lt;L7p:Level stringValue="FINE"/&gt;
                            &lt;/L7p:AuditDetailAssertion&gt;
                            &lt;L7p:Encapsulated&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// alias.result"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="f6b19229-a705-4c48-bc78-3975564a1a9a"/&gt;
                                &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Escape HTML String"/&gt;
                                &lt;L7p:Parameters mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="escapedString"/&gt;
                                    &lt;L7p:value stringValue="${alias.result}"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Parameters&gt;
                            &lt;/L7p:Encapsulated&gt;
                            &lt;L7p:ResponseXpathAssertion&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get default attribute"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:VariablePrefix stringValue="default"/&gt;
                                &lt;L7p:XmlMsgSrc stringValue="privateKeys.sorted"/&gt;
                                &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/PrivateKeys/PrivateKey[@id=$id.current]/@default"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                &lt;/L7p:XpathExpression&gt;
                            &lt;/L7p:ResponseXpathAssertion&gt;
                            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${default.result}"/&gt;
                                    &lt;L7p:Operator operatorNull="null"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="boolean"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="true"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                    &lt;/L7p:ComparisonAssertion&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="JHtodG1sQ29udGVudH0NCjxhIGlkPSIke2lkLmN1cnJlbnR9Ii8+PGEgaHJlZj0iJHtyZXF1ZXN0LnVybC5wYXRofT9vYmplY3RUeXBlPSR7b2JqZWN0VHlwZX0maWQ9JHtpZC5jdXJyZW50fSMke2lkLmN1cnJlbnR9IiBvbkNsaWNrPSJzZXRSZWZyZXNoKHRoaXMpIj4ke2VzY2FwZWRTdHJpbmd9PC9hPiAoRGVmYXVsdCBQcml2YXRlIEtleSk8YnIvPg=="/&gt;
                                    &lt;L7p:VariableToSet stringValue="htmlContent"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${default.result} == 'true'"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                &lt;/wsp:All&gt;
                                &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="JHtodG1sQ29udGVudH0NCjxhIGlkPSIke2lkLmN1cnJlbnR9Ii8+PGEgaHJlZj0iJHtyZXF1ZXN0LnVybC5wYXRofT9vYmplY3RUeXBlPSR7b2JqZWN0VHlwZX0maWQ9JHtpZC5jdXJyZW50fSMke2lkLmN1cnJlbnR9IiBvbkNsaWNrPSJzZXRSZWZyZXNoKHRoaXMpIj4ke2VzY2FwZWRTdHJpbmd9PC9hPjxici8+"/&gt;
                                    &lt;L7p:VariableToSet stringValue="htmlContent"/&gt;
                                &lt;/L7p:SetVariable&gt;
                                &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Add &amp;quot;(default)&amp;quot; if ${default.result} == 'true'"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt;
                            &lt;/wsp:OneOrMore&gt;
                            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:Expression1 stringValue="${id}"/&gt;
                                    &lt;L7p:Expression2 stringValue="${id.current}"/&gt;
                                    &lt;L7p:Negate booleanValue="true"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:RightValue stringValue="${id.current}"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt;
                                &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Detail stringValue="====&gt; ID matched, processing for dependencies =================================="/&gt;
                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get keystore of the private key for display"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:VariablePrefix stringValue="keystore"/&gt;
                                    &lt;L7p:XmlMsgSrc stringValue="privateKeys.sorted"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/PrivateKeys/PrivateKey[@id=$id.current]/Keystore"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Detail stringValue="===&gt; Searching objects for references to ${keystore.result}:${alias.result}"/&gt;
                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Detail stringValue="==&gt; Searching policy XML for explicit references to this private key"/&gt;
                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Extract all policy objects that contain the KeyAlias element"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:VariablePrefix stringValue="policies"/&gt;
                                    &lt;L7p:XmlMsgSrc stringValue="allPolicyXML"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/AllPolicyXML/PolicyXML[contains(.,'&amp;lt;L7p:KeyAlias stringValue=')]"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:ForEachLoop
                                    L7p:Usage="Required"
                                    loopVariable="policies.elements" variablePrefix="policy"&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Cast to message type for XPath"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:Base64Expression stringValue="JHtwb2xpY3kuY3VycmVudH0="/&gt;
                                    &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                                    &lt;L7p:DataType variableDataType="message"/&gt;
                                    &lt;L7p:VariableToSet stringValue="policyObject.xml"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Extract the policy XML from the policy object"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:VariablePrefix stringValue="policy.xml"/&gt;
                                    &lt;L7p:XmlMsgSrc stringValue="policyObject.xml"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/PolicyXML/text()"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;

                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;

                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:Include&gt;
                                    &lt;L7p:PolicyGuid stringValue="8f33b165-bc16-4959-a524-aba67aff3cdf"/&gt;
                                    &lt;/L7p:Include&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Cast to message type for XPath"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:Base64Expression stringValue="JHtwb2xpY3kueG1sLnJlc3VsdH0="/&gt;
                                    &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                                    &lt;L7p:DataType variableDataType="message"/&gt;
                                    &lt;L7p:VariableToSet stringValue="policy.xml"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Check if the policy XML has a reference to this private by alias"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:VariablePrefix stringValue="assertion"/&gt;

                                    &lt;L7p:XmlMsgSrc stringValue="policy.xml"/&gt;

                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;

                                    &lt;L7p:Expression stringValue="//L7p:KeyAlias[@stringValue=$alias.result]/../L7p:NonDefaultKeystoreId[@goidValue=$keystore.result]/../name()"/&gt;

                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="L7p"/&gt;

                                    &lt;L7p:value stringValue="http://www.layer7tech.com/ws/policy"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_2_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Check if the policy XML has a reference to this private by alias"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:VariablePrefix stringValue="assertion"/&gt;

                                    &lt;L7p:XmlMsgSrc stringValue="policy.xml"/&gt;

                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;

                                    &lt;L7p:Expression stringValue="//L7p:KeyAlias[@stringValue=$alias.result]/../L7p:KeyGoid[@goidValue=$keystore.result]/../name()"/&gt;

                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="L7p"/&gt;

                                    &lt;L7p:value stringValue="http://www.layer7tech.com/ws/policy"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_2_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:assertionComment&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Search "/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Detail stringValue="==&gt; Found ${assertion.results} assertion(s) in ${sourceType.result}: ${folderpath.result}${name.result}"/&gt;
                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:Include&gt;

                                    &lt;L7p:PolicyGuid stringValue="8f33b165-bc16-4959-a524-aba67aff3cdf"/&gt;
                                    &lt;/L7p:Include&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:Base64Expression stringValue="JHtzb3VyY2VUeXBlLnJlc3VsdH06ICR7Zm9sZGVyUGF0aC5yZXN1bHR9JHtuYW1lLnJlc3VsdH0="/&gt;

                                    &lt;L7p:VariableToSet stringValue="cachekey"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:CacheLookup&gt;

                                    &lt;L7p:CacheEntryKey stringValue="${cacheKey}"/&gt;

                                    &lt;L7p:CacheId stringValue="dependers-${requestid}"/&gt;

                                    &lt;L7p:ContentTypeOverride stringValue=""/&gt;

                                    &lt;L7p:OtherTargetMessageVariable stringValue="depender"/&gt;

                                    &lt;L7p:Target target="OTHER"/&gt;
                                    &lt;/L7p:CacheLookup&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Cast to string and append assertion name"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:Base64Expression stringValue="JHtkZXBlbmRlci5tYWlucGFydH0sICR7YXNzZXJ0aW9uLnJlc3VsdH0="/&gt;

                                    &lt;L7p:VariableToSet stringValue="depender"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:CacheStorage&gt;

                                    &lt;L7p:CacheEntryKey stringValue="${cacheKey}"/&gt;

                                    &lt;L7p:CacheId stringValue="dependers-${requestid}"/&gt;

                                    &lt;L7p:MaxEntries stringValue="500"/&gt;

                                    &lt;L7p:OtherTargetMessageVariable stringValue="depender"/&gt;

                                    &lt;L7p:StoreSoapFaults booleanValue="true"/&gt;

                                    &lt;L7p:Target target="OTHER"/&gt;
                                    &lt;/L7p:CacheStorage&gt;
                                    &lt;L7p:assertionComment&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Found in cache, so append"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:Base64Expression stringValue="JHtzb3VyY2VUeXBlLnJlc3VsdH06ICR7Zm9sZGVyUGF0aC5yZXN1bHR9JHtuYW1lLnJlc3VsdH0gKDxiPiR7YXNzZXJ0aW9uLnJlc3VsdHN9PC9iPg=="/&gt;

                                    &lt;L7p:VariableToSet stringValue="depender"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:CacheStorage&gt;

                                    &lt;L7p:CacheEntryKey stringValue="${cacheKey}"/&gt;

                                    &lt;L7p:CacheId stringValue="dependers-${requestid}"/&gt;

                                    &lt;L7p:MaxEntries stringValue="500"/&gt;

                                    &lt;L7p:OtherTargetMessageVariable stringValue="depender"/&gt;

                                    &lt;L7p:StoreSoapFaults booleanValue="true"/&gt;

                                    &lt;L7p:Target target="OTHER"/&gt;
                                    &lt;/L7p:CacheStorage&gt;
                                    &lt;L7p:ManipulateMultiValuedVariable&gt;

                                    &lt;L7p:SourceVariableName stringValue="cacheKey"/&gt;

                                    &lt;L7p:TargetVariableName stringValue="dependers.found"/&gt;
                                    &lt;/L7p:ManipulateMultiValuedVariable&gt;
                                    &lt;L7p:assertionComment&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Not found in cache, so initialise"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:assertionComment&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Append assertion to depender if found, else initialise in cache"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;L7p:assertionComment&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Search policy XML for TrustedCertificateName element matching ${name.result}"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:TrueAssertion/&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Search policy XML for each possibility matching our reference, never fail"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;/L7p:ForEachLoop&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Search for explicit references in policy XML"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:TrueAssertion/&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Search for explicit references in policy XML, never fail"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${default.result}"/&gt;
                                    &lt;L7p:Operator operatorNull="null"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="boolean"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;

                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="true"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                    &lt;/L7p:ComparisonAssertion&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Detail stringValue="==&gt; Searching policy XML for &amp;quot;default&amp;quot; private key possibilities"/&gt;
                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:Split&gt;
                                    &lt;L7p:InputVariable stringValue="privateKeyElements"/&gt;
                                    &lt;L7p:OutputVariable stringValue="privateKeyElements.list"/&gt;
                                    &lt;/L7p:Split&gt;
                                    &lt;L7p:ForEachLoop
                                    L7p:Usage="Required"
                                    loopVariable="privateKeyElements.list" variablePrefix="element"&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Detail stringValue="===&gt; Checking for ${element.current}"/&gt;
                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:Base64Expression stringValue="TDdwOiR7ZWxlbWVudC5jdXJyZW50fQ=="/&gt;
                                    &lt;L7p:VariableToSet stringValue="element.name"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:Base64Expression stringValue="PEw3cDoke2VsZW1lbnQuY3VycmVudH0+"/&gt;
                                    &lt;L7p:VariableToSet stringValue="element.tag"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:VariablePrefix stringValue="policies"/&gt;

                                    &lt;L7p:XmlMsgSrc stringValue="allPolicyXML"/&gt;

                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;

                                    &lt;L7p:Expression stringValue="/AllPolicyXML/PolicyXML[contains(.,$element.tag)]"/&gt;

                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="l7"/&gt;

                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:ForEachLoop
                                    L7p:Usage="Required"
                                    loopVariable="policies.elements" variablePrefix="policy"&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Cast to message type for XPath"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:Base64Expression stringValue="JHtwb2xpY3kuY3VycmVudH0="/&gt;

                                    &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;

                                    &lt;L7p:DataType variableDataType="message"/&gt;

                                    &lt;L7p:VariableToSet stringValue="policyObject.xml"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Extract the policy XML from the policy object"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:VariablePrefix stringValue="policy.xml"/&gt;

                                    &lt;L7p:XmlMsgSrc stringValue="policyObject.xml"/&gt;

                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;

                                    &lt;L7p:Expression stringValue="/PolicyXML/text()"/&gt;

                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="s"/&gt;

                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="l7"/&gt;

                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:Include&gt;

                                    &lt;L7p:PolicyGuid stringValue="8f33b165-bc16-4959-a524-aba67aff3cdf"/&gt;
                                    &lt;/L7p:Include&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Cast to message type for XPath"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:Base64Expression stringValue="JHtwb2xpY3kueG1sLnJlc3VsdH0="/&gt;

                                    &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;

                                    &lt;L7p:DataType variableDataType="message"/&gt;

                                    &lt;L7p:VariableToSet stringValue="policy.xml"/&gt;
                                    &lt;/L7p:SetVariable&gt;

                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Extract all of the ${element.name} objects"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:VariablePrefix stringValue="assertion"/&gt;

                                    &lt;L7p:XmlMsgSrc stringValue="policy.xml"/&gt;

                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;

                                    &lt;L7p:Expression stringValue="//*[name()=$element.name]"/&gt;

                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="L7p"/&gt;

                                    &lt;L7p:value stringValue="http://www.layer7tech.com/ws/policy"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_2_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:Base64Expression stringValue="ZmFsc2U="/&gt;

                                    &lt;L7p:VariableToSet stringValue="assertion.break"/&gt;
                                    &lt;/L7p:SetVariable&gt;

                                    &lt;L7p:ForEachLoop
                                    L7p:Usage="Required"
                                    loopVariable="assertion.elements" variablePrefix="assertion"&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:Base64Expression stringValue="JHthc3NlcnRpb24uY3VycmVudH0="/&gt;

                                    &lt;L7p:VariableToSet stringValue="assertion.xml"/&gt;
                                    &lt;/L7p:SetVariable&gt;

                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;L7p:Regex&gt;

                                    &lt;L7p:AutoTarget booleanValue="false"/&gt;

                                    &lt;L7p:OtherTargetMessageVariable stringValue="assertion.xml"/&gt;

                                    &lt;L7p:Regex stringValue="&amp;lt;L7p:KeyAlias stringValue="/&gt;

                                    &lt;L7p:Replacement stringValue=""/&gt;

                                    &lt;L7p:Target target="OTHER"/&gt;
                                    &lt;/L7p:Regex&gt;

                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:Include&gt;

                                    &lt;L7p:PolicyGuid stringValue="8f33b165-bc16-4959-a524-aba67aff3cdf"/&gt;
                                    &lt;/L7p:Include&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:Base64Expression stringValue="JHtzb3VyY2VUeXBlLnJlc3VsdH06ICR7Zm9sZGVyUGF0aC5yZXN1bHR9JHtuYW1lLnJlc3VsdH0="/&gt;

                                    &lt;L7p:VariableToSet stringValue="cachekey"/&gt;
                                    &lt;/L7p:SetVariable&gt;

                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;

                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:CacheLookup&gt;

                                    &lt;L7p:CacheEntryKey stringValue="${cacheKey}"/&gt;

                                    &lt;L7p:CacheId stringValue="dependers-${requestid}"/&gt;

                                    &lt;L7p:ContentTypeOverride stringValue=""/&gt;

                                    &lt;L7p:OtherTargetMessageVariable stringValue="depender"/&gt;

                                    &lt;L7p:Target target="OTHER"/&gt;
                                    &lt;/L7p:CacheLookup&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;

                                    &lt;L7p:Detail stringValue="===&gt; Found in cache, appending assertion and recaching"/&gt;

                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Cast to string and append assertion name"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:Base64Expression stringValue="JHtkZXBlbmRlci5tYWlucGFydH0sICR7ZWxlbWVudC5uYW1lfQ=="/&gt;

                                    &lt;L7p:VariableToSet stringValue="depender"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:CacheStorage&gt;

                                    &lt;L7p:CacheEntryKey stringValue="${cacheKey}"/&gt;

                                    &lt;L7p:CacheId stringValue="dependers-${requestid}"/&gt;

                                    &lt;L7p:MaxEntries stringValue="500"/&gt;

                                    &lt;L7p:OtherTargetMessageVariable stringValue="depender"/&gt;

                                    &lt;L7p:StoreSoapFaults booleanValue="true"/&gt;

                                    &lt;L7p:Target target="OTHER"/&gt;
                                    &lt;/L7p:CacheStorage&gt;
                                    &lt;L7p:assertionComment&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Found in cache, so append"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;

                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:Base64Expression stringValue="JHtzb3VyY2VUeXBlLnJlc3VsdH06ICR7Zm9sZGVyUGF0aC5yZXN1bHR9JHtuYW1lLnJlc3VsdH0gKCR7ZWxlbWVudC5uYW1lfQ=="/&gt;

                                    &lt;L7p:VariableToSet stringValue="depender"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;

                                    &lt;L7p:Detail stringValue="===&gt; Not found in cache, initialising ${cacheKey}"/&gt;

                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:CacheStorage&gt;

                                    &lt;L7p:CacheEntryKey stringValue="${cacheKey}"/&gt;

                                    &lt;L7p:CacheId stringValue="dependers-${requestid}"/&gt;

                                    &lt;L7p:MaxEntries stringValue="500"/&gt;

                                    &lt;L7p:OtherTargetMessageVariable stringValue="depender"/&gt;

                                    &lt;L7p:StoreSoapFaults booleanValue="true"/&gt;

                                    &lt;L7p:Target target="OTHER"/&gt;
                                    &lt;/L7p:CacheStorage&gt;
                                    &lt;L7p:ManipulateMultiValuedVariable&gt;

                                    &lt;L7p:SourceVariableName stringValue="cacheKey"/&gt;

                                    &lt;L7p:TargetVariableName stringValue="dependers.found"/&gt;
                                    &lt;/L7p:ManipulateMultiValuedVariable&gt;
                                    &lt;L7p:assertionComment&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Not found in cache, so initialise"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:assertionComment&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Append assertion to depender if found, else initialise in cache"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:Base64Expression stringValue="dHJ1ZQ=="/&gt;

                                    &lt;L7p:VariableToSet stringValue="assertion.break"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:assertionComment&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// No L7p:KeyAlias element, so must use default private key"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:assertionComment&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Check if no L7p:KeyAlias elements are present in assertion's XML"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;/L7p:ForEachLoop&gt;
                                    &lt;L7p:assertionComment&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Look for matching assertions from the policy"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:TrueAssertion/&gt;
                                    &lt;L7p:assertionComment&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Look for matching assertions from the policy, never fail"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;/L7p:ForEachLoop&gt;
                                    &lt;L7p:assertionComment&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Search for ${element.name} instances"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:TrueAssertion/&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Search for ${element.name} instances, never fail"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;/L7p:ForEachLoop&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Check if default then look for possible assertions"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:TrueAssertion/&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// If default, check for assertions that might use it but don't explicitly declare it"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:Detail stringValue="==&gt; Building dependers.list from cache"/&gt;
                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:ForEachLoop
                                    L7p:Usage="Required"
                                    loopVariable="dependers.found" variablePrefix="depender"&gt;
                                    &lt;L7p:CacheLookup&gt;
                                    &lt;L7p:CacheEntryKey stringValue="${depender.current}"/&gt;
                                    &lt;L7p:CacheId stringValue="dependers-${requestid}"/&gt;
                                    &lt;L7p:ContentTypeOverride stringValue=""/&gt;

                                    &lt;L7p:OtherTargetMessageVariable stringValue="depender"/&gt;
                                    &lt;L7p:Target target="OTHER"/&gt;
                                    &lt;/L7p:CacheLookup&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="JHtkZXBlbmRlci5tYWlucGFydH0p"/&gt;
                                    &lt;L7p:VariableToSet stringValue="depender"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:ManipulateMultiValuedVariable&gt;
                                    &lt;L7p:SourceVariableName stringValue="depender"/&gt;
                                    &lt;L7p:TargetVariableName stringValue="dependers.list"/&gt;
                                    &lt;/L7p:ManipulateMultiValuedVariable&gt;
                                    &lt;/L7p:ForEachLoop&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Flesh out dependers.list from cache"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Detail stringValue="==&gt; Searching websocket connection definitions"/&gt;
                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:Encapsulated&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// GET genericEntities"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="c8a5a0d5-1ae2-4144-b538-5c311efc1560"/&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Call Restman"/&gt;
                                    &lt;L7p:Parameters mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="element"/&gt;
                                    &lt;L7p:value stringValue="GenericEntity"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="message"/&gt;
                                    &lt;L7p:value stringValue=""/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="method"/&gt;
                                    &lt;L7p:value stringValue="GET"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="resource"/&gt;
                                    &lt;L7p:value stringValue="genericEntities"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Parameters&gt;
                                    &lt;/L7p:Encapsulated&gt;
                                    &lt;L7p:Encapsulated&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Want a sorted list of generic entities for the display"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="6db56c26-58d7-4ffc-8fa5-01b525d5468b"/&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: List Generic Entities"/&gt;
                                    &lt;L7p:Parameters mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="cacheAge"/&gt;
                                    &lt;L7p:value stringValue="${cacheAge}"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="refresh"/&gt;
                                    &lt;L7p:value stringValue="${request.http.parameter.refresh}"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Parameters&gt;
                                    &lt;/L7p:Encapsulated&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Extract list of ids to search through"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:VariablePrefix stringValue="candidateIds"/&gt;
                                    &lt;L7p:XmlMsgSrc stringValue="genericEntities.sorted"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/GenericEntities/GenericEntity/@id"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:ForEachLoop
                                    L7p:Usage="Required"
                                    loopVariable="candidateIds.results" variablePrefix="candidateId"&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Get the XML definition"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:VariablePrefix stringValue="genericEntity.xml"/&gt;

                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;

                                    &lt;L7p:Expression stringValue="//l7:GenericEntity[@id=$candidateId.current]/l7:ValueXml"/&gt;

                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="s"/&gt;

                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="l7"/&gt;

                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_2_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:Base64Expression stringValue="JHtnZW5lcmljRW50aXR5LnhtbC5yZXN1bHR9"/&gt;

                                    &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;

                                    &lt;L7p:DataType variableDataType="message"/&gt;

                                    &lt;L7p:VariableToSet stringValue="genericEntity.xml"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:VariablePrefix stringValue=""/&gt;

                                    &lt;L7p:XmlMsgSrc stringValue="genericEntity.xml"/&gt;

                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;

                                    &lt;L7p:Expression stringValue="/java/object/void[@property='inboundPrivateKeyAlias' and string=$alias.result]/../void[@property='inboundPrivateKeyId']/object[@class='com.l7tech.objectmodel.Goid' and string=$keystore.result]"/&gt;

                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="s"/&gt;

                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="l7"/&gt;

                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_2_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:VariablePrefix stringValue=""/&gt;

                                    &lt;L7p:XmlMsgSrc stringValue="genericEntity.xml"/&gt;

                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;

                                    &lt;L7p:Expression stringValue="/java/object/void[@property='outboundPrivateKeyAlias' and string=$alias.result]/../void[@property='outboundPrivateKeyId']/object[@class='com.l7tech.objectmodel.Goid' and string=$keystore.result]"/&gt;

                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="s"/&gt;

                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="l7"/&gt;

                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_2_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:assertionComment&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Check for inbound or outbound use of private key"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Get name of this websocket connection definition"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:VariablePrefix stringValue="name"/&gt;

                                    &lt;L7p:XmlMsgSrc stringValue="genericEntities.sorted"/&gt;

                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;

                                    &lt;L7p:Expression stringValue="/GenericEntities/GenericEntity[@id=$candidateId.current]/Name"/&gt;

                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="l7"/&gt;

                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:Base64Expression stringValue="V0VCU09DS0VUIENPTk5FQ1RJT046ICR7bmFtZS5yZXN1bHR9"/&gt;

                                    &lt;L7p:VariableToSet stringValue="depender"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:ManipulateMultiValuedVariable&gt;

                                    &lt;L7p:SourceVariableName stringValue="depender"/&gt;

                                    &lt;L7p:TargetVariableName stringValue="dependers.list"/&gt;
                                    &lt;/L7p:ManipulateMultiValuedVariable&gt;
                                    &lt;L7p:assertionComment&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Check the candidate object is a depender"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:TrueAssertion/&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Check the candidate object is a depender, never fail"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;/L7p:ForEachLoop&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Search for references in websocket connection definitions"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:TrueAssertion/&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Search for references in websocket connection definitions, never fail"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Detail stringValue="==&gt; Searching active connector definitions"/&gt;
                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:Encapsulated&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// GET activeConnectors"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="c8a5a0d5-1ae2-4144-b538-5c311efc1560"/&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Call Restman"/&gt;
                                    &lt;L7p:Parameters mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="element"/&gt;
                                    &lt;L7p:value stringValue=""/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="message"/&gt;
                                    &lt;L7p:value stringValue=""/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="method"/&gt;
                                    &lt;L7p:value stringValue="GET"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="resource"/&gt;
                                    &lt;L7p:value stringValue="activeConnectors"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Parameters&gt;
                                    &lt;/L7p:Encapsulated&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Obtain list of depender ids"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:VariablePrefix stringValue="dependerIds"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="//l7:ActiveConnector/l7:Properties/l7:Property[@key='MqNativeIsSslKeystoreUsed' and l7:StringValue='true']/../l7:Property[@key='MqNativeSslKeystoreAlias' and l7:StringValue=$alias.result]/../l7:Property[@key='MqNativeSslKeystoreId' and l7:StringValue=$keystore.result]/../../@id"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_2_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:Encapsulated&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Want a sorted list of active connectors for the display"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="48b49f89-16fe-4b7a-bb66-02d86ad236d8"/&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: List Active Connectors"/&gt;
                                    &lt;L7p:Parameters mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="cacheAge"/&gt;
                                    &lt;L7p:value stringValue="${cacheAge}"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="refresh"/&gt;
                                    &lt;L7p:value stringValue="${request.http.parameter.refresh}"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Parameters&gt;
                                    &lt;/L7p:Encapsulated&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Extract list of ids to search through"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:VariablePrefix stringValue="candidateIds"/&gt;
                                    &lt;L7p:XmlMsgSrc stringValue="activeConnectors.sorted"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/ActiveConnectors/ActiveConnector/@id"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:ForEachLoop
                                    L7p:Usage="Required"
                                    loopVariable="candidateIds.results" variablePrefix="candidateId"&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:ComparisonAssertion&gt;

                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;

                                    &lt;L7p:Expression1 stringValue="${dependerIds.results}"/&gt;

                                    &lt;L7p:Expression2 stringValue="${candidateId.current}"/&gt;

                                    &lt;L7p:MultivaluedComparison multivaluedComparison="ANY"/&gt;

                                    &lt;L7p:Predicates predicates="included"&gt;

                                    &lt;L7p:item binary="included"&gt;

                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;

                                    &lt;L7p:RightValue stringValue="${candidateId.current}"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                    &lt;/L7p:ComparisonAssertion&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Get the name"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:VariablePrefix stringValue="name"/&gt;

                                    &lt;L7p:XmlMsgSrc stringValue="activeConnectors.sorted"/&gt;

                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;

                                    &lt;L7p:Expression stringValue="/ActiveConnectors/ActiveConnector[@id=$candidateId.current]/Name"/&gt;

                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="s"/&gt;

                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="l7"/&gt;

                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_2_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Get the type"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:VariablePrefix stringValue="type"/&gt;

                                    &lt;L7p:XmlMsgSrc stringValue="activeConnectors.sorted"/&gt;

                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;

                                    &lt;L7p:Expression stringValue="/ActiveConnectors/ActiveConnector[@id=$candidateId.current]/Type"/&gt;

                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="s"/&gt;

                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="l7"/&gt;

                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_2_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:Base64Expression stringValue="QUNUSVZFIENPTk5FQ1RPUjogJHtuYW1lLnJlc3VsdH0gKCR7dHlwZS5yZXN1bHR9KQ=="/&gt;

                                    &lt;L7p:VariableToSet stringValue="depender"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:ManipulateMultiValuedVariable&gt;

                                    &lt;L7p:SourceVariableName stringValue="depender"/&gt;

                                    &lt;L7p:TargetVariableName stringValue="dependers.list"/&gt;
                                    &lt;/L7p:ManipulateMultiValuedVariable&gt;
                                    &lt;L7p:assertionComment&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Check the candidate object is a depender"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:TrueAssertion/&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Check the candidate object is a depender, never fail"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;/L7p:ForEachLoop&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Search for references in active connector definitions"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:TrueAssertion/&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Search for references in active connector definitions, never fail"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${dependers.list.length}"/&gt;
                                    &lt;L7p:Expression2 stringValue="1"/&gt;
                                    &lt;L7p:Operator operator="GE"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;

                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="GE"/&gt;
                                    &lt;L7p:RightValue stringValue="1"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                    &lt;/L7p:ComparisonAssertion&gt;
                                    &lt;L7p:ForEachLoop
                                    L7p:Usage="Required"
                                    loopVariable="dependers.list" variablePrefix="depender"&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:Base64Expression stringValue="JHtkZXBlbmRlcnMuaHRtbH0NCiAgPGxpPiR7ZGVwZW5kZXIuY3VycmVudH08L2xpPg=="/&gt;
                                    &lt;L7p:VariableToSet stringValue="dependers.html"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;/L7p:ForEachLoop&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="JHtodG1sQ29udGVudH0NCg0KPHA+VGhlIGZvbGxvd2luZyBvYmplY3RzIHJlZmVyZW5jZSB0aGlzIHByaXZhdGUga2V5IChleHBsaWNpdCBwcml2YXRlIGtleSByZWZlcmVuY2VzIGluIDxiPmJvbGQ8L2I+KTo8L3A+DQo8dWw+JHtkZXBlbmRlcnMuaHRtbH08L3VsPg=="/&gt;
                                    &lt;L7p:VariableToSet stringValue="htmlContent"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${dependers.list} has content"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="JHtodG1sQ29udGVudH0NCjxwPk5vdGhpbmcgd2FzIGZvdW5kIHRoYXQgcmVmZXJlbmNlcyB0aGlzIHByaXZhdGUga2V5PC9wPg=="/&gt;
                                    &lt;L7p:VariableToSet stringValue="htmlContent"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Append ${dependers.html} to ${htmlContent} if ${dependers.list} has any entries"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${id} matches so retrieve dependers"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                &lt;/wsp:All&gt;
                                &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Do reverse dependency search if id matches"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt;
                            &lt;/wsp:OneOrMore&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cycle through each object to add to display and check if search must be run"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/L7p:ForEachLoop&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${objectType} == &amp;quot;Private Key&amp;quot;"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${objectType}"/&gt;
                            &lt;L7p:Expression2 stringValue="Secure Password"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="Secure Password"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:AuditDetailAssertion&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:Detail stringValue="======&gt; Listing ${objectType} objects"/&gt;
                            &lt;L7p:Level stringValue="FINE"/&gt;
                        &lt;/L7p:AuditDetailAssertion&gt;
                        &lt;L7p:Encapsulated&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get list of objectTypes to display and search for references"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="eeb96501-f75c-4078-bcf7-98bc2c52bfe8"/&gt;
                            &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: List Secure Passwords"/&gt;
                            &lt;L7p:Parameters mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="cacheAge"/&gt;
                                    &lt;L7p:value stringValue="${cacheAge}"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="refresh"/&gt;
                                    &lt;L7p:value stringValue="${request.http.parameter.refresh}"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Parameters&gt;
                        &lt;/L7p:Encapsulated&gt;
                        &lt;L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get list of ids"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:VariablePrefix stringValue="ids"/&gt;
                            &lt;L7p:XmlMsgSrc stringValue="securePasswords.sorted"/&gt;
                            &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                &lt;L7p:Expression stringValue="/SecurePasswords/SecurePassword/@id"/&gt;
                                &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Namespaces&gt;
                                &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                            &lt;/L7p:XpathExpression&gt;
                        &lt;/L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:ForEachLoop L7p:Usage="Required"
                            loopVariable="ids.results" variablePrefix="id"&gt;
                            &lt;L7p:ResponseXpathAssertion&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get name of the object for display"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:VariablePrefix stringValue="name"/&gt;
                                &lt;L7p:XmlMsgSrc stringValue="securePasswords.sorted"/&gt;
                                &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/SecurePasswords/SecurePassword[@id=$id.current]/Name"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                &lt;/L7p:XpathExpression&gt;
                            &lt;/L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:AuditDetailAssertion&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:Detail stringValue="=====&gt; Processing ${objectType}: ${name.result} (${id.current})"/&gt;
                                &lt;L7p:Level stringValue="FINE"/&gt;
                            &lt;/L7p:AuditDetailAssertion&gt;
                            &lt;L7p:Encapsulated&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// name.result"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="f6b19229-a705-4c48-bc78-3975564a1a9a"/&gt;
                                &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Escape HTML String"/&gt;
                                &lt;L7p:Parameters mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="escapedString"/&gt;
                                    &lt;L7p:value stringValue="${name.result}"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Parameters&gt;
                            &lt;/L7p:Encapsulated&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="JHtodG1sQ29udGVudH0NCjxhIGlkPSIke2lkLmN1cnJlbnR9Ii8+PGEgaHJlZj0iJHtyZXF1ZXN0LnVybC5wYXRofT9vYmplY3RUeXBlPSR7b2JqZWN0VHlwZX0maWQ9JHtpZC5jdXJyZW50fSMke2lkLmN1cnJlbnR9IiBvbkNsaWNrPSJzZXRSZWZyZXNoKHRoaXMpIj4ke2VzY2FwZWRTdHJpbmd9PC9hPjxici8+"/&gt;
                                &lt;L7p:VariableToSet stringValue="htmlContent"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:Expression1 stringValue="${id}"/&gt;
                                    &lt;L7p:Expression2 stringValue="${id.current}"/&gt;
                                    &lt;L7p:Negate booleanValue="true"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:RightValue stringValue="${id.current}"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt;
                                &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Detail stringValue="====&gt; ID matched, processing for dependencies =================================="/&gt;
                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="e3NlY3Bhc3MuJHtuYW1lLnJlc3VsdH0ucGxhaW50ZXh0fQ=="/&gt;
                                    &lt;L7p:VariableToSet stringValue="referenceString"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Prepend $ to the string we will search for"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Base64Expression stringValue="JCR7cmVmZXJlbmNlU3RyaW5nfQ=="/&gt;
                                    &lt;L7p:VariableToSet stringValue="referenceString"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Detail stringValue="===&gt; Searching objects for references (${referenceString})"/&gt;
                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Detail stringValue="==&gt; Searching policy XML for non-encoded references"/&gt;
                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Check if this policy has a direct reference to the secure password"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:VariablePrefix stringValue="policies"/&gt;
                                    &lt;L7p:XmlMsgSrc stringValue="allPolicyXML"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="//AllPolicyXML/PolicyXML[contains(.,$referenceString)]"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:ForEachLoop
                                    L7p:Usage="Required"
                                    loopVariable="policies.elements" variablePrefix="policy"&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Cast to message type for XPath"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:Base64Expression stringValue="JHtwb2xpY3kuY3VycmVudH0="/&gt;
                                    &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                                    &lt;L7p:DataType variableDataType="message"/&gt;
                                    &lt;L7p:VariableToSet stringValue="policyObject.xml"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:Include&gt;
                                    &lt;L7p:PolicyGuid stringValue="8f33b165-bc16-4959-a524-aba67aff3cdf"/&gt;
                                    &lt;/L7p:Include&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:Base64Expression stringValue="JHtzb3VyY2VUeXBlLnJlc3VsdH06ICR7Zm9sZGVyUGF0aC5yZXN1bHR9JHtuYW1lLnJlc3VsdH0gKGluIGRpcmVjdCByZWZlcmVuY2Up"/&gt;
                                    &lt;L7p:VariableToSet stringValue="depender"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:ManipulateMultiValuedVariable&gt;

                                    &lt;L7p:SourceVariableName stringValue="depender"/&gt;

                                    &lt;L7p:TargetVariableName stringValue="dependers.list"/&gt;
                                    &lt;/L7p:ManipulateMultiValuedVariable&gt;
                                    &lt;/L7p:ForEachLoop&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Search for non-encoded references in policy XML"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:TrueAssertion/&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Search for non-encoded references in policy XML, never fail"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Detail stringValue="==&gt; Searching policy XML for encoded references"/&gt;
                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Extract all policy objects that contain Base64Expression or Base64ResponseBody elements"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:VariablePrefix stringValue="policies"/&gt;
                                    &lt;L7p:XmlMsgSrc stringValue="allPolicyXML"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="//AllPolicyXML/PolicyXML[(contains(.,'&amp;lt;L7p:Base64Expression ') or contains(.,'&amp;lt;L7p:Base64ResponseBody '))]"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:ForEachLoop
                                    L7p:Usage="Required"
                                    loopVariable="policies.elements" variablePrefix="policy"&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Cast to message type for XPath"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:Base64Expression stringValue="JHtwb2xpY3kuY3VycmVudH0="/&gt;
                                    &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                                    &lt;L7p:DataType variableDataType="message"/&gt;
                                    &lt;L7p:VariableToSet stringValue="policyObject.xml"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Extract the policy XML from the policy object"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:VariablePrefix stringValue="policy.xml"/&gt;
                                    &lt;L7p:XmlMsgSrc stringValue="policyObject.xml"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/PolicyXML/text()"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;

                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;

                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Cast to message type for XPath"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:Base64Expression stringValue="JHtwb2xpY3kueG1sLnJlc3VsdH0="/&gt;
                                    &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                                    &lt;L7p:DataType variableDataType="message"/&gt;
                                    &lt;L7p:VariableToSet stringValue="policy.xml"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Extract all of the (Base64Expression | Base64ResponseBody)/@stringValue instances for analysis"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:VariablePrefix stringValue="stringValue"/&gt;

                                    &lt;L7p:XmlMsgSrc stringValue="policy.xml"/&gt;

                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;

                                    &lt;L7p:Expression stringValue="(//L7p:Base64Expression | //L7p:Base64ResponseBody)/@stringValue"/&gt;

                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="s"/&gt;

                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="L7p"/&gt;

                                    &lt;L7p:value stringValue="http://www.layer7tech.com/ws/policy"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="wsp"/&gt;

                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/ws/2002/12/policy"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Reset in case we broke out of something earlier"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:Base64Expression stringValue="ZmFsc2U="/&gt;

                                    &lt;L7p:VariableToSet stringValue="stringValue.break"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:ForEachLoop
                                    L7p:Usage="Required"
                                    loopVariable="stringValue.results" variablePrefix="stringValue"&gt;
                                    &lt;L7p:EncodeDecode&gt;

                                    &lt;L7p:SourceVariableName stringValue="stringValue.current"/&gt;

                                    &lt;L7p:TargetDataType variableDataType="string"/&gt;

                                    &lt;L7p:TargetVariableName stringValue="stringValue.current"/&gt;

                                    &lt;L7p:TransformType transformType="BASE64_DECODE"/&gt;
                                    &lt;/L7p:EncodeDecode&gt;

                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;L7p:ComparisonAssertion&gt;

                                    &lt;L7p:Expression1 stringValue="${stringValue.current}"/&gt;

                                    &lt;L7p:Expression2 stringValue="${referenceString}"/&gt;

                                    &lt;L7p:Negate booleanValue="true"/&gt;

                                    &lt;L7p:Operator operator="CONTAINS"/&gt;

                                    &lt;L7p:Predicates predicates="included"&gt;

                                    &lt;L7p:item binary="included"&gt;

                                    &lt;L7p:Negated booleanValue="true"/&gt;

                                    &lt;L7p:Operator operator="CONTAINS"/&gt;

                                    &lt;L7p:RightValue stringValue="${referenceString}"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                    &lt;/L7p:ComparisonAssertion&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:Include&gt;

                                    &lt;L7p:PolicyGuid stringValue="8f33b165-bc16-4959-a524-aba67aff3cdf"/&gt;
                                    &lt;/L7p:Include&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:Base64Expression stringValue="JHtzb3VyY2VUeXBlLnJlc3VsdH06ICR7Zm9sZGVyUGF0aC5yZXN1bHR9JHtuYW1lLnJlc3VsdH0gKGluIEJhc2U2NCBlbmNvZGVkIGF0dHJpYnV0ZSk="/&gt;

                                    &lt;L7p:VariableToSet stringValue="depender"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:ManipulateMultiValuedVariable&gt;

                                    &lt;L7p:SourceVariableName stringValue="depender"/&gt;

                                    &lt;L7p:TargetVariableName stringValue="dependers.list"/&gt;
                                    &lt;/L7p:ManipulateMultiValuedVariable&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Don't need any more"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:Base64Expression stringValue="dHJ1ZQ=="/&gt;

                                    &lt;L7p:VariableToSet stringValue="stringValue.break"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:assertionComment&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Extract id and append to ${dependers.list}"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:assertionComment&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Check if ${stringValue.current} contains ${referenceString}"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;/L7p:ForEachLoop&gt;
                                    &lt;L7p:assertionComment&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Extract Base64Expressions from policy and check for matches"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:TrueAssertion/&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Extract Base64Expressions from policy and check for matches, never fail"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;/L7p:ForEachLoop&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Search for encoded references policy XML"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:TrueAssertion/&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Search for encoded references in policy XML, never fail"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Detail stringValue="==&gt; Searching identity provider definitions"/&gt;
                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:Encapsulated&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Retrieve list of identity providers"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="1ab6158d-33ce-4fa6-a7d8-2b8dc8e31faf"/&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: List Identity Providers"/&gt;
                                    &lt;L7p:Parameters mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="cacheAge"/&gt;
                                    &lt;L7p:value stringValue="${cacheAge}"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="refresh"/&gt;
                                    &lt;L7p:value stringValue="${request.http.parameter.refresh}"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Parameters&gt;
                                    &lt;/L7p:Encapsulated&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Extract list of ids to search through via bundles"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:VariablePrefix stringValue="candidateIds"/&gt;
                                    &lt;L7p:XmlMsgSrc stringValue="identityProviders.sorted"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/IdentityProviders/IdentityProvider[Type='LDAP']/@id"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:ForEachLoop
                                    L7p:Usage="Required"
                                    loopVariable="candidateIds.results" variablePrefix="candidateId"&gt;
                                    &lt;L7p:Encapsulated&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// GET bundle?identityProvider=${candidateId.current}&amp;amp;encryptSecrets=true"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="c8a5a0d5-1ae2-4144-b538-5c311efc1560"/&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Call Restman"/&gt;
                                    &lt;L7p:Parameters mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="element"/&gt;
                                    &lt;L7p:value stringValue=""/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="message"/&gt;
                                    &lt;L7p:value stringValue=""/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="method"/&gt;
                                    &lt;L7p:value stringValue="GET"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="resource"/&gt;
                                    &lt;L7p:value stringValue="bundle?identityProvider=${candidateId.current}&amp;amp;encryptSecrets=true"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Parameters&gt;
                                    &lt;/L7p:Encapsulated&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:VariablePrefix stringValue="name"/&gt;

                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;

                                    &lt;L7p:Expression stringValue="//l7:IdentityProvider/l7:Extension/l7:LdapIdentityProviderDetail[l7:BindPassword=$referenceString]/../../l7:Name"/&gt;

                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="s"/&gt;

                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="l7"/&gt;

                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:VariablePrefix stringValue="type"/&gt;

                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;

                                    &lt;L7p:Expression stringValue="//l7:IdentityProvider/l7:Extension/l7:LdapIdentityProviderDetail[l7:BindPassword=$referenceString]/../../l7:IdentityProviderType"/&gt;

                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="s"/&gt;

                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="l7"/&gt;

                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:Base64Expression stringValue="SURFTlRJVFkgUFJPVklERVI6ICR7bmFtZS5yZXN1bHR9ICgke3R5cGUucmVzdWx0fSk="/&gt;

                                    &lt;L7p:VariableToSet stringValue="depender"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:ManipulateMultiValuedVariable&gt;

                                    &lt;L7p:SourceVariableName stringValue="depender"/&gt;

                                    &lt;L7p:TargetVariableName stringValue="dependers.list"/&gt;
                                    &lt;/L7p:ManipulateMultiValuedVariable&gt;
                                    &lt;L7p:assertionComment&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Check the candidate object for the reference"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:TrueAssertion/&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Check the candidate object for the reference, never fail"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;/L7p:ForEachLoop&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Search for references in identity provider definitions"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:TrueAssertion/&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Search for references in identity provider defintions, never fail"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Detail stringValue="==&gt; Searching JMS destination definitions"/&gt;
                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:Encapsulated&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Retrieve list of JMS destinations"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="53bc61d8-f0d0-4024-b09c-61fd5c9ef33e"/&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: List JMS Destinations"/&gt;
                                    &lt;L7p:Parameters mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="cacheAge"/&gt;
                                    &lt;L7p:value stringValue="${cacheAge}"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="refresh"/&gt;
                                    &lt;L7p:value stringValue="${request.http.parameter.refresh}"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Parameters&gt;
                                    &lt;/L7p:Encapsulated&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Extract list of ids to search through via bundles"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:VariablePrefix stringValue="candidateIds"/&gt;
                                    &lt;L7p:XmlMsgSrc stringValue="jmsDestinations.sorted"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/JMSDestinations/JMSDestination/@id"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Reset in case we broke out of something earlier"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Base64Expression stringValue="ZmFsc2U="/&gt;
                                    &lt;L7p:VariableToSet stringValue="candidateId.break"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:ForEachLoop
                                    L7p:Usage="Required"
                                    loopVariable="candidateIds.results" variablePrefix="candidateId"&gt;
                                    &lt;L7p:Encapsulated&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// GET bundle?jmsDestination=${candidateId.current}&amp;amp;encryptSecrets=true"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="c8a5a0d5-1ae2-4144-b538-5c311efc1560"/&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Call Restman"/&gt;
                                    &lt;L7p:Parameters mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="element"/&gt;
                                    &lt;L7p:value stringValue=""/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="message"/&gt;
                                    &lt;L7p:value stringValue=""/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="method"/&gt;
                                    &lt;L7p:value stringValue="GET"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="resource"/&gt;
                                    &lt;L7p:value stringValue="bundle?jmsDestination=${candidateId.current}&amp;amp;encryptSecrets=true"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Parameters&gt;
                                    &lt;/L7p:Encapsulated&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Might show up in several places, so get id in second XPath"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:VariablePrefix stringValue=""/&gt;

                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;

                                    &lt;L7p:Expression stringValue="//l7:JMSDestinationDetail//l7:Property[l7:StringValue=$referenceString]"/&gt;

                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="s"/&gt;

                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="l7"/&gt;

                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_2_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:VariablePrefix stringValue="dependerId"/&gt;

                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;

                                    &lt;L7p:Expression stringValue="//l7:JMSDestination/@id"/&gt;

                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="s"/&gt;

                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="l7"/&gt;

                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Get the name"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:VariablePrefix stringValue="name"/&gt;

                                    &lt;L7p:XmlMsgSrc stringValue="jmsDestinations.sorted"/&gt;

                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;

                                    &lt;L7p:Expression stringValue="/JMSDestinations/JMSDestination[@id=$dependerId.result]/Name"/&gt;

                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="s"/&gt;

                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="l7"/&gt;

                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_2_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Get the direction"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:VariablePrefix stringValue="direction"/&gt;

                                    &lt;L7p:XmlMsgSrc stringValue="jmsDestinations.sorted"/&gt;

                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;

                                    &lt;L7p:Expression stringValue="/JMSDestinations/JMSDestination[@id=$dependerId.result]/Direction"/&gt;

                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="s"/&gt;

                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="l7"/&gt;

                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_2_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:Base64Expression stringValue="Sk1TIERFU1RJTkFUSU9OOiAke25hbWUucmVzdWx0fSAoJHtkaXJlY3Rpb24ucmVzdWx0fSk="/&gt;

                                    &lt;L7p:VariableToSet stringValue="depender"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:ManipulateMultiValuedVariable&gt;

                                    &lt;L7p:SourceVariableName stringValue="depender"/&gt;

                                    &lt;L7p:TargetVariableName stringValue="dependers.list"/&gt;
                                    &lt;/L7p:ManipulateMultiValuedVariable&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Don't need any more"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:Base64Expression stringValue="dHJ1ZQ=="/&gt;

                                    &lt;L7p:VariableToSet stringValue="candidateId.break"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:assertionComment&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Check the candidate object for the reference"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:TrueAssertion/&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Check the candidate object for the reference, never fail"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;/L7p:ForEachLoop&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Search for references in JMS destination definitions"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:TrueAssertion/&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Search for references in JMS destination definitions, never fail"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Detail stringValue="==&gt; Searching email listener definitions"/&gt;
                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:Encapsulated&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// GET emailListeners"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="c8a5a0d5-1ae2-4144-b538-5c311efc1560"/&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Call Restman"/&gt;
                                    &lt;L7p:Parameters mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="element"/&gt;
                                    &lt;L7p:value stringValue=""/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="message"/&gt;
                                    &lt;L7p:value stringValue=""/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="method"/&gt;
                                    &lt;L7p:value stringValue="GET"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="resource"/&gt;
                                    &lt;L7p:value stringValue="emailListeners"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Parameters&gt;
                                    &lt;/L7p:Encapsulated&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Obtain list of depender ids"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:VariablePrefix stringValue="dependerIds"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="//l7:EmailListener[l7:Password=$referenceString]/@id"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_2_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:Encapsulated&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Want a sorted list of email listeners for the display"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="33877201-e5e7-4d81-a8d2-34c1250204ec"/&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: List Email Listeners"/&gt;
                                    &lt;L7p:Parameters mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="cacheAge"/&gt;
                                    &lt;L7p:value stringValue="${cacheAge}"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="refresh"/&gt;
                                    &lt;L7p:value stringValue="${request.http.parameter.refresh}"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Parameters&gt;
                                    &lt;/L7p:Encapsulated&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Extract list of ids to search through"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:VariablePrefix stringValue="candidateIds"/&gt;
                                    &lt;L7p:XmlMsgSrc stringValue="emailListeners.sorted"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/EmailListeners/EmailListener/@id"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:ForEachLoop
                                    L7p:Usage="Required"
                                    loopVariable="candidateIds.results" variablePrefix="candidateId"&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:ComparisonAssertion&gt;

                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;

                                    &lt;L7p:Expression1 stringValue="${dependerIds.results}"/&gt;

                                    &lt;L7p:Expression2 stringValue="${candidateId.current}"/&gt;

                                    &lt;L7p:MultivaluedComparison multivaluedComparison="ANY"/&gt;

                                    &lt;L7p:Predicates predicates="included"&gt;

                                    &lt;L7p:item binary="included"&gt;

                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;

                                    &lt;L7p:RightValue stringValue="${candidateId.current}"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                    &lt;/L7p:ComparisonAssertion&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Get the name"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:VariablePrefix stringValue="name"/&gt;

                                    &lt;L7p:XmlMsgSrc stringValue="emailListeners.sorted"/&gt;

                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;

                                    &lt;L7p:Expression stringValue="/EmailListeners/EmailListener[@id=$candidateId.current]/Name"/&gt;

                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="s"/&gt;

                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="l7"/&gt;

                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_2_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Get the type"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:VariablePrefix stringValue="type"/&gt;

                                    &lt;L7p:XmlMsgSrc stringValue="emailListeners.sorted"/&gt;

                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;

                                    &lt;L7p:Expression stringValue="/EmailListeners/EmailListener[@id=$candidateId.current]/Type"/&gt;

                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="s"/&gt;

                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="l7"/&gt;

                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_2_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:Base64Expression stringValue="RU1BSUwgTElTVEVORVI6ICR7bmFtZS5yZXN1bHR9ICgke3R5cGUucmVzdWx0fSk="/&gt;

                                    &lt;L7p:VariableToSet stringValue="depender"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:ManipulateMultiValuedVariable&gt;

                                    &lt;L7p:SourceVariableName stringValue="depender"/&gt;

                                    &lt;L7p:TargetVariableName stringValue="dependers.list"/&gt;
                                    &lt;/L7p:ManipulateMultiValuedVariable&gt;
                                    &lt;L7p:assertionComment&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Check the candidate object is a depender"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:TrueAssertion/&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Check the candidate object is a depender, never fail"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;/L7p:ForEachLoop&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Search for references in email listener definitions"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:TrueAssertion/&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Search for references in email listener definitions, never fail"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Detail stringValue="==&gt; Searching HTTP configuration definitions"/&gt;
                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:Encapsulated&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// GET httpConfigurations"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="c8a5a0d5-1ae2-4144-b538-5c311efc1560"/&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Call Restman"/&gt;
                                    &lt;L7p:Parameters mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="element"/&gt;
                                    &lt;L7p:value stringValue=""/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="message"/&gt;
                                    &lt;L7p:value stringValue=""/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="method"/&gt;
                                    &lt;L7p:value stringValue="GET"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="resource"/&gt;
                                    &lt;L7p:value stringValue="httpConfigurations"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Parameters&gt;
                                    &lt;/L7p:Encapsulated&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Obtain list of depender ids"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:VariablePrefix stringValue="dependerIds"/&gt;

                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;

                                    &lt;L7p:Expression stringValue="//l7:HttpConfiguration[l7:PasswordId=$id.current]/@id"/&gt;

                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="s"/&gt;

                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="l7"/&gt;

                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_2_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:ManipulateMultiValuedVariable&gt;

                                    &lt;L7p:SourceVariableName stringValue="dependerIds.results"/&gt;

                                    &lt;L7p:TargetVariableName stringValue="dependerIds"/&gt;
                                    &lt;/L7p:ManipulateMultiValuedVariable&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Obtain list of depender ids where credential password matches"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:TrueAssertion/&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Obtain list of depender ids where credential password matches, never fail"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Obtain list of depender ids"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:VariablePrefix stringValue="dependerIds"/&gt;

                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;

                                    &lt;L7p:Expression stringValue="//l7:HttpConfiguration/l7:ProxyConfiguration[l7:PasswordId=$id.current]/../@id"/&gt;

                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="s"/&gt;

                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="l7"/&gt;

                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_2_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:ManipulateMultiValuedVariable&gt;

                                    &lt;L7p:SourceVariableName stringValue="dependerIds.results"/&gt;

                                    &lt;L7p:TargetVariableName stringValue="dependerIds"/&gt;
                                    &lt;/L7p:ManipulateMultiValuedVariable&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Obtain list of depender ids where proxy password matches"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:TrueAssertion/&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Obtain list of depender ids where proxy password matches, never fail"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${dependerIds.length}"/&gt;
                                    &lt;L7p:Expression2 stringValue="0"/&gt;
                                    &lt;L7p:Negate booleanValue="true"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;

                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:RightValue stringValue="0"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                    &lt;/L7p:ComparisonAssertion&gt;
                                    &lt;L7p:Encapsulated&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Want a sorted list of HTTP configurations for the display"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="8ad8d013-cb3d-4ab1-b92d-8ad943148b5f"/&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: List HTTP Configurations"/&gt;
                                    &lt;L7p:Parameters mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="cacheAge"/&gt;
                                    &lt;L7p:value stringValue="${cacheAge}"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="refresh"/&gt;
                                    &lt;L7p:value stringValue="${request.http.parameter.refresh}"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Parameters&gt;
                                    &lt;/L7p:Encapsulated&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Extract list of ids to search through"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:VariablePrefix stringValue="candidateIds"/&gt;
                                    &lt;L7p:XmlMsgSrc stringValue="httpConfigurations.sorted"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/HTTPConfigurations/HTTPConfiguration/@id"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:ForEachLoop
                                    L7p:Usage="Required"
                                    loopVariable="candidateIds.results" variablePrefix="candidateId"&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:ComparisonAssertion&gt;

                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;

                                    &lt;L7p:Expression1 stringValue="${dependerIds}"/&gt;

                                    &lt;L7p:Expression2 stringValue="${candidateId.current}"/&gt;

                                    &lt;L7p:MultivaluedComparison multivaluedComparison="ANY"/&gt;

                                    &lt;L7p:Predicates predicates="included"&gt;

                                    &lt;L7p:item binary="included"&gt;

                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;

                                    &lt;L7p:RightValue stringValue="${candidateId.current}"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                    &lt;/L7p:ComparisonAssertion&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Get the name"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:VariablePrefix stringValue="host"/&gt;

                                    &lt;L7p:XmlMsgSrc stringValue="httpConfigurations.sorted"/&gt;

                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;

                                    &lt;L7p:Expression stringValue="/HTTPConfigurations/HTTPConfiguration[@id=$candidateId.current]/Host"/&gt;

                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="s"/&gt;

                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="l7"/&gt;

                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_2_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:Base64Expression stringValue="SFRUUCBDT05GSUdVUkFUSU9OOiAke2hvc3QucmVzdWx0fQ=="/&gt;

                                    &lt;L7p:VariableToSet stringValue="depender"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:ManipulateMultiValuedVariable&gt;

                                    &lt;L7p:SourceVariableName stringValue="depender"/&gt;

                                    &lt;L7p:TargetVariableName stringValue="dependers.list"/&gt;
                                    &lt;/L7p:ManipulateMultiValuedVariable&gt;
                                    &lt;L7p:assertionComment&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Check the candidate object is a depender"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:TrueAssertion/&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Check the candidate object is a depender, never fail"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;/L7p:ForEachLoop&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Search for references in HTTP configuration definitions"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:TrueAssertion/&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Search for references in HTTP configuration definitions, never fail"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Detail stringValue="==&gt; Searching active connector definitions"/&gt;
                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:Encapsulated&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// GET activeConnectors"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="c8a5a0d5-1ae2-4144-b538-5c311efc1560"/&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Call Restman"/&gt;
                                    &lt;L7p:Parameters mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="element"/&gt;
                                    &lt;L7p:value stringValue=""/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="message"/&gt;
                                    &lt;L7p:value stringValue=""/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="method"/&gt;
                                    &lt;L7p:value stringValue="GET"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="resource"/&gt;
                                    &lt;L7p:value stringValue="activeConnectors"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Parameters&gt;
                                    &lt;/L7p:Encapsulated&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Obtain list of depender ids"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:VariablePrefix stringValue="dependerIds"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="//l7:ActiveConnector/l7:Properties/l7:Property[(@key='MqNativeSecurePasswordOid' or @key='SftpSecurePasswordOid' or @key='SftpSecurePasswordKeyOid') and l7:StringValue=$id.current]/../../@id"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_2_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:Encapsulated&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Want a sorted list of active connectors for the display"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="48b49f89-16fe-4b7a-bb66-02d86ad236d8"/&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: List Active Connectors"/&gt;
                                    &lt;L7p:Parameters mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="cacheAge"/&gt;
                                    &lt;L7p:value stringValue="${cacheAge}"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="refresh"/&gt;
                                    &lt;L7p:value stringValue="${request.http.parameter.refresh}"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Parameters&gt;
                                    &lt;/L7p:Encapsulated&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Extract list of ids to search through"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:VariablePrefix stringValue="candidateIds"/&gt;
                                    &lt;L7p:XmlMsgSrc stringValue="activeConnectors.sorted"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/ActiveConnectors/ActiveConnector/@id"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:ForEachLoop
                                    L7p:Usage="Required"
                                    loopVariable="candidateIds.results" variablePrefix="candidateId"&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:ComparisonAssertion&gt;

                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;

                                    &lt;L7p:Expression1 stringValue="${dependerIds.results}"/&gt;

                                    &lt;L7p:Expression2 stringValue="${candidateId.current}"/&gt;

                                    &lt;L7p:MultivaluedComparison multivaluedComparison="ANY"/&gt;

                                    &lt;L7p:Predicates predicates="included"&gt;

                                    &lt;L7p:item binary="included"&gt;

                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;

                                    &lt;L7p:RightValue stringValue="${candidateId.current}"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                    &lt;/L7p:ComparisonAssertion&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Get the name"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:VariablePrefix stringValue="name"/&gt;

                                    &lt;L7p:XmlMsgSrc stringValue="activeConnectors.sorted"/&gt;

                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;

                                    &lt;L7p:Expression stringValue="/ActiveConnectors/ActiveConnector[@id=$candidateId.current]/Name"/&gt;

                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="s"/&gt;

                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="l7"/&gt;

                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_2_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Get the type"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:VariablePrefix stringValue="type"/&gt;

                                    &lt;L7p:XmlMsgSrc stringValue="activeConnectors.sorted"/&gt;

                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;

                                    &lt;L7p:Expression stringValue="/ActiveConnectors/ActiveConnector[@id=$candidateId.current]/Type"/&gt;

                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="s"/&gt;

                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="l7"/&gt;

                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_2_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:Base64Expression stringValue="QUNUSVZFIENPTk5FQ1RPUjogJHtuYW1lLnJlc3VsdH0gKCR7dHlwZS5yZXN1bHR9KQ=="/&gt;

                                    &lt;L7p:VariableToSet stringValue="depender"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:ManipulateMultiValuedVariable&gt;

                                    &lt;L7p:SourceVariableName stringValue="depender"/&gt;

                                    &lt;L7p:TargetVariableName stringValue="dependers.list"/&gt;
                                    &lt;/L7p:ManipulateMultiValuedVariable&gt;
                                    &lt;L7p:assertionComment&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Check the candidate object is a depender"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:TrueAssertion/&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Check the candidate object is a depender, never fail"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;/L7p:ForEachLoop&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Search for references in active connector definitions"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:TrueAssertion/&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Search for references in active connector definitions, never fail"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Detail stringValue="==&gt; Searching JDBC Connections definitions"/&gt;
                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:Encapsulated&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// GET jdbcConnections"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="c8a5a0d5-1ae2-4144-b538-5c311efc1560"/&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Call Restman"/&gt;
                                    &lt;L7p:Parameters mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="element"/&gt;
                                    &lt;L7p:value stringValue=""/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="message"/&gt;
                                    &lt;L7p:value stringValue=""/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="method"/&gt;
                                    &lt;L7p:value stringValue="GET"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="resource"/&gt;
                                    &lt;L7p:value stringValue="jdbcConnections"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Parameters&gt;
                                    &lt;/L7p:Encapsulated&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:VariablePrefix stringValue="dependerIds"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="//l7:JDBCConnection/l7:Extension/l7:ConnectionProperties//l7:Property[@key='password' and l7:StringValue=$referenceString]/../../../@id"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_2_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:Encapsulated&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Want a sorted list of JDBC connections for the display"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="f8abecfe-11d6-44e4-be07-16e6080a7e5e"/&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: List JDBC Connections"/&gt;
                                    &lt;L7p:Parameters mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="cacheAge"/&gt;
                                    &lt;L7p:value stringValue="${cacheAge}"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="refresh"/&gt;
                                    &lt;L7p:value stringValue="${request.http.parameter.refresh}"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Parameters&gt;
                                    &lt;/L7p:Encapsulated&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Extract list of ids to search through"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:VariablePrefix stringValue="candidateIds"/&gt;
                                    &lt;L7p:XmlMsgSrc stringValue="jdbcConnections.sorted"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/JDBCConnections/JDBCConnection/@id"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:ForEachLoop
                                    L7p:Usage="Required"
                                    loopVariable="candidateIds.results" variablePrefix="candidateId"&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:ComparisonAssertion&gt;

                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;

                                    &lt;L7p:Expression1 stringValue="${dependerIds.results}"/&gt;

                                    &lt;L7p:Expression2 stringValue="${candidateId.current}"/&gt;

                                    &lt;L7p:MultivaluedComparison multivaluedComparison="ANY"/&gt;

                                    &lt;L7p:Predicates predicates="included"&gt;

                                    &lt;L7p:item binary="included"&gt;

                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;

                                    &lt;L7p:RightValue stringValue="${candidateId.current}"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                    &lt;/L7p:ComparisonAssertion&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Get the name"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:VariablePrefix stringValue="name"/&gt;

                                    &lt;L7p:XmlMsgSrc stringValue="jdbcConnections.sorted"/&gt;

                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;

                                    &lt;L7p:Expression stringValue="/JDBCConnections/JDBCConnection[@id=$candidateId.current]/Name"/&gt;

                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="s"/&gt;

                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="l7"/&gt;

                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_2_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:Base64Expression stringValue="SkRCQyBDb25uZWN0aW9uOiAke25hbWUucmVzdWx0fQ=="/&gt;

                                    &lt;L7p:VariableToSet stringValue="depender"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:ManipulateMultiValuedVariable&gt;

                                    &lt;L7p:SourceVariableName stringValue="depender"/&gt;

                                    &lt;L7p:TargetVariableName stringValue="dependers.list"/&gt;
                                    &lt;/L7p:ManipulateMultiValuedVariable&gt;
                                    &lt;L7p:assertionComment&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Check the candidate object for the reference"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:TrueAssertion/&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Check the candidate object for the reference, never fail"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;/L7p:ForEachLoop&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Search for references in JDBC connection definitions"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:TrueAssertion/&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Search for references in JDBC connection definitions, never fail"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Detail stringValue="==&gt; Searching cassandra connection definitions"/&gt;
                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:Encapsulated&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// GET cassandraConnections"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="c8a5a0d5-1ae2-4144-b538-5c311efc1560"/&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Call Restman"/&gt;
                                    &lt;L7p:Parameters mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="element"/&gt;
                                    &lt;L7p:value stringValue=""/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="message"/&gt;
                                    &lt;L7p:value stringValue=""/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="method"/&gt;
                                    &lt;L7p:value stringValue="GET"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="resource"/&gt;
                                    &lt;L7p:value stringValue="cassandraConnections"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Parameters&gt;
                                    &lt;/L7p:Encapsulated&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Obtain list of depender ids"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:VariablePrefix stringValue="dependerIds"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="//l7:CassandraConnection[l7:PasswordId=$id.current]/@id"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_2_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:Encapsulated&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Want a sorted list of cassandra connections for the display"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="b55454b6-3095-4e4d-92dc-3f10a6594fba"/&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: List Cassandra Connections"/&gt;
                                    &lt;L7p:Parameters mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="cacheAge"/&gt;
                                    &lt;L7p:value stringValue="${cacheAge}"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="refresh"/&gt;
                                    &lt;L7p:value stringValue="${request.http.parameter.refresh}"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Parameters&gt;
                                    &lt;/L7p:Encapsulated&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Extract list of ids to search through"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:VariablePrefix stringValue="candidateIds"/&gt;
                                    &lt;L7p:XmlMsgSrc stringValue="cassandraConnections.sorted"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/CassandraConnections/CassandraConnection/@id"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:ForEachLoop
                                    L7p:Usage="Required"
                                    loopVariable="candidateIds.results" variablePrefix="candidateId"&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:ComparisonAssertion&gt;

                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;

                                    &lt;L7p:Expression1 stringValue="${dependerIds.results}"/&gt;

                                    &lt;L7p:Expression2 stringValue="${candidateId.current}"/&gt;

                                    &lt;L7p:MultivaluedComparison multivaluedComparison="ANY"/&gt;

                                    &lt;L7p:Predicates predicates="included"&gt;

                                    &lt;L7p:item binary="included"&gt;

                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;

                                    &lt;L7p:RightValue stringValue="${candidateId.current}"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                    &lt;/L7p:ComparisonAssertion&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Get the name"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:VariablePrefix stringValue="name"/&gt;

                                    &lt;L7p:XmlMsgSrc stringValue="cassandraConnections.sorted"/&gt;

                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;

                                    &lt;L7p:Expression stringValue="/CassandraConnections/CassandraConnection[@id=$candidateId.current]/Name"/&gt;

                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="s"/&gt;

                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="l7"/&gt;

                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_2_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:Base64Expression stringValue="Q0FTU0FORFJBIENPTk5FQ1RJT046ICR7bmFtZS5yZXN1bHR9"/&gt;

                                    &lt;L7p:VariableToSet stringValue="depender"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:ManipulateMultiValuedVariable&gt;

                                    &lt;L7p:SourceVariableName stringValue="depender"/&gt;

                                    &lt;L7p:TargetVariableName stringValue="dependers.list"/&gt;
                                    &lt;/L7p:ManipulateMultiValuedVariable&gt;
                                    &lt;L7p:assertionComment&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Check the candidate object is a depender"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:TrueAssertion/&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Check the candidate object is a depender, never fail"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;/L7p:ForEachLoop&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Search for references in cassandra connection definitions"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:TrueAssertion/&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Search for references in cassandra connection definitions, never fail"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${dependers.list.length}"/&gt;
                                    &lt;L7p:Expression2 stringValue="1"/&gt;
                                    &lt;L7p:Operator operator="GE"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;

                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="GE"/&gt;
                                    &lt;L7p:RightValue stringValue="1"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                    &lt;/L7p:ComparisonAssertion&gt;
                                    &lt;L7p:ForEachLoop
                                    L7p:Usage="Required"
                                    loopVariable="dependers.list" variablePrefix="depender"&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:Base64Expression stringValue="JHtkZXBlbmRlcnMuaHRtbH0NCiAgPGxpPiR7ZGVwZW5kZXIuY3VycmVudH08L2xpPg=="/&gt;
                                    &lt;L7p:VariableToSet stringValue="dependers.html"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;/L7p:ForEachLoop&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="JHtodG1sQ29udGVudH0NCg0KPHA+VGhlIGZvbGxvd2luZyBvYmplY3RzIHJlZmVyZW5jZSB0aGlzIHNlY3VyZSBwYXNzd29yZDo8L3A+DQo8dWw+JHtkZXBlbmRlcnMuaHRtbH08L3VsPg=="/&gt;
                                    &lt;L7p:VariableToSet stringValue="htmlContent"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${dependers.list} has content"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="JHtodG1sQ29udGVudH0NCjxwPk5vdGhpbmcgd2FzIGZvdW5kIHRoYXQgcmVmZXJlbmNlcyB0aGlzIHNlY3VyZSBwYXNzd29yZDwvcD4="/&gt;
                                    &lt;L7p:VariableToSet stringValue="htmlContent"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Append ${dependers.html} to ${htmlContent} if ${dependers.list} has any entries"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${id} matches so retrieve dependers"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                &lt;/wsp:All&gt;
                                &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Do reverse dependency search if id matches"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt;
                            &lt;/wsp:OneOrMore&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cycle through each object to add to display and check if search must be run"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/L7p:ForEachLoop&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${objectType} == &amp;quot;Secure Password&amp;quot;"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${objectType}"/&gt;
                            &lt;L7p:Expression2 stringValue="Service"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="Service"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:AuditDetailAssertion&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:Detail stringValue="======&gt; Listing ${objectType} objects"/&gt;
                            &lt;L7p:Level stringValue="FINE"/&gt;
                        &lt;/L7p:AuditDetailAssertion&gt;
                        &lt;L7p:CommentAssertion&gt;
                            &lt;L7p:Comment stringValue="* Note: ${services.sorted} was set earlier, so don't call Utility: List Services here"/&gt;
                        &lt;/L7p:CommentAssertion&gt;
                        &lt;L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get list of ids"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:VariablePrefix stringValue="ids"/&gt;
                            &lt;L7p:XmlMsgSrc stringValue="services.sorted"/&gt;
                            &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                &lt;L7p:Expression stringValue="/Services/Service/@id"/&gt;
                                &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Namespaces&gt;
                                &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                            &lt;/L7p:XpathExpression&gt;
                        &lt;/L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:ForEachLoop L7p:Usage="Required"
                            loopVariable="ids.results" variablePrefix="id"&gt;
                            &lt;L7p:ResponseXpathAssertion&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get name of the object for display"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:VariablePrefix stringValue="name"/&gt;
                                &lt;L7p:XmlMsgSrc stringValue="services.sorted"/&gt;
                                &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/Services/Service[@id=$id.current]/Name"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                &lt;/L7p:XpathExpression&gt;
                            &lt;/L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:ResponseXpathAssertion&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get folderPath of the object to display"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:VariablePrefix stringValue="folderPath"/&gt;
                                &lt;L7p:XmlMsgSrc stringValue="services.sorted"/&gt;
                                &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/Services/Service[@id=$id.current]/FolderPath"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                &lt;/L7p:XpathExpression&gt;
                            &lt;/L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:AuditDetailAssertion&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:Detail stringValue="=====&gt; Processing ${objectType}: ${name.result} (${id.current})"/&gt;
                                &lt;L7p:Level stringValue="FINE"/&gt;
                            &lt;/L7p:AuditDetailAssertion&gt;
                            &lt;L7p:Encapsulated&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// name.result"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="f6b19229-a705-4c48-bc78-3975564a1a9a"/&gt;
                                &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Escape HTML String"/&gt;
                                &lt;L7p:Parameters mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="escapedString"/&gt;
                                    &lt;L7p:value stringValue="${name.result}"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Parameters&gt;
                            &lt;/L7p:Encapsulated&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="JHtlc2NhcGVkU3RyaW5nfQ=="/&gt;
                                &lt;L7p:VariableToSet stringValue="name"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:Encapsulated&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// folderPath.result"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="f6b19229-a705-4c48-bc78-3975564a1a9a"/&gt;
                                &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Escape HTML String"/&gt;
                                &lt;L7p:Parameters mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="escapedString"/&gt;
                                    &lt;L7p:value stringValue="${folderPath.result}"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Parameters&gt;
                            &lt;/L7p:Encapsulated&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="JHtodG1sQ29udGVudH0NCjxhIGlkPSIke2lkLmN1cnJlbnR9Ii8+PGEgaHJlZj0iJHtyZXF1ZXN0LnVybC5wYXRofT9vYmplY3RUeXBlPSR7b2JqZWN0VHlwZX0maWQ9JHtpZC5jdXJyZW50fSMke2lkLmN1cnJlbnR9IiBvbkNsaWNrPSJzZXRSZWZyZXNoKHRoaXMpIj4ke2VzY2FwZWRTdHJpbmd9JHtuYW1lfTwvYT48YnIvPg=="/&gt;
                                &lt;L7p:VariableToSet stringValue="htmlContent"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:Expression1 stringValue="${id}"/&gt;
                                    &lt;L7p:Expression2 stringValue="${id.current}"/&gt;
                                    &lt;L7p:Negate booleanValue="true"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:RightValue stringValue="${id.current}"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt;
                                &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Detail stringValue="====&gt; ID matched, processing for dependencies =================================="/&gt;
                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="JHtpZC5jdXJyZW50fQ=="/&gt;
                                    &lt;L7p:VariableToSet stringValue="referenceString"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Detail stringValue="===&gt; Searching objects for references to ${referenceString}"/&gt;
                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Detail stringValue="==&gt; Searching listen port definitions"/&gt;
                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:Encapsulated&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// GET listenPorts"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="c8a5a0d5-1ae2-4144-b538-5c311efc1560"/&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Call Restman"/&gt;
                                    &lt;L7p:Parameters mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="element"/&gt;
                                    &lt;L7p:value stringValue=""/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="message"/&gt;
                                    &lt;L7p:value stringValue=""/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="method"/&gt;
                                    &lt;L7p:value stringValue="GET"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="resource"/&gt;
                                    &lt;L7p:value stringValue="listenPorts"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Parameters&gt;
                                    &lt;/L7p:Encapsulated&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get list of listen ports that link to this service"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:VariablePrefix stringValue="dependers"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/l7:List/l7:Item/l7:Resource/l7:ListenPort/l7:TargetServiceReference[@id=$referenceString]/../@id"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:Encapsulated&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get sorted list of listen ports"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="9bee9837-82a1-4aab-99f4-08b664773ad7"/&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: List Listen Ports"/&gt;
                                    &lt;L7p:Parameters mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="cacheAge"/&gt;
                                    &lt;L7p:value stringValue="${cacheAge}"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="refresh"/&gt;
                                    &lt;L7p:value stringValue="${request.http.parameter.refresh}"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Parameters&gt;
                                    &lt;/L7p:Encapsulated&gt;
                                    &lt;L7p:ForEachLoop
                                    L7p:Usage="Required"
                                    loopVariable="dependers.results" variablePrefix="depender"&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Get listen port name"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:VariablePrefix stringValue="name"/&gt;
                                    &lt;L7p:XmlMsgSrc stringValue="listenPorts.sorted"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/ListenPorts/ListenPort[@id=$depender.current]/Name"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;

                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Get listen port protocol"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:VariablePrefix stringValue="protocol"/&gt;
                                    &lt;L7p:XmlMsgSrc stringValue="listenPorts.sorted"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/ListenPorts/ListenPort[@id=$depender.current]/Protocol"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;

                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Get listen port port"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:VariablePrefix stringValue="port"/&gt;
                                    &lt;L7p:XmlMsgSrc stringValue="listenPorts.sorted"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/ListenPorts/ListenPort[@id=$depender.current]/Port"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;

                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:Base64Expression stringValue="TElTVEVOIFBPUlQ6ICR7bmFtZS5yZXN1bHR9ICgke3Byb3RvY29sLnJlc3VsdH0gb24gcG9ydCAke3BvcnQucmVzdWx0fSk="/&gt;
                                    &lt;L7p:VariableToSet stringValue="depender"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:ManipulateMultiValuedVariable&gt;

                                    &lt;L7p:SourceVariableName stringValue="depender"/&gt;

                                    &lt;L7p:TargetVariableName stringValue="dependers.list"/&gt;
                                    &lt;/L7p:ManipulateMultiValuedVariable&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Add each one to ${dependers.list}"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/L7p:ForEachLoop&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Search for references in listen port definitions"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:TrueAssertion/&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Search for references in listen port definitions, never fail"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Detail stringValue="==&gt; Searching JMS destination definitions"/&gt;
                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:Encapsulated&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// GET jmsDestinations"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="c8a5a0d5-1ae2-4144-b538-5c311efc1560"/&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Call Restman"/&gt;
                                    &lt;L7p:Parameters mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="element"/&gt;
                                    &lt;L7p:value stringValue=""/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="message"/&gt;
                                    &lt;L7p:value stringValue=""/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="method"/&gt;
                                    &lt;L7p:value stringValue="GET"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="resource"/&gt;
                                    &lt;L7p:value stringValue="jmsDestinations"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Parameters&gt;
                                    &lt;/L7p:Encapsulated&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get list of JMS destinations that link to this service"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:VariablePrefix stringValue="dependers"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/l7:List/l7:Item/l7:Resource/l7:JMSDestination/l7:JMSConnection/l7:ContextPropertiesTemplate/l7:Property[@key='com.l7tech.server.jms.prop.hardwired.service.id' and l7:StringValue=$referenceString]/../../../@id"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:Encapsulated&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get sorted list of JMS destinations"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="53bc61d8-f0d0-4024-b09c-61fd5c9ef33e"/&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: List JMS Destinations"/&gt;
                                    &lt;L7p:Parameters mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="cacheAge"/&gt;
                                    &lt;L7p:value stringValue="${cacheAge}"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="refresh"/&gt;
                                    &lt;L7p:value stringValue="${request.http.parameter.refresh}"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Parameters&gt;
                                    &lt;/L7p:Encapsulated&gt;
                                    &lt;L7p:ForEachLoop
                                    L7p:Usage="Required"
                                    loopVariable="dependers.results" variablePrefix="depender"&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Get JMS destination name"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:VariablePrefix stringValue="name"/&gt;
                                    &lt;L7p:XmlMsgSrc stringValue="jmsDestinations.sorted"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/JMSDestinations/JMSDestination[@id=$depender.current]/Name"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;

                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Get JMS destination type"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:VariablePrefix stringValue="type"/&gt;
                                    &lt;L7p:XmlMsgSrc stringValue="jmsDestinations.sorted"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/JMSDestinations/JMSDestination[@id=$depender.current]/Type"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;

                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Get JMS destination direction"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:VariablePrefix stringValue="direction"/&gt;
                                    &lt;L7p:XmlMsgSrc stringValue="jmsDestinations.sorted"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/JMSDestinations/JMSDestination[@id=$depender.current]/Direction"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;

                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:Base64Expression stringValue="Sk1TIERFU1RJTkFUSU9OOiAke25hbWUucmVzdWx0fSAoJHtkaXJlY3Rpb24ucmVzdWx0fSAke3R5cGUucmVzdWx0fSk="/&gt;
                                    &lt;L7p:VariableToSet stringValue="depender"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:ManipulateMultiValuedVariable&gt;

                                    &lt;L7p:SourceVariableName stringValue="depender"/&gt;

                                    &lt;L7p:TargetVariableName stringValue="dependers.list"/&gt;
                                    &lt;/L7p:ManipulateMultiValuedVariable&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Add each one to ${dependers.list}"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/L7p:ForEachLoop&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Search for references in JMS destination definitions"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:TrueAssertion/&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Search for references in JMS destination definitions, never fail"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Detail stringValue="==&gt; Searching email listener definitions"/&gt;
                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:Encapsulated&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// GET emailListeners"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="c8a5a0d5-1ae2-4144-b538-5c311efc1560"/&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Call Restman"/&gt;
                                    &lt;L7p:Parameters mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="element"/&gt;
                                    &lt;L7p:value stringValue=""/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="message"/&gt;
                                    &lt;L7p:value stringValue=""/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="method"/&gt;
                                    &lt;L7p:value stringValue="GET"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="resource"/&gt;
                                    &lt;L7p:value stringValue="emailListeners"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Parameters&gt;
                                    &lt;/L7p:Encapsulated&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get list of JMS destinations that link to this service"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:VariablePrefix stringValue="dependers"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/l7:List/l7:Item/l7:Resource/l7:EmailListener/l7:Properties/l7:Property[@key='com.l7tech.server.jms.prop.hardwired.service.id' and l7:StringValue=$referenceString]/../../@id"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:Encapsulated&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get sorted list of email listeners"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="33877201-e5e7-4d81-a8d2-34c1250204ec"/&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: List Email Listeners"/&gt;
                                    &lt;L7p:Parameters mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="cacheAge"/&gt;
                                    &lt;L7p:value stringValue="${cacheAge}"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="refresh"/&gt;
                                    &lt;L7p:value stringValue="${request.http.parameter.refresh}"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Parameters&gt;
                                    &lt;/L7p:Encapsulated&gt;
                                    &lt;L7p:ForEachLoop
                                    L7p:Usage="Required"
                                    loopVariable="dependers.results" variablePrefix="depender"&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Get email listener name"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:VariablePrefix stringValue="name"/&gt;
                                    &lt;L7p:XmlMsgSrc stringValue="emailListeners.sorted"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/EmailListeners/EmailListener[@id=$depender.current]/Name"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;

                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Get email listener type"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:VariablePrefix stringValue="type"/&gt;
                                    &lt;L7p:XmlMsgSrc stringValue="emailListeners.sorted"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/EmailListeners/EmailListener[@id=$depender.current]/Type"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;

                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Get email listener hostname"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:VariablePrefix stringValue="hostname"/&gt;
                                    &lt;L7p:XmlMsgSrc stringValue="emailListeners.sorted"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/EmailListeners/EmailListener[@id=$depender.current]/Hostname"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;

                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:Base64Expression stringValue="RU1BSUwgTElTVEVORVI6ICR7bmFtZS5yZXN1bHR9ICgke3R5cGUucmVzdWx0fSB0byAke2hvc3RuYW1lLnJlc3VsdH0p"/&gt;
                                    &lt;L7p:VariableToSet stringValue="depender"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:ManipulateMultiValuedVariable&gt;

                                    &lt;L7p:SourceVariableName stringValue="depender"/&gt;

                                    &lt;L7p:TargetVariableName stringValue="dependers.list"/&gt;
                                    &lt;/L7p:ManipulateMultiValuedVariable&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Add each one to ${dependers.list}"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/L7p:ForEachLoop&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Search for references in email listener definitions"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:TrueAssertion/&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Search for references in email listener definitions, never fail"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Detail stringValue="==&gt; Searching active connectore definitions"/&gt;
                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:Encapsulated&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// GET activeConnectors"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="c8a5a0d5-1ae2-4144-b538-5c311efc1560"/&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Call Restman"/&gt;
                                    &lt;L7p:Parameters mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="element"/&gt;
                                    &lt;L7p:value stringValue=""/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="message"/&gt;
                                    &lt;L7p:value stringValue=""/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="method"/&gt;
                                    &lt;L7p:value stringValue="GET"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="resource"/&gt;
                                    &lt;L7p:value stringValue="activeConnectors"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Parameters&gt;
                                    &lt;/L7p:Encapsulated&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get list of active connectors that link to this service"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:VariablePrefix stringValue="dependers"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/l7:List/l7:Item/l7:Resource/l7:ActiveConnector[l7:HardwiredId=$referenceString]/@id"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:Encapsulated&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get sorted list of active connectors"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="48b49f89-16fe-4b7a-bb66-02d86ad236d8"/&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: List Active Connectors"/&gt;
                                    &lt;L7p:Parameters mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="cacheAge"/&gt;
                                    &lt;L7p:value stringValue="${cacheAge}"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="refresh"/&gt;
                                    &lt;L7p:value stringValue="${request.http.parameter.refresh}"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Parameters&gt;
                                    &lt;/L7p:Encapsulated&gt;
                                    &lt;L7p:ForEachLoop
                                    L7p:Usage="Required"
                                    loopVariable="dependers.results" variablePrefix="depender"&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Get active connector name"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:VariablePrefix stringValue="name"/&gt;
                                    &lt;L7p:XmlMsgSrc stringValue="activeConnectors.sorted"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/ActiveConnectors/ActiveConnector[@id=$depender.current]/Name"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;

                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Get active connector type"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:VariablePrefix stringValue="type"/&gt;
                                    &lt;L7p:XmlMsgSrc stringValue="activeConnectors.sorted"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/ActiveConnectors/ActiveConnector[@id=$depender.current]/Type"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;

                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:Base64Expression stringValue="QUNUSVZFIENPTk5FQ1RPUjogJHtuYW1lLnJlc3VsdH0gKCR7dHlwZS5yZXN1bHR9KQ=="/&gt;
                                    &lt;L7p:VariableToSet stringValue="depender"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:ManipulateMultiValuedVariable&gt;

                                    &lt;L7p:SourceVariableName stringValue="depender"/&gt;

                                    &lt;L7p:TargetVariableName stringValue="dependers.list"/&gt;
                                    &lt;/L7p:ManipulateMultiValuedVariable&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Add each one to ${dependers.list}"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/L7p:ForEachLoop&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Search for references in active connector definitions"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:TrueAssertion/&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Search for references in active connector definitions, never fail"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Detail stringValue="==&gt; Searching websocket connection definitions"/&gt;
                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:Encapsulated&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// GET genericEntities"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="c8a5a0d5-1ae2-4144-b538-5c311efc1560"/&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Call Restman"/&gt;
                                    &lt;L7p:Parameters mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="element"/&gt;
                                    &lt;L7p:value stringValue="GenericEntity"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="message"/&gt;
                                    &lt;L7p:value stringValue=""/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="method"/&gt;
                                    &lt;L7p:value stringValue="GET"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="resource"/&gt;
                                    &lt;L7p:value stringValue="genericEntities"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Parameters&gt;
                                    &lt;/L7p:Encapsulated&gt;
                                    &lt;L7p:Encapsulated&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Want a sorted list of generic entities for the display"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="6db56c26-58d7-4ffc-8fa5-01b525d5468b"/&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: List Generic Entities"/&gt;
                                    &lt;L7p:Parameters mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="cacheAge"/&gt;
                                    &lt;L7p:value stringValue="${cacheAge}"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="refresh"/&gt;
                                    &lt;L7p:value stringValue="${request.http.parameter.refresh}"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Parameters&gt;
                                    &lt;/L7p:Encapsulated&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Extract list of ids to search through"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:VariablePrefix stringValue="candidateIds"/&gt;
                                    &lt;L7p:XmlMsgSrc stringValue="genericEntities.sorted"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/GenericEntities/GenericEntity/@id"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:ForEachLoop
                                    L7p:Usage="Required"
                                    loopVariable="candidateIds.results" variablePrefix="candidateId"&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Get the XML definition"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:VariablePrefix stringValue="genericEntity.xml"/&gt;

                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;

                                    &lt;L7p:Expression stringValue="//l7:GenericEntity[@id=$candidateId.current]/l7:ValueXml"/&gt;

                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="s"/&gt;

                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="l7"/&gt;

                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_2_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:Base64Expression stringValue="JHtnZW5lcmljRW50aXR5LnhtbC5yZXN1bHR9"/&gt;

                                    &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;

                                    &lt;L7p:DataType variableDataType="message"/&gt;

                                    &lt;L7p:VariableToSet stringValue="genericEntity.xml"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:VariablePrefix stringValue=""/&gt;

                                    &lt;L7p:XmlMsgSrc stringValue="genericEntity.xml"/&gt;

                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;

                                    &lt;L7p:Expression stringValue="/java/object/void[@property='connectionPolicyGOID']/object[@class='com.l7tech.objectmodel.Goid' and string=$id.current]"/&gt;

                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="s"/&gt;

                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="l7"/&gt;

                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_2_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:VariablePrefix stringValue=""/&gt;

                                    &lt;L7p:XmlMsgSrc stringValue="genericEntity.xml"/&gt;

                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;

                                    &lt;L7p:Expression stringValue="/java/object/void[@property='inboundPolicyOID']/object[@class='com.l7tech.objectmodel.Goid' and string=$id.current]"/&gt;

                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="s"/&gt;

                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="l7"/&gt;

                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_2_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:VariablePrefix stringValue=""/&gt;

                                    &lt;L7p:XmlMsgSrc stringValue="genericEntity.xml"/&gt;

                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;

                                    &lt;L7p:Expression stringValue="/java/object/void[@property='outboundConnectionPolicyId']/object[@class='com.l7tech.objectmodel.Goid' and string=$id.current]"/&gt;

                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="s"/&gt;

                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="l7"/&gt;

                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_2_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:VariablePrefix stringValue=""/&gt;

                                    &lt;L7p:XmlMsgSrc stringValue="genericEntity.xml"/&gt;

                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;

                                    &lt;L7p:Expression stringValue="/java/object/void[@property='outboundPolicyOID']/object[@class='com.l7tech.objectmodel.Goid' and string=$id.current]"/&gt;

                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="s"/&gt;

                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="l7"/&gt;

                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_2_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:assertionComment&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Check for our service id in websocket connection definition XML"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Get name of this websocket connection definition"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:VariablePrefix stringValue="name"/&gt;

                                    &lt;L7p:XmlMsgSrc stringValue="genericEntities.sorted"/&gt;

                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;

                                    &lt;L7p:Expression stringValue="/GenericEntities/GenericEntity[@id=$candidateId.current]/Name"/&gt;

                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="l7"/&gt;

                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:Base64Expression stringValue="V0VCU09DS0VUIENPTk5FQ1RJT046ICR7bmFtZS5yZXN1bHR9"/&gt;

                                    &lt;L7p:VariableToSet stringValue="depender"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:ManipulateMultiValuedVariable&gt;

                                    &lt;L7p:SourceVariableName stringValue="depender"/&gt;

                                    &lt;L7p:TargetVariableName stringValue="dependers.list"/&gt;
                                    &lt;/L7p:ManipulateMultiValuedVariable&gt;
                                    &lt;L7p:assertionComment&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Check the candidate object is a depender"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:TrueAssertion/&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Check the candidate object is a depender, never fail"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;/L7p:ForEachLoop&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Search for references in websocket connection definitions"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:TrueAssertion/&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Search for references in websocket connection definitions, never fail"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Detail stringValue="==&gt; Searching XMPP connection definitions"/&gt;
                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:Encapsulated&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// GET genericEntities"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="c8a5a0d5-1ae2-4144-b538-5c311efc1560"/&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Call Restman"/&gt;
                                    &lt;L7p:Parameters mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="element"/&gt;
                                    &lt;L7p:value stringValue="GenericEntity"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="message"/&gt;
                                    &lt;L7p:value stringValue=""/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="method"/&gt;
                                    &lt;L7p:value stringValue="GET"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="resource"/&gt;
                                    &lt;L7p:value stringValue="genericEntities"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Parameters&gt;
                                    &lt;/L7p:Encapsulated&gt;
                                    &lt;L7p:Encapsulated&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Want a sorted list of generic entities for the display"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="6db56c26-58d7-4ffc-8fa5-01b525d5468b"/&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: List Generic Entities"/&gt;
                                    &lt;L7p:Parameters mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="cacheAge"/&gt;
                                    &lt;L7p:value stringValue="${cacheAge}"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="refresh"/&gt;
                                    &lt;L7p:value stringValue="${request.http.parameter.refresh}"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Parameters&gt;
                                    &lt;/L7p:Encapsulated&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Extract list of ids to search through"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:VariablePrefix stringValue="candidateIds"/&gt;
                                    &lt;L7p:XmlMsgSrc stringValue="genericEntities.sorted"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/GenericEntities/GenericEntity/@id"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:ForEachLoop
                                    L7p:Usage="Required"
                                    loopVariable="candidateIds.results" variablePrefix="candidateId"&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Get the XML definition"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:VariablePrefix stringValue="genericEntity.xml"/&gt;

                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;

                                    &lt;L7p:Expression stringValue="//l7:GenericEntity[@id=$candidateId.current]/l7:ValueXml"/&gt;

                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="s"/&gt;

                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="l7"/&gt;

                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_2_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:Base64Expression stringValue="JHtnZW5lcmljRW50aXR5LnhtbC5yZXN1bHR9"/&gt;

                                    &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;

                                    &lt;L7p:DataType variableDataType="message"/&gt;

                                    &lt;L7p:VariableToSet stringValue="genericEntity.xml"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:VariablePrefix stringValue=""/&gt;

                                    &lt;L7p:XmlMsgSrc stringValue="genericEntity.xml"/&gt;

                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;

                                    &lt;L7p:Expression stringValue="/java/object/void[@property='messageReceivedServiceOid']/object[@class='com.l7tech.objectmodel.Goid' and string=$id.current]"/&gt;

                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="s"/&gt;

                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="l7"/&gt;

                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_2_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:VariablePrefix stringValue=""/&gt;

                                    &lt;L7p:XmlMsgSrc stringValue="genericEntity.xml"/&gt;

                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;

                                    &lt;L7p:Expression stringValue="/java/object/void[@property='sessionTerminatedServiceOid']/object[@class='com.l7tech.objectmodel.Goid' and string=$id.current]"/&gt;

                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="s"/&gt;

                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="l7"/&gt;

                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_2_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:assertionComment&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Check for our service id in XMPP connection definition XML"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Get name of this XMPP connection definition"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:VariablePrefix stringValue="name"/&gt;

                                    &lt;L7p:XmlMsgSrc stringValue="genericEntities.sorted"/&gt;

                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;

                                    &lt;L7p:Expression stringValue="/GenericEntities/GenericEntity[@id=$candidateId.current]/Name"/&gt;

                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="l7"/&gt;

                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:Base64Expression stringValue="WE1QUCBDT05ORUNUSU9OOiAke25hbWUucmVzdWx0fQ=="/&gt;

                                    &lt;L7p:VariableToSet stringValue="depender"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:ManipulateMultiValuedVariable&gt;

                                    &lt;L7p:SourceVariableName stringValue="depender"/&gt;

                                    &lt;L7p:TargetVariableName stringValue="dependers.list"/&gt;
                                    &lt;/L7p:ManipulateMultiValuedVariable&gt;
                                    &lt;L7p:assertionComment&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Check the candidate object is a depender"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:TrueAssertion/&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Check the candidate object is a depender, never fail"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;/L7p:ForEachLoop&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Search for references in XMPP connection definitions"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:TrueAssertion/&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Search for references in XMPP connection definitions, never fail"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${dependers.list.length}"/&gt;
                                    &lt;L7p:Expression2 stringValue="1"/&gt;
                                    &lt;L7p:Operator operator="GE"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;

                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="GE"/&gt;
                                    &lt;L7p:RightValue stringValue="1"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                    &lt;/L7p:ComparisonAssertion&gt;
                                    &lt;L7p:ForEachLoop
                                    L7p:Usage="Required"
                                    loopVariable="dependers.list" variablePrefix="depender"&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:Base64Expression stringValue="JHtkZXBlbmRlcnMuaHRtbH0NCiAgPGxpPiR7ZGVwZW5kZXIuY3VycmVudH08L2xpPg=="/&gt;
                                    &lt;L7p:VariableToSet stringValue="dependers.html"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;/L7p:ForEachLoop&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="JHtodG1sQ29udGVudH0NCg0KPHA+VGhlIGZvbGxvd2luZyBvYmplY3RzIGRlcGVuZCBvbiB0aGlzIHNlcnZpY2U6PC9wPg0KPHVsPiR7ZGVwZW5kZXJzLmh0bWx9PC91bD4="/&gt;
                                    &lt;L7p:VariableToSet stringValue="htmlContent"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${dependers.list} has content"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="JHtodG1sQ29udGVudH0NCjxwPk5vdGhpbmcgd2FzIGZvdW5kIHRoYXQgZGVwZW5kcyBvbiB0aGlzIHNlcnZpY2U8L3A+"/&gt;
                                    &lt;L7p:VariableToSet stringValue="htmlContent"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Append ${dependers.html} to ${htmlContent} if ${dependers.list} has any entries"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${id} matches so retrieve dependers"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                &lt;/wsp:All&gt;
                                &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Do reverse dependency search if id matches"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt;
                            &lt;/wsp:OneOrMore&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cycle through each object to add to display and check if search must be run"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/L7p:ForEachLoop&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${objectType} == &amp;quot;Service&amp;quot;"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${objectType}"/&gt;
                            &lt;L7p:Expression2 stringValue="SiteMinder Configuration"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="SiteMinder Configuration"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:AuditDetailAssertion&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:Detail stringValue="======&gt; Listing ${objectType} objects"/&gt;
                            &lt;L7p:Level stringValue="FINE"/&gt;
                        &lt;/L7p:AuditDetailAssertion&gt;
                        &lt;L7p:Encapsulated&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get list of objectTypes to display and search for references"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="779a8f46-fcef-4739-b6c7-95eea2a160ff"/&gt;
                            &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: List SiteMinder Configurations"/&gt;
                            &lt;L7p:Parameters mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="cacheAge"/&gt;
                                    &lt;L7p:value stringValue="${cacheAge}"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="refresh"/&gt;
                                    &lt;L7p:value stringValue="${request.http.parameter.refresh}"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Parameters&gt;
                        &lt;/L7p:Encapsulated&gt;
                        &lt;L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get list of ids"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:VariablePrefix stringValue="ids"/&gt;
                            &lt;L7p:XmlMsgSrc stringValue="siteminderConfigurations.sorted"/&gt;
                            &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                &lt;L7p:Expression stringValue="/SiteMinderConfigurations/SiteMinderConfiguration/@id"/&gt;
                                &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Namespaces&gt;
                                &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                            &lt;/L7p:XpathExpression&gt;
                        &lt;/L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:ForEachLoop L7p:Usage="Required"
                            loopVariable="ids.results" variablePrefix="id"&gt;
                            &lt;L7p:ResponseXpathAssertion&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get name of the object for display"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:VariablePrefix stringValue="name"/&gt;
                                &lt;L7p:XmlMsgSrc stringValue="siteminderConfigurations.sorted"/&gt;
                                &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/SiteMinderConfigurations/SiteMinderConfiguration[@id=$id.current]/Name"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                &lt;/L7p:XpathExpression&gt;
                            &lt;/L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:AuditDetailAssertion&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:Detail stringValue="=====&gt; Processing ${objectType}: ${name.result} (${id.current})"/&gt;
                                &lt;L7p:Level stringValue="FINE"/&gt;
                            &lt;/L7p:AuditDetailAssertion&gt;
                            &lt;L7p:Encapsulated&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// name.result"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="f6b19229-a705-4c48-bc78-3975564a1a9a"/&gt;
                                &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Escape HTML String"/&gt;
                                &lt;L7p:Parameters mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="escapedString"/&gt;
                                    &lt;L7p:value stringValue="${name.result}"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Parameters&gt;
                            &lt;/L7p:Encapsulated&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="JHtodG1sQ29udGVudH0NCjxhIGlkPSIke2lkLmN1cnJlbnR9Ii8+PGEgaHJlZj0iJHtyZXF1ZXN0LnVybC5wYXRofT9vYmplY3RUeXBlPSR7b2JqZWN0VHlwZX0maWQ9JHtpZC5jdXJyZW50fSMke2lkLmN1cnJlbnR9IiBvbkNsaWNrPSJzZXRSZWZyZXNoKHRoaXMpIj4ke2VzY2FwZWRTdHJpbmd9PC9hPjxici8+"/&gt;
                                &lt;L7p:VariableToSet stringValue="htmlContent"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:Expression1 stringValue="${id}"/&gt;
                                    &lt;L7p:Expression2 stringValue="${id.current}"/&gt;
                                    &lt;L7p:Negate booleanValue="true"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:RightValue stringValue="${id.current}"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt;
                                &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Detail stringValue="====&gt; ID matched, processing for dependencies =================================="/&gt;
                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="JHtpZC5jdXJyZW50fQ=="/&gt;
                                    &lt;L7p:VariableToSet stringValue="referenceString"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Detail stringValue="===&gt; Searching objects for references to ${referenceString}"/&gt;
                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Detail stringValue="==&gt; Searching policy XML"/&gt;
                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Find policies that reference a SiteMinder configuration"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:VariablePrefix stringValue="policies"/&gt;
                                    &lt;L7p:XmlMsgSrc stringValue="allPolicyXML"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="//AllPolicyXML/PolicyXML[contains(.,'L7p:SiteMinderCheckProtected')]"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:ForEachLoop
                                    L7p:Usage="Required"
                                    loopVariable="policies.elements" variablePrefix="policy"&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Cast to message type for XPath"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:Base64Expression stringValue="JHtwb2xpY3kuY3VycmVudH0="/&gt;
                                    &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                                    &lt;L7p:DataType variableDataType="message"/&gt;
                                    &lt;L7p:VariableToSet stringValue="policyObject.xml"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Extract the policy XML from the policy object"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:VariablePrefix stringValue="policy.xml"/&gt;
                                    &lt;L7p:XmlMsgSrc stringValue="policyObject.xml"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/PolicyXML/text()"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;

                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;

                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Cast to message type for XPath"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:Base64Expression stringValue="JHtwb2xpY3kueG1sLnJlc3VsdH0="/&gt;
                                    &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                                    &lt;L7p:DataType variableDataType="message"/&gt;
                                    &lt;L7p:VariableToSet stringValue="policy.xml"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Check if the policy XML has a reference to this SiteMinder configuration"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:VariablePrefix stringValue=""/&gt;

                                    &lt;L7p:XmlMsgSrc stringValue="policy.xml"/&gt;

                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;

                                    &lt;L7p:Expression stringValue="//L7p:SiteMinderCheckProtected/L7p:AgentGoid[@goidValue=$referenceString]"/&gt;

                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="L7p"/&gt;

                                    &lt;L7p:value stringValue="http://www.layer7tech.com/ws/policy"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="wsp"/&gt;

                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/ws/2002/12/policy"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:Include&gt;

                                    &lt;L7p:PolicyGuid stringValue="8f33b165-bc16-4959-a524-aba67aff3cdf"/&gt;
                                    &lt;/L7p:Include&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:Base64Expression stringValue="JHtzb3VyY2VUeXBlLnJlc3VsdH06ICR7Zm9sZGVyUGF0aC5yZXN1bHR9JHtuYW1lLnJlc3VsdH0="/&gt;

                                    &lt;L7p:VariableToSet stringValue="depender"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:ManipulateMultiValuedVariable&gt;

                                    &lt;L7p:SourceVariableName stringValue="depender"/&gt;

                                    &lt;L7p:TargetVariableName stringValue="dependers.list"/&gt;
                                    &lt;/L7p:ManipulateMultiValuedVariable&gt;
                                    &lt;L7p:assertionComment&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Search policy XML for SiteMinderCheckProtected element matching our reference"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:TrueAssertion/&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Search policy XML for SiteMinderCheckProtected element matching our reference, never fail"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cycle through each policy to see if the SiteMinder configuration is the one we want and append to ${dependers.list}"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/L7p:ForEachLoop&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Search for references in policy XML"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:TrueAssertion/&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Search for references in policy XML, never fail"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${dependers.list.length}"/&gt;
                                    &lt;L7p:Expression2 stringValue="1"/&gt;
                                    &lt;L7p:Operator operator="GE"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;

                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="GE"/&gt;
                                    &lt;L7p:RightValue stringValue="1"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                    &lt;/L7p:ComparisonAssertion&gt;
                                    &lt;L7p:ForEachLoop
                                    L7p:Usage="Required"
                                    loopVariable="dependers.list" variablePrefix="depender"&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:Base64Expression stringValue="JHtkZXBlbmRlcnMuaHRtbH0NCiAgPGxpPiR7ZGVwZW5kZXIuY3VycmVudH08L2xpPg=="/&gt;
                                    &lt;L7p:VariableToSet stringValue="dependers.html"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;/L7p:ForEachLoop&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="JHtodG1sQ29udGVudH0NCg0KPHA+VGhlIGZvbGxvd2luZyBvYmplY3RzIHVzZSB0aGlzIFNpdGVNaW5kZXIgY29uZmlndXJhdGlvbjo8L3A+DQo8dWw+JHtkZXBlbmRlcnMuaHRtbH08L3VsPg=="/&gt;
                                    &lt;L7p:VariableToSet stringValue="htmlContent"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${dependers.list} has content"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="JHtodG1sQ29udGVudH0NCjxwPk5vdGhpbmcgd2FzIGZvdW5kIHRoYXQgdXNlcyB0aGlzIFNpdGVNaW5kZXIgY29uZmlndXJhdGlvbjwvcD4="/&gt;
                                    &lt;L7p:VariableToSet stringValue="htmlContent"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Append ${dependers.html} to ${htmlContent} if ${dependers.list} has any entries"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${id} matches so retrieve dependers"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                &lt;/wsp:All&gt;
                                &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Do reverse dependency search if id matches"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt;
                            &lt;/wsp:OneOrMore&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cycle through each object to add to display and check if search must be run"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/L7p:ForEachLoop&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${objectType} == &amp;quot;SiteMinder Configuration&amp;quot;"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${objectType}"/&gt;
                            &lt;L7p:Expression2 stringValue="Trusted Certificate"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="Trusted Certificate"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:AuditDetailAssertion&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:Detail stringValue="======&gt; Listing ${objectType} objects"/&gt;
                            &lt;L7p:Level stringValue="FINE"/&gt;
                        &lt;/L7p:AuditDetailAssertion&gt;
                        &lt;L7p:Encapsulated&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get list of objectTypes to display and search for references"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="1feebe6b-c754-4bdc-834b-c6f3065d0216"/&gt;
                            &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: List Trusted Certificates"/&gt;
                            &lt;L7p:Parameters mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="cacheAge"/&gt;
                                    &lt;L7p:value stringValue="${cacheAge}"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="refresh"/&gt;
                                    &lt;L7p:value stringValue="${request.http.parameter.refresh}"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Parameters&gt;
                        &lt;/L7p:Encapsulated&gt;
                        &lt;L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get list of ids"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:VariablePrefix stringValue="ids"/&gt;
                            &lt;L7p:XmlMsgSrc stringValue="trustedCertificates.sorted"/&gt;
                            &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                &lt;L7p:Expression stringValue="/TrustedCertificates/TrustedCertificate/@id"/&gt;
                                &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Namespaces&gt;
                                &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                            &lt;/L7p:XpathExpression&gt;
                        &lt;/L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:ForEachLoop L7p:Usage="Required"
                            loopVariable="ids.results" variablePrefix="id"&gt;
                            &lt;L7p:ResponseXpathAssertion&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get name of the object for display"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:VariablePrefix stringValue="name"/&gt;
                                &lt;L7p:XmlMsgSrc stringValue="trustedCertificates.sorted"/&gt;
                                &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/TrustedCertificates/TrustedCertificate[@id=$id.current]/Name"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                &lt;/L7p:XpathExpression&gt;
                            &lt;/L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:AuditDetailAssertion&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:Detail stringValue="=====&gt; Processing ${objectType}: ${name.result} (${id.current})"/&gt;
                                &lt;L7p:Level stringValue="FINE"/&gt;
                            &lt;/L7p:AuditDetailAssertion&gt;
                            &lt;L7p:Encapsulated&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// name.result"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="f6b19229-a705-4c48-bc78-3975564a1a9a"/&gt;
                                &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Escape HTML String"/&gt;
                                &lt;L7p:Parameters mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="escapedString"/&gt;
                                    &lt;L7p:value stringValue="${name.result}"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Parameters&gt;
                            &lt;/L7p:Encapsulated&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="JHtodG1sQ29udGVudH0NCjxhIGlkPSIke2lkLmN1cnJlbnR9Ii8+PGEgaHJlZj0iJHtyZXF1ZXN0LnVybC5wYXRofT9vYmplY3RUeXBlPSR7b2JqZWN0VHlwZX0maWQ9JHtpZC5jdXJyZW50fSMke2lkLmN1cnJlbnR9IiBvbkNsaWNrPSJzZXRSZWZyZXNoKHRoaXMpIj4ke2VzY2FwZWRTdHJpbmd9PC9hPjxici8+"/&gt;
                                &lt;L7p:VariableToSet stringValue="htmlContent"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:Expression1 stringValue="${id}"/&gt;
                                    &lt;L7p:Expression2 stringValue="${id.current}"/&gt;
                                    &lt;L7p:Negate booleanValue="true"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:RightValue stringValue="${id.current}"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt;
                                &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Detail stringValue="====&gt; ID matched, processing for dependencies =================================="/&gt;
                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get certificate"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:VariablePrefix stringValue="certificate"/&gt;
                                    &lt;L7p:XmlMsgSrc stringValue="trustedCertificates.sorted"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/TrustedCertificates/TrustedCertificate[@id=$id.current]/Encoded"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:EncodeDecode&gt;
                                    &lt;L7p:CharacterEncoding stringValueNull="null"/&gt;
                                    &lt;L7p:SourceVariableName stringValue="certificate.result"/&gt;
                                    &lt;L7p:TargetDataType variableDataType="cert"/&gt;
                                    &lt;L7p:TargetVariableName stringValue="trustedCertificate"/&gt;
                                    &lt;L7p:TransformType transformType="BASE64_DECODE"/&gt;
                                    &lt;/L7p:EncodeDecode&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cast to regular variables for predicate use in XPaths"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Base64Expression stringValue="JHtuYW1lLnJlc3VsdH0="/&gt;
                                    &lt;L7p:VariableToSet stringValue="trustedCertificate.name"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Detail stringValue="===&gt; Searching objects for references"/&gt;
                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Detail stringValue="==&gt; Searching for &amp;lt;L7p:LookupTrustedCertificate&gt; in policy XML"/&gt;
                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Extract all policy objects that contain the LookupTrustedCertificate element"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:VariablePrefix stringValue="policies"/&gt;
                                    &lt;L7p:XmlMsgSrc stringValue="allPolicyXML"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/AllPolicyXML/PolicyXML[contains(.,'&amp;lt;L7p:LookupTrustedCertificate&gt;')]"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Detail stringValue="===&gt; Found some policy to analyse further"/&gt;
                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:ForEachLoop
                                    L7p:Usage="Required"
                                    loopVariable="policies.elements" variablePrefix="policy"&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Cast to message type for XPath"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:Base64Expression stringValue="JHtwb2xpY3kuY3VycmVudH0="/&gt;
                                    &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                                    &lt;L7p:DataType variableDataType="message"/&gt;
                                    &lt;L7p:VariableToSet stringValue="policyObject.xml"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Extract the policy XML from the policy object"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:VariablePrefix stringValue="policy.xml"/&gt;
                                    &lt;L7p:XmlMsgSrc stringValue="policyObject.xml"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/PolicyXML/text()"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;

                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;

                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Cast to message type for XPath"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:Base64Expression stringValue="JHtwb2xpY3kueG1sLnJlc3VsdH0="/&gt;
                                    &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                                    &lt;L7p:DataType variableDataType="message"/&gt;
                                    &lt;L7p:VariableToSet stringValue="policy.xml"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Check if the policy XML has a reference to this trusted certificate by name"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:VariablePrefix stringValue=""/&gt;

                                    &lt;L7p:XmlMsgSrc stringValue="policy.xml"/&gt;

                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;

                                    &lt;L7p:Expression stringValue="//L7p:LookupTrustedCertificate/L7p:TrustedCertificateName[@stringValue=$trustedCertificate.name]"/&gt;

                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="L7p"/&gt;

                                    &lt;L7p:value stringValue="http://www.layer7tech.com/ws/policy"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:Detail stringValue="==&gt; Matched LookupTrustedCertificate for certificate name"/&gt;

                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:assertionComment&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Check LookupTrustedCertificate for match in name"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:Base64Expression stringValue="JHt0cnVzdGVkQ2VydGlmaWNhdGUuc3ViamVjdEtleUlkZW50aWZpZXJ9"/&gt;

                                    &lt;L7p:VariableToSet stringValue="ski"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Check if the policy XML has a reference to this trusted certificate by name"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:VariablePrefix stringValue=""/&gt;

                                    &lt;L7p:XmlMsgSrc stringValue="policy.xml"/&gt;

                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;

                                    &lt;L7p:Expression stringValue="//L7p:LookupTrustedCertificate/L7p:CertSubjectKeyIdentifier[@stringValue=$ski]"/&gt;

                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="L7p"/&gt;

                                    &lt;L7p:value stringValue="http://www.layer7tech.com/ws/policy"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:Detail stringValue="==&gt; Matched LookupTrustedCertificate for SKI"/&gt;

                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:assertionComment&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Check LookupTrustedCertificate for match in SKI"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:Base64Expression stringValue="JHt0cnVzdGVkQ2VydGlmaWNhdGUudGh1bWJwcmludFNIQTF9"/&gt;

                                    &lt;L7p:VariableToSet stringValue="thumbprintSHA1"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Check if the policy XML has a reference to this trusted certificate by name"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:VariablePrefix stringValue=""/&gt;

                                    &lt;L7p:XmlMsgSrc stringValue="policy.xml"/&gt;

                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;

                                    &lt;L7p:Expression stringValue="//L7p:LookupTrustedCertificate/L7p:CertThumbprintSha1[@stringValue=$thumbprintSHA1]"/&gt;

                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="L7p"/&gt;

                                    &lt;L7p:value stringValue="http://www.layer7tech.com/ws/policy"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:Detail stringValue="==&gt; Matched LookupTrustedCertificate for ThumbprintSHA1"/&gt;

                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:assertionComment&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Check LookupTrustedCertificate for match in ThumbprintSHA1"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Attempt to extract the certSubjectDn element from the policy XML"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:VariablePrefix stringValue="certSubjectDn"/&gt;

                                    &lt;L7p:XmlMsgSrc stringValue="policy.xml"/&gt;

                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;

                                    &lt;L7p:Expression stringValue="//L7p:LookupTrustedCertificate/L7p:CertSubjectDn/@stringValue"/&gt;

                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="L7p"/&gt;

                                    &lt;L7p:value stringValue="http://www.layer7tech.com/ws/policy"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:Regex&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Normalise spaces between levels"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:AutoTarget booleanValue="false"/&gt;

                                    &lt;L7p:OtherTargetMessageVariable stringValue="certSubjectDn.result"/&gt;

                                    &lt;L7p:Regex stringValue=", *"/&gt;

                                    &lt;L7p:Replace booleanValue="true"/&gt;

                                    &lt;L7p:Replacement stringValue=","/&gt;

                                    &lt;L7p:Target target="OTHER"/&gt;
                                    &lt;/L7p:Regex&gt;
                                    &lt;L7p:ComparisonAssertion&gt;

                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;

                                    &lt;L7p:Expression1 stringValue="${certSubjectDn.result}"/&gt;

                                    &lt;L7p:Expression2 stringValue="${trustedCertificate.subject.canonical}"/&gt;

                                    &lt;L7p:Predicates predicates="included"&gt;

                                    &lt;L7p:item binary="included"&gt;

                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;

                                    &lt;L7p:RightValue stringValue="${trustedCertificate.subject.canonical}"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                    &lt;/L7p:ComparisonAssertion&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:Detail stringValue="==&gt; Matched LookupTrustedCertificate for subject DN"/&gt;

                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:assertionComment&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Check LookupTrustedCertificate for match in subject DN"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Cast to normal variable for XPath"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:Base64Expression stringValue="JHt0cnVzdGVkQ2VydGlmaWNhdGUuc2VyaWFsfQ=="/&gt;

                                    &lt;L7p:VariableToSet stringValue="serialNumber"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Check if the policy XML has a reference to this trusted certificate by serial number"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:VariablePrefix stringValue=""/&gt;

                                    &lt;L7p:XmlMsgSrc stringValue="policy.xml"/&gt;

                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;

                                    &lt;L7p:Expression stringValue="//L7p:LookupTrustedCertificate/L7p:CertSerialNumber[@stringValue=$serialNumber]"/&gt;

                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="L7p"/&gt;

                                    &lt;L7p:value stringValue="http://www.layer7tech.com/ws/policy"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="wsp"/&gt;

                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/ws/2002/12/policy"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Attempt to extract the certIssuerDn element from the policy XML"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:VariablePrefix stringValue="certIssuerDn"/&gt;

                                    &lt;L7p:XmlMsgSrc stringValue="policy.xml"/&gt;

                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;

                                    &lt;L7p:Expression stringValue="//L7p:LookupTrustedCertificate/L7p:CertIssuerDn/@stringValue"/&gt;

                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="L7p"/&gt;

                                    &lt;L7p:value stringValue="http://www.layer7tech.com/ws/policy"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:Regex&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Normalise spaces between levels"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:AutoTarget booleanValue="false"/&gt;

                                    &lt;L7p:OtherTargetMessageVariable stringValue="certIssuerDn.result"/&gt;

                                    &lt;L7p:Regex stringValue=", *"/&gt;

                                    &lt;L7p:Replace booleanValue="true"/&gt;

                                    &lt;L7p:Replacement stringValue=","/&gt;

                                    &lt;L7p:Target target="OTHER"/&gt;
                                    &lt;/L7p:Regex&gt;
                                    &lt;L7p:ComparisonAssertion&gt;

                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;

                                    &lt;L7p:Expression1 stringValue="${certIssuerDn.result}"/&gt;

                                    &lt;L7p:Expression2 stringValue="${trustedCertificate.issuer.canonical}"/&gt;

                                    &lt;L7p:Predicates predicates="included"&gt;

                                    &lt;L7p:item binary="included"&gt;

                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;

                                    &lt;L7p:RightValue stringValue="${trustedCertificate.issuer.canonical}"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                    &lt;/L7p:ComparisonAssertion&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:Detail stringValue="==&gt; Matched LookupTrustedCertificate for issuer DN and serial number"/&gt;

                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:assertionComment&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Check LookupTrustedCertificate for match in issuer DN and serial number"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:assertionComment&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Match the possible scenarios for LookupTrustedCertificate"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;L7p:Include&gt;

                                    &lt;L7p:PolicyGuid stringValue="8f33b165-bc16-4959-a524-aba67aff3cdf"/&gt;
                                    &lt;/L7p:Include&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:Base64Expression stringValue="JHtzb3VyY2VUeXBlLnJlc3VsdH06ICR7Zm9sZGVyUGF0aC5yZXN1bHR9JHtuYW1lLnJlc3VsdH0gW2luICJMb29rIFVwIENlcnRpZmljYXRlIiBhc3NlcnRpb25d"/&gt;

                                    &lt;L7p:VariableToSet stringValue="depender"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:ManipulateMultiValuedVariable&gt;

                                    &lt;L7p:SourceVariableName stringValue="depender"/&gt;

                                    &lt;L7p:TargetVariableName stringValue="dependers.list"/&gt;
                                    &lt;/L7p:ManipulateMultiValuedVariable&gt;
                                    &lt;L7p:assertionComment&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Search policy XML for each policy matching our reference"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:TrueAssertion/&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Search policy XML for each possibility matching our reference, never fail"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;/L7p:ForEachLoop&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Search for references in policy XML"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:TrueAssertion/&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Search for references to LookupTrustedCertificate in policy XML, never fail"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Detail stringValue="==&gt; Searching for &amp;lt;L7p:NonSoapVerifyElement&gt; policy XML"/&gt;
                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Extract all policy objects that contain the NonSoapVerifyElement element"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:VariablePrefix stringValue="policies"/&gt;
                                    &lt;L7p:XmlMsgSrc stringValue="allPolicyXML"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/AllPolicyXML/PolicyXML[contains(.,'&amp;lt;L7p:NonSoapVerifyElement&gt;')]"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Detail stringValue="===&gt; Found some policy to analyse further"/&gt;
                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:ForEachLoop
                                    L7p:Usage="Required"
                                    loopVariable="policies.elements" variablePrefix="policy"&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Cast to message type for XPath"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:Base64Expression stringValue="JHtwb2xpY3kuY3VycmVudH0="/&gt;
                                    &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                                    &lt;L7p:DataType variableDataType="message"/&gt;
                                    &lt;L7p:VariableToSet stringValue="policyObject.xml"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Extract the policy XML from the policy object"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:VariablePrefix stringValue="policy.xml"/&gt;
                                    &lt;L7p:XmlMsgSrc stringValue="policyObject.xml"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/PolicyXML/text()"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;

                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;

                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Cast to message type for XPath"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:Base64Expression stringValue="JHtwb2xpY3kueG1sLnJlc3VsdH0="/&gt;
                                    &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                                    &lt;L7p:DataType variableDataType="message"/&gt;
                                    &lt;L7p:VariableToSet stringValue="policy.xml"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Check if the policy XML has a reference to this trusted certificate by name"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:VariablePrefix stringValue=""/&gt;

                                    &lt;L7p:XmlMsgSrc stringValue="policy.xml"/&gt;

                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;

                                    &lt;L7p:Expression stringValue="//L7p:NonSoapVerifyElement/L7p:VerifyCertificateName[@stringValue=$trustedCertificate.name]"/&gt;

                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="L7p"/&gt;

                                    &lt;L7p:value stringValue="http://www.layer7tech.com/ws/policy"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:Detail stringValue="==&gt; Matched NonSoapVerifyElement for certificate name"/&gt;

                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:assertionComment&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Check VerifyCertificateName for match in name"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Check if the policy XML has a reference to this trusted certificate by ID"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:VariablePrefix stringValue=""/&gt;

                                    &lt;L7p:XmlMsgSrc stringValue="policy.xml"/&gt;

                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;

                                    &lt;L7p:Expression stringValue="//L7p:NonSoapVerifyElement/L7p:VerifyCertificateGoid[@goidValue=$id.current]"/&gt;

                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="L7p"/&gt;

                                    &lt;L7p:value stringValue="http://www.layer7tech.com/ws/policy"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:Detail stringValue="==&gt; Matched NonSoapVerifyElement for ID"/&gt;

                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:assertionComment&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Check VerifyCertificateGoids for match in id"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:assertionComment&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Match the possible scenarios for VerifyCertificate[Name|Goid]"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;L7p:Include&gt;

                                    &lt;L7p:PolicyGuid stringValue="8f33b165-bc16-4959-a524-aba67aff3cdf"/&gt;
                                    &lt;/L7p:Include&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:Base64Expression stringValue="JHtzb3VyY2VUeXBlLnJlc3VsdH06ICR7Zm9sZGVyUGF0aC5yZXN1bHR9JHtuYW1lLnJlc3VsdH0gW2luICIoTm9uLVNPQVApIFZlcmlmeSBYTUwgRWxlbWVudCIgYXNzZXJ0aW9uXQ=="/&gt;

                                    &lt;L7p:VariableToSet stringValue="depender"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:ManipulateMultiValuedVariable&gt;

                                    &lt;L7p:SourceVariableName stringValue="depender"/&gt;

                                    &lt;L7p:TargetVariableName stringValue="dependers.list"/&gt;
                                    &lt;/L7p:ManipulateMultiValuedVariable&gt;
                                    &lt;L7p:assertionComment&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Search policy XML for each policy matching our reference"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:TrueAssertion/&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Search policy XML for each possibility matching our reference, never fail"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;/L7p:ForEachLoop&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Search for references in policy XML"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:TrueAssertion/&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Search for references to NonSoapVerifyElement in policy XML, never fail"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Detail stringValue="==&gt; Searching for &amp;lt;L7p:TlsTrustedCertGoids in policy XML"/&gt;
                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Extract all policy objects that contain the TlsTrustedCertGoids element"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:VariablePrefix stringValue="policies"/&gt;
                                    &lt;L7p:XmlMsgSrc stringValue="allPolicyXML"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/AllPolicyXML/PolicyXML[contains(.,'&amp;lt;L7p:TlsTrustedCertGoids')]"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Detail stringValue="===&gt; Found some policy to analyse further"/&gt;
                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:ForEachLoop
                                    L7p:Usage="Required"
                                    loopVariable="policies.elements" variablePrefix="policy"&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Cast to message type for XPath"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:Base64Expression stringValue="JHtwb2xpY3kuY3VycmVudH0="/&gt;
                                    &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                                    &lt;L7p:DataType variableDataType="message"/&gt;
                                    &lt;L7p:VariableToSet stringValue="policyObject.xml"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Extract the policy XML from the policy object"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:VariablePrefix stringValue="policy.xml"/&gt;
                                    &lt;L7p:XmlMsgSrc stringValue="policyObject.xml"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/PolicyXML/text()"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;

                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;

                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Cast to message type for XPath"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:Base64Expression stringValue="JHtwb2xpY3kueG1sLnJlc3VsdH0="/&gt;
                                    &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                                    &lt;L7p:DataType variableDataType="message"/&gt;
                                    &lt;L7p:VariableToSet stringValue="policy.xml"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Check if the policy XML has a reference to this trusted certificate by ID"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:VariablePrefix stringValue=""/&gt;

                                    &lt;L7p:XmlMsgSrc stringValue="policy.xml"/&gt;

                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;

                                    &lt;L7p:Expression stringValue="//L7p:HttpRoutingAssertion/L7p:TlsTrustedCertGoids/L7p:item[@goidValue=$id.current]"/&gt;

                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="L7p"/&gt;

                                    &lt;L7p:value stringValue="http://www.layer7tech.com/ws/policy"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Detail stringValue="==&gt; Matched HttpRoutingAssertion/TlsTrustedCertGoids for ID"/&gt;
                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:Include&gt;

                                    &lt;L7p:PolicyGuid stringValue="8f33b165-bc16-4959-a524-aba67aff3cdf"/&gt;
                                    &lt;/L7p:Include&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:Base64Expression stringValue="JHtzb3VyY2VUeXBlLnJlc3VsdH06ICR7Zm9sZGVyUGF0aC5yZXN1bHR9JHtuYW1lLnJlc3VsdH0gW2luICJSb3V0ZSB2aWEgSFRUUChzKSBhc3NlcnRpb24iXQ=="/&gt;

                                    &lt;L7p:VariableToSet stringValue="depender"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:ManipulateMultiValuedVariable&gt;

                                    &lt;L7p:SourceVariableName stringValue="depender"/&gt;

                                    &lt;L7p:TargetVariableName stringValue="dependers.list"/&gt;
                                    &lt;/L7p:ManipulateMultiValuedVariable&gt;
                                    &lt;L7p:assertionComment&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Search policy XML for each policy matching our reference"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:TrueAssertion/&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Search policy XML for each possibility matching our reference, never fail"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;/L7p:ForEachLoop&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Search for references in policy XML"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:TrueAssertion/&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Search for references to TlsTrustedCertGoids in policy XML, never fail"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Detail stringValue="==&gt; Searching identity provider definitions"/&gt;
                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:Encapsulated&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// GET identityProviders"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="c8a5a0d5-1ae2-4144-b538-5c311efc1560"/&gt;

                                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Call Restman"/&gt;
                                    &lt;L7p:Parameters mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="element"/&gt;
                                    &lt;L7p:value stringValue=""/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="message"/&gt;
                                    &lt;L7p:value stringValue=""/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="method"/&gt;
                                    &lt;L7p:value stringValue="GET"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="resource"/&gt;
                                    &lt;L7p:value stringValue="identityProviders"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Parameters&gt;
                                    &lt;/L7p:Encapsulated&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Extract list of IDPs that reference this trusted certificate"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:VariablePrefix stringValue="dependers"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/l7:List/l7:Item/l7:Resource/l7:IdentityProvider/l7:Extension/l7:FederatedIdentityProviderDetail/l7:CertificateReferences/l7:Reference[@id=$id.current]/../../../../@id"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:ForEachLoop
                                    L7p:Usage="Required"
                                    loopVariable="dependers.results" variablePrefix="depender"&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Get name of Identity Provider that references this trusted certificate"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:VariablePrefix stringValue="name"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/l7:List/l7:Item/l7:Resource/l7:IdentityProvider[@id=$depender.current]/l7:Name"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;

                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:Base64Expression stringValue="SURFTlRJVFkgUFJPVklERVI6ICR7bmFtZS5yZXN1bHR9"/&gt;
                                    &lt;L7p:VariableToSet stringValue="depender"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:ManipulateMultiValuedVariable&gt;

                                    &lt;L7p:SourceVariableName stringValue="depender"/&gt;

                                    &lt;L7p:TargetVariableName stringValue="dependers.list"/&gt;
                                    &lt;/L7p:ManipulateMultiValuedVariable&gt;
                                    &lt;/L7p:ForEachLoop&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Search for references in identity provider definitions"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:TrueAssertion/&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Search for references in identity provider definitions, never fail"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${dependers.list.length}"/&gt;
                                    &lt;L7p:Expression2 stringValue="1"/&gt;
                                    &lt;L7p:Operator operator="GE"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;

                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="GE"/&gt;
                                    &lt;L7p:RightValue stringValue="1"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                    &lt;/L7p:ComparisonAssertion&gt;
                                    &lt;L7p:ForEachLoop
                                    L7p:Usage="Required"
                                    loopVariable="dependers.list" variablePrefix="depender"&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:Base64Expression stringValue="JHtkZXBlbmRlcnMuaHRtbH0NCiAgPGxpPiR7ZGVwZW5kZXIuY3VycmVudH08L2xpPg=="/&gt;
                                    &lt;L7p:VariableToSet stringValue="dependers.html"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;/L7p:ForEachLoop&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="JHtodG1sQ29udGVudH0NCg0KPHA+VGhlIGZvbGxvd2luZyBvYmplY3RzIHJlZmVyZW5jZSB0aGlzIHRydXN0ZWQgY2VydGlmaWNhdGU6PC9wPg0KPHVsPiR7ZGVwZW5kZXJzLmh0bWx9PC91bD4NCjxwPkNhdmVhdCBlbXB0b3I6IFRoaXMgZG9lcyBub3QgbG9vayBmb3IgdHJ1c3RlZCBjZXJ0aWZpY2F0ZXMgcmVmZXJlbmNlZCBpbiBwb2xpY3kgYnkgY29udGV4dCB2YXJpYWJsZXMhPC9wPg=="/&gt;
                                    &lt;L7p:VariableToSet stringValue="htmlContent"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${dependers.list} has content"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="JHtodG1sQ29udGVudH0NCjxwPk5vdGhpbmcgd2FzIGZvdW5kIHRoYXQgcmVmZXJlbmNlcyB0aGlzIHRydXN0ZWQgY2VydGlmaWNhdGU8L3A+DQo8cD5DYXZlYXQgZW1wdG9yOiBUaGlzIGRvZXMgbm90IGxvb2sgZm9yIHRydXN0ZWQgY2VydGlmaWNhdGVzIHJlZmVyZW5jZWQgaW4gcG9saWN5IGJ5IGNvbnRleHQgdmFyaWFibGVzITwvcD4="/&gt;
                                    &lt;L7p:VariableToSet stringValue="htmlContent"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Append ${dependers.html} to ${htmlContent} if ${dependers.list} has any entries"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${id} matches so retrieve dependers"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                &lt;/wsp:All&gt;
                                &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Do reverse dependency search if id matches"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt;
                            &lt;/wsp:OneOrMore&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cycle through each object to add to display and check if search must be run"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/L7p:ForEachLoop&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${objectType} == &amp;quot;Trusted Certificate&amp;quot;"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${objectType}"/&gt;
                            &lt;L7p:Expression2 stringValue="User"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="User"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:AuditDetailAssertion&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:Detail stringValue="======&gt; Listing ${objectType} objects"/&gt;
                            &lt;L7p:Level stringValue="FINE"/&gt;
                        &lt;/L7p:AuditDetailAssertion&gt;
                        &lt;L7p:Encapsulated&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get list of objectTypes to display and search for references"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="005d518f-604e-4c02-b889-85c2607e46cc"/&gt;
                            &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: List Users"/&gt;
                            &lt;L7p:Parameters mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="cacheAge"/&gt;
                                    &lt;L7p:value stringValue="${cacheAge}"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="refresh"/&gt;
                                    &lt;L7p:value stringValue="${request.http.parameter.refresh}"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Parameters&gt;
                        &lt;/L7p:Encapsulated&gt;
                        &lt;L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get list of ids"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:VariablePrefix stringValue="ids"/&gt;
                            &lt;L7p:XmlMsgSrc stringValue="users.sorted"/&gt;
                            &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                &lt;L7p:Expression stringValue="/Users/User/@id"/&gt;
                                &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Namespaces&gt;
                                &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                            &lt;/L7p:XpathExpression&gt;
                        &lt;/L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:ForEachLoop L7p:Usage="Required"
                            loopVariable="ids.results" variablePrefix="id"&gt;
                            &lt;L7p:ResponseXpathAssertion&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get name of the object for display"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:VariablePrefix stringValue="name"/&gt;
                                &lt;L7p:XmlMsgSrc stringValue="users.sorted"/&gt;
                                &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/Users/User[@id=$id.current]/Name"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                &lt;/L7p:XpathExpression&gt;
                            &lt;/L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:ResponseXpathAssertion&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get providerName of the object for display"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:VariablePrefix stringValue="providerName"/&gt;
                                &lt;L7p:XmlMsgSrc stringValue="users.sorted"/&gt;
                                &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/Users/User[@id=$id.current]/@providerName"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                &lt;/L7p:XpathExpression&gt;
                            &lt;/L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:AuditDetailAssertion&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:Detail stringValue="=====&gt; Processing ${objectType}: (${id.current})"/&gt;
                                &lt;L7p:Level stringValue="FINE"/&gt;
                            &lt;/L7p:AuditDetailAssertion&gt;
                            &lt;L7p:Encapsulated&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${providerName.result}: ${name.result}"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="f6b19229-a705-4c48-bc78-3975564a1a9a"/&gt;
                                &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Escape HTML String"/&gt;
                                &lt;L7p:Parameters mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="escapedString"/&gt;
                                    &lt;L7p:value stringValue="${providerName.result} : ${name.result}"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Parameters&gt;
                            &lt;/L7p:Encapsulated&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="JHtodG1sQ29udGVudH0NCjxhIGlkPSIke2lkLmN1cnJlbnR9Ii8+PGEgaHJlZj0iJHtyZXF1ZXN0LnVybC5wYXRofT9vYmplY3RUeXBlPSR7b2JqZWN0VHlwZX0maWQ9JHtpZC5jdXJyZW50fSMke2lkLmN1cnJlbnR9IiBvbkNsaWNrPSJzZXRSZWZyZXNoKHRoaXMpIj4ke2VzY2FwZWRTdHJpbmd9PC9hPjxici8+"/&gt;
                                &lt;L7p:VariableToSet stringValue="htmlContent"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:Expression1 stringValue="${id}"/&gt;
                                    &lt;L7p:Expression2 stringValue="${id.current}"/&gt;
                                    &lt;L7p:Negate booleanValue="true"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:RightValue stringValue="${id.current}"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt;
                                &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Detail stringValue="====&gt; ID matched, processing for dependencies =================================="/&gt;
                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Get providerId of the object for confirmation"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:VariablePrefix stringValue="providerId"/&gt;
                                    &lt;L7p:XmlMsgSrc stringValue="users.sorted"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/Users/User[@id=$id.current]/@providerId"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// The final identifier string we'll use"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Base64Expression stringValue="PEw3cDpVc2VyVWlkIHN0cmluZ1ZhbHVlPSIke2lkLmN1cnJlbnR9Ii8+"/&gt;
                                    &lt;L7p:VariableToSet stringValue="referenceString"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Detail stringValue="===&gt; Searching objects for references to ${referenceString}"/&gt;
                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Detail stringValue="==&gt; Searching policy XML"/&gt;
                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                    &lt;/L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Extract all policy objects that contain the reference string"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:VariablePrefix stringValue="policies"/&gt;
                                    &lt;L7p:XmlMsgSrc stringValue="allPolicyXML"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/AllPolicyXML/PolicyXML[contains(.,$referenceString)]"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:ForEachLoop
                                    L7p:Usage="Required"
                                    loopVariable="policies.elements" variablePrefix="policy"&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Cast to message type for XPath"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:Base64Expression stringValue="JHtwb2xpY3kuY3VycmVudH0="/&gt;
                                    &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                                    &lt;L7p:DataType variableDataType="message"/&gt;
                                    &lt;L7p:VariableToSet stringValue="policyObject.xml"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Extract the policy XML from the policy object"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:VariablePrefix stringValue="policy.xml"/&gt;
                                    &lt;L7p:XmlMsgSrc stringValue="policyObject.xml"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/PolicyXML/text()"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;

                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;

                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Cast to message type for XPath"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:Base64Expression stringValue="JHtwb2xpY3kueG1sLnJlc3VsdH0="/&gt;
                                    &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                                    &lt;L7p:DataType variableDataType="message"/&gt;
                                    &lt;L7p:VariableToSet stringValue="policy.xml"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:ResponseXpathAssertion&gt;

                                    &lt;L7p:AssertionComment assertionComment="included"&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Check if the policy XML has a reference to this user id"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;

                                    &lt;L7p:VariablePrefix stringValue=""/&gt;

                                    &lt;L7p:XmlMsgSrc stringValue="policy.xml"/&gt;

                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;

                                    &lt;L7p:Expression stringValue="//L7p:SpecificUser/L7p:IdentityProviderOid[@goidValue=$providerId.result]"/&gt;

                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="L7p"/&gt;

                                    &lt;L7p:value stringValue="http://www.layer7tech.com/ws/policy"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="wsp"/&gt;

                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/ws/2002/12/policy"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;

                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                    &lt;/L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:Include&gt;

                                    &lt;L7p:PolicyGuid stringValue="8f33b165-bc16-4959-a524-aba67aff3cdf"/&gt;
                                    &lt;/L7p:Include&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:Base64Expression stringValue="JHtzb3VyY2VUeXBlLnJlc3VsdH06ICR7Zm9sZGVyUGF0aC5yZXN1bHR9JHtuYW1lLnJlc3VsdH0="/&gt;

                                    &lt;L7p:VariableToSet stringValue="depender"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:ManipulateMultiValuedVariable&gt;

                                    &lt;L7p:SourceVariableName stringValue="depender"/&gt;

                                    &lt;L7p:TargetVariableName stringValue="dependers.list"/&gt;
                                    &lt;/L7p:ManipulateMultiValuedVariable&gt;
                                    &lt;L7p:assertionComment&gt;

                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;

                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Search policy XML for IdentityProviderOid element matching our reference"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:TrueAssertion/&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;

                                    &lt;L7p:value stringValue="// Search policy XML for IdentityProviderOid element matching our reference, never fail"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cycle through each policy that has our reference string and confirm the provider"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/L7p:ForEachLoop&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Search for references in policy XML"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:TrueAssertion/&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Search for references in policy XML, never fail"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                    &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${dependers.list.length}"/&gt;
                                    &lt;L7p:Expression2 stringValue="1"/&gt;
                                    &lt;L7p:Operator operator="GE"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;

                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="GE"/&gt;
                                    &lt;L7p:RightValue stringValue="1"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                    &lt;/L7p:ComparisonAssertion&gt;
                                    &lt;L7p:ForEachLoop
                                    L7p:Usage="Required"
                                    loopVariable="dependers.list" variablePrefix="depender"&gt;
                                    &lt;L7p:SetVariable&gt;

                                    &lt;L7p:Base64Expression stringValue="JHtkZXBlbmRlcnMuaHRtbH0NCiAgPGxpPiR7ZGVwZW5kZXIuY3VycmVudH08L2xpPg=="/&gt;
                                    &lt;L7p:VariableToSet stringValue="dependers.html"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;/L7p:ForEachLoop&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="JHtodG1sQ29udGVudH0NCg0KPHA+VGhlIGZvbGxvd2luZyBvYmplY3RzIHJlZmVyZW5jZSB0aGlzIHVzZXI6PC9wPg0KPHVsPiR7ZGVwZW5kZXJzLmh0bWx9PC91bD4="/&gt;
                                    &lt;L7p:VariableToSet stringValue="htmlContent"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${dependers.list} has content"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:All&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="JHtodG1sQ29udGVudH0NCjxwPk5vdGhpbmcgd2FzIGZvdW5kIHRoYXQgcmVmZXJlbmNlcyB0aGlzIHVzZXI8L3A+"/&gt;
                                    &lt;L7p:VariableToSet stringValue="htmlContent"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Append ${dependers.html} to ${htmlContent} if ${dependers.list} has any entries"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                    &lt;/wsp:OneOrMore&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${id} matches so retrieve dependers"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                &lt;/wsp:All&gt;
                                &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Do reverse dependency search if id matches"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt;
                            &lt;/wsp:OneOrMore&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cycle through each object to add to display and check if search must be run"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/L7p:ForEachLoop&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${objectType} == &amp;quot;User&amp;quot;"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${ids.found}"/&gt;
                            &lt;L7p:Operator operatorNull="null"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="boolean"/&gt;
                                &lt;/L7p:item&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="false"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:AuditDetailAssertion&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:Detail stringValue="==&gt; No objects of ${objectType} found"/&gt;
                            &lt;L7p:Level stringValue="FINE"/&gt;
                        &lt;/L7p:AuditDetailAssertion&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="PHA+Tm8gJHtvYmplY3RUeXBlfSBvYmplY3RzIHdlcmUgZm91bmQuPC9wPg=="/&gt;
                            &lt;L7p:VariableToSet stringValue="htmlContent"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// if ${ids.found} == false then set message to &amp;quot;No objects found&amp;quot;"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:AuditDetailAssertion&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:Detail stringValue="==&gt; Failed to process object type: ${objectType}"/&gt;
                            &lt;L7p:Level stringValue="FINE"/&gt;
                        &lt;/L7p:AuditDetailAssertion&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="RmFpbGVkIHRvIHByb2Nlc3Mgb2JqZWN0IHR5cGU6ICR7b2JqZWN0VHlwZX0gaWRzLmZvdW5kPSR7aWRzLmZvdW5kfQ=="/&gt;
                            &lt;L7p:VariableToSet stringValue="error.message"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="NTAw"/&gt;
                            &lt;L7p:VariableToSet stringValue="error.status"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:FalseAssertion/&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Failure processing request"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Handle different objectTypes"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:HardcodedResponse&gt;
                    &lt;L7p:Base64ResponseBody stringValue="JHtodG1sLnRvcH0KCiAgICA8c2NyaXB0PgogICAgICBmdW5jdGlvbiBzZXRSZWZyZXNoIChvYmplY3QpIHsKICAgICAgICB1cmw9bmV3IFVSTChvYmplY3QuaHJlZik7CiAgICAgICAgdXJsLnNlYXJjaFBhcmFtcy5zZXQoJ3JlZnJlc2gnLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgicmVmcmVzaCIpLmNoZWNrZWQpOwogICAgICAgIG9iamVjdC5ocmVmPXVybDsKICAgICAgfQogICAgPC9zY3JpcHQ+CgogICAgPHA+U2VsZWN0IG9iamVjdCB0eXBlIHRvIGdlbmVyYXRlIGxpc3Qgb2Ygb2JqZWN0cywgdGhlbiBzZWxlY3QgYSBzcGVjaWZpYyBvYmplY3QgdG8gZmluZAogICAgICAgd2hhdCBkZXBlbmRzIG9uIGl0LjwvcD4KCiAgICA8cD5Ob3RlOiBUaGlzIHV0aWxpdHkgaXMgcHJvdmlkZWQgYXMtaXMgYW5kIGlzIG5vdCBuZWNlc3NhcmlseSBjb21wcmVoZW5zaXZlLiBDYXZlYXQgRW1wdG9yLjwvcD4KCiAgICA8Zm9ybSBtZXRob2Q9IkdFVCI+CiAgICA8cD5PYmplY3QgVHlwZTogJHtvYmplY3RUeXBlLnNlbGVjdH08L3A+CiAgICA8L2Zvcm0+CgogICAgPHA+UmVmcmVzaCBjYWNoZT8gPGlucHV0IHR5cGU9ImNoZWNrYm94IiBpZD0icmVmcmVzaCI+PC9wPgoKJHtodG1sQ29udGVudH0KCiR7aHRtbC5ib3R0b219"/&gt;
                    &lt;L7p:ResponseContentType stringValue="text/html; charset=UTF-8"/&gt;
                &lt;/L7p:HardcodedResponse&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// ${loggedIn} == true"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${loggedIn}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="boolean"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:RightValue stringValue="false"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${logout}"/&gt;
                            &lt;L7p:Operator operatorNull="null"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="boolean"/&gt;
                                &lt;/L7p:item&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="true"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:AuditDetailAssertion&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:Detail stringValue="==&gt; Logging user out"/&gt;
                            &lt;L7p:Level stringValue="FINE"/&gt;
                        &lt;/L7p:AuditDetailAssertion&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue=""/&gt;
                            &lt;L7p:DataType variableDataType="dateTime"/&gt;
                            &lt;L7p:DateOffsetExpression stringValue="-1"/&gt;
                            &lt;L7p:DateOffsetField intValue="5"/&gt;
                            &lt;L7p:VariableToSet stringValue="yesterday"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:ManageCookie&gt;
                            &lt;L7p:CookieAttributes mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="name"/&gt;
                                    &lt;L7p:value nameValuePair="included"&gt;
                                    &lt;L7p:Key stringValue="name"/&gt;
                                    &lt;L7p:Value stringValue="sessionKey"/&gt;
                                    &lt;/L7p:value&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="max-age"/&gt;
                                    &lt;L7p:value nameValuePair="included"&gt;
                                    &lt;L7p:Key stringValue="max-age"/&gt;
                                    &lt;L7p:Value stringValue="0"/&gt;
                                    &lt;/L7p:value&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="httpOnly"/&gt;
                                    &lt;L7p:value nameValuePair="included"&gt;
                                    &lt;L7p:Key stringValue="httpOnly"/&gt;
                                    &lt;L7p:Value stringValue="true"/&gt;
                                    &lt;/L7p:value&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="secure"/&gt;
                                    &lt;L7p:value nameValuePair="included"&gt;
                                    &lt;L7p:Key stringValue="secure"/&gt;
                                    &lt;L7p:Value stringValue="true"/&gt;
                                    &lt;/L7p:value&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="value"/&gt;
                                    &lt;L7p:value nameValuePair="included"&gt;
                                    &lt;L7p:Key stringValue="value"/&gt;
                                    &lt;L7p:Value stringValue="NULL"/&gt;
                                    &lt;/L7p:value&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:CookieAttributes&gt;
                            &lt;L7p:Operation operation="ADD_OR_REPLACE"/&gt;
                            &lt;L7p:Target target="RESPONSE"/&gt;
                        &lt;/L7p:ManageCookie&gt;
                        &lt;L7p:CacheStorage&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Remove from cache by setting TTL to 0"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:CacheEntryKey stringValue="${cookie.sessionKey}"/&gt;
                            &lt;L7p:CacheId stringValue="loginCache"/&gt;
                            &lt;L7p:MaxEntries stringValue="25"/&gt;
                            &lt;L7p:MaxEntryAgeSeconds stringValue="0"/&gt;
                            &lt;L7p:MaxEntrySizeBytes stringValue="1000"/&gt;
                            &lt;L7p:OtherTargetMessageVariable stringValue="sessionDetail"/&gt;
                            &lt;L7p:Target target="OTHER"/&gt;
                        &lt;/L7p:CacheStorage&gt;
                        &lt;L7p:AddHeader&gt;
                            &lt;L7p:HeaderName stringValue="Location"/&gt;
                            &lt;L7p:HeaderValue stringValue="${request.url.path}"/&gt;
                            &lt;L7p:Target target="RESPONSE"/&gt;
                        &lt;/L7p:AddHeader&gt;
                        &lt;L7p:HardcodedResponse&gt;
                            &lt;L7p:Base64ResponseBody stringValue="JHtodG1sLnRvcH0KPHA+JHtmb3JtLm1lc3NhZ2V9PC9wPgoKPHA+PGEgaHJlZj0iJHtyZXF1ZXN0LnVybC5wYXRofSI+Q29udGludWU8L3A+CiR7aHRtbC5ib3R0b219"/&gt;
                            &lt;L7p:ResponseContentType stringValue="text/html; charset=UTF-8"/&gt;
                            &lt;L7p:ResponseStatus stringValue="302"/&gt;
                        &lt;/L7p:HardcodedResponse&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Logout"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:AuditDetailAssertion&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:Detail stringValue="==&gt; Not authenticated, returning login form"/&gt;
                            &lt;L7p:Level stringValue="FINE"/&gt;
                        &lt;/L7p:AuditDetailAssertion&gt;
                        &lt;L7p:HardcodedResponse&gt;
                            &lt;L7p:Base64ResponseBody stringValue="JHtodG1sLnRvcH0KICAgIDxwPiR7Zm9ybS5tZXNzYWdlfTwvcD4KCiAgICA8cD5QbGVhc2UgcHJvdmlkZSBQb2xpY3kgTWFuYWdlciBhZG1pbmlzdHJhdG9yIGNyZWRlbnRpYWxzOjwvcD4KICAgIDxmb3JtIG1ldGhvZD0iUE9TVCI+CiAgICA8cD5Vc2VybmFtZTogPGlucHV0IG5hbWU9InVzZXJuYW1lIiB0eXBlPSJ0ZXh0Ii8+PGJyLz4KICAgIFBhc3N3b3JkOiA8aW5wdXQgbmFtZT0icGFzc3dvcmQiIHR5cGU9InBhc3N3b3JkIi8+PGJyLz4KICAgIDxpbnB1dCB0eXBlPSJzdWJtaXQiIHZhbHVlPSJDb250aW51ZSIvPjwvcD4KICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9ImFjdGlvbiIgdmFsdWU9ImxvZ2luIi8+CiAgICA8L2Zvcm0+CgogICAgPHA+Tm90ZTogT24gZmlyc3QgbG9naW4gdGhlIERlcGVuZGVuY3kgQW5hbHl6ZXIgbG9hZHMgYWxsIG9mIHRoZSBwb2xpY2llcyBpbnRvIHRoZSBjYWNoZSBhbmQgbWF5IHRha2UgYSBsb25nIHRpbWUuIFBsZWFzZSBiZSBwYXRpZW50LiBUaGlzIGNhbiBiZSBtaXRpZ2F0ZWQgYnkgZW5hYmxpbmcgdGhlIDxiPkdhdGV3YXkgTWFuYWdlbWVudCBVdGlsaXRpZXMgQ2FjaGVyPC9iPiBzY2hlZHVsZWQgc2VydmljZS48L3A+CiR7aHRtbC5ib3R0b219"/&gt;
                            &lt;L7p:ResponseContentType stringValue="text/html; charset=UTF-8"/&gt;
                        &lt;/L7p:HardcodedResponse&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Failed or new"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Handle logout vs failed or new login"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// ${loggedIn} == false"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Do processing if ${loggedIn} == true else return login form"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
                        </l7:ResourceSet>
                    </l7:Resources>
                </l7:Service>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>API Gateway Certificate Report</l7:Name>
            <l7:Id>c8401b4fe66b706c1ad6260099cc0b79</l7:Id>
            <l7:Type>SERVICE</l7:Type>
            <l7:TimeStamp>2022-04-29T11:42:05.501-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Service id="c8401b4fe66b706c1ad6260099cc0b79" version="3">
                    <l7:ServiceDetail folderId="7215d076e3f7201974e2be3edf13f52e" id="c8401b4fe66b706c1ad6260099cc0b79" version="3">
                        <l7:Name>API Gateway Certificate Report</l7:Name>
                        <l7:Enabled>true</l7:Enabled>
                        <l7:ServiceMappings>
                            <l7:HttpMapping>
                                <l7:UrlPattern>/apigw/certificateReport</l7:UrlPattern>
                                <l7:Verbs>
                                    <l7:Verb>GET</l7:Verb>
                                    <l7:Verb>POST</l7:Verb>
                                    <l7:Verb>PUT</l7:Verb>
                                    <l7:Verb>DELETE</l7:Verb>
                                </l7:Verbs>
                            </l7:HttpMapping>
                        </l7:ServiceMappings>
                        <l7:Properties>
                            <l7:Property key="internal">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                            <l7:Property key="policyRevision">
                                <l7:LongValue>181</l7:LongValue>
                            </l7:Property>
                            <l7:Property key="soap">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                            <l7:Property key="tracingEnabled">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                            <l7:Property key="wssProcessingEnabled">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                        </l7:Properties>
                    </l7:ServiceDetail>
                    <l7:Resources>
                        <l7:ResourceSet tag="policy">
                            <l7:Resource type="policy" version="180">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**************************************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Service to generate a report on certificates in the Gateway"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** HTML access requires account in admin role"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Non-HTML access requires account in a role with read access to trusted certificates and private keys to call restman"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Default to HTML form based response. Change to application/json or text/xml using format parameter"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** If ${request.http.parameter.format} = JSON or XML then use Basic Auth for authentication"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Response will set the following HTTP headers:"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   X-AlertLevel (0=OK | 1=INFO | 2=WARNING | 3=SEVERE)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   X-AlertStatus (OK | INFO | WARNING | SEVERE)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**   X-AlertMessage (string)"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v1.0.0 - Jay MacDonald - 20211102 - Initial Version"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v1.0.1 - Jay MacDonald - 20220203 - Fixed bug comparing remaining days using string to integer"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v1.0.2 - Jay MacDonald - 20220429 - Fixed bug where comparing -0 days still comes up as not expired"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**************************************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:AuditAssertion/&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="JHtyZXF1ZXN0Lmh0dHAucGFyYW1ldGVyLmZvcm1hdH0="/&gt;
            &lt;L7p:VariableToSet stringValue="format"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${format}"/&gt;
                &lt;L7p:Expression2 stringValue=""/&gt;
                &lt;L7p:Negate booleanValue="true"/&gt;
                &lt;L7p:Operator operator="EMPTY"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item binary="included"&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Negated booleanValue="true"/&gt;
                        &lt;L7p:Operator operator="EMPTY"/&gt;
                        &lt;L7p:RightValue stringValue=""/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="SFRNTA=="/&gt;
                &lt;L7p:VariableToSet stringValue="format"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Confirm ${format} is set, default to HTML"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:Regex&gt;
                &lt;L7p:AutoTarget booleanValue="false"/&gt;
                &lt;L7p:CaseInsensitive booleanValue="true"/&gt;
                &lt;L7p:OtherTargetMessageVariable stringValue="format"/&gt;
                &lt;L7p:Regex stringValue="^(JSON|XML|HTML)$"/&gt;
                &lt;L7p:Replacement stringValue=""/&gt;
                &lt;L7p:Target target="OTHER"/&gt;
            &lt;/L7p:Regex&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:CustomizeErrorResponse&gt;
                    &lt;L7p:Content stringValue="Bad request: unknown format (${format})"/&gt;
                    &lt;L7p:ExtraHeaders nameValuePairArray="included"/&gt;
                    &lt;L7p:HttpStatus stringValue="400"/&gt;
                &lt;/L7p:CustomizeErrorResponse&gt;
                &lt;L7p:FalseAssertion/&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Fail 400"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Validate ${format} else fail 400"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${format}"/&gt;
                        &lt;L7p:Expression2 stringValue="JSON"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="JSON"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${format}"/&gt;
                        &lt;L7p:Expression2 stringValue="XML"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item binary="included"&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:RightValue stringValue="XML"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Check for ${format} == JSON|XML"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:SslAssertion/&gt;
                        &lt;L7p:HttpBasic/&gt;
                        &lt;L7p:Authentication&gt;
                            &lt;L7p:IdentityProviderOid goidValue="0000000000000000fffffffffffffffe"/&gt;
                        &lt;/L7p:Authentication&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="dHJ1ZQ=="/&gt;
                            &lt;L7p:VariableToSet stringValue="loggedIn"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Authenticate using Basic Auth"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="ZmFsc2U="/&gt;
                        &lt;L7p:VariableToSet stringValue="loggedIn"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Authenticate using Basic Auth and set ${loggedIn}"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// ${format} == JSON|XML"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${format}"/&gt;
                    &lt;L7p:Expression2 stringValue="HTML"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:RightValue stringValue="HTML"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:Encapsulated&gt;
                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="4bd10104-a43c-4ecf-ae4d-b95e312cad4b"/&gt;
                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Form and Session Authentication"/&gt;
                    &lt;L7p:Parameters mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="sessionTTL"/&gt;
                            &lt;L7p:value stringValue="1800"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="verifyAdmin"/&gt;
                            &lt;L7p:value stringValue="true"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Parameters&gt;
                &lt;/L7p:Encapsulated&gt;
                &lt;L7p:Encapsulated&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// v1.0.2"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="43cbc673-f658-4e98-882d-111e752794b1"/&gt;
                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Set Web Page Wrappers"/&gt;
                    &lt;L7p:Parameters mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="utility.name"/&gt;
                            &lt;L7p:value stringValue="API Gateway Certificate Report"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="utility.version"/&gt;
                            &lt;L7p:value stringValue="1.0.2"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Parameters&gt;
                &lt;/L7p:Encapsulated&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// ${format} == HTML"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Authentication"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;wsp:All wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="VW5rbm93biBlcnJvciBmb3VuZA=="/&gt;
                    &lt;L7p:VariableToSet stringValue="error.message"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="NTAw"/&gt;
                    &lt;L7p:VariableToSet stringValue="error.status"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${format}"/&gt;
                            &lt;L7p:Expression2 stringValue="JSON"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="JSON"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:CustomizeErrorResponse&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// application/json"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:Content stringValueReference="inline"&gt;&lt;![CDATA[{
  "message": "${error.message}",
  "status": "${error.status}"
}]]&gt;&lt;/L7p:Content&gt;
                            &lt;L7p:ContentType stringValue="application/json; charset=UTF-8"/&gt;
                            &lt;L7p:ExtraHeaders nameValuePairArray="included"/&gt;
                            &lt;L7p:HttpStatus stringValue="${error.status}"/&gt;
                        &lt;/L7p:CustomizeErrorResponse&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${format} == JSON"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${format}"/&gt;
                            &lt;L7p:Expression2 stringValue="XML"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="XML"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:CustomizeErrorResponse&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// text/xml"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:Content stringValueReference="inline"&gt;&lt;![CDATA[&lt;Error&gt;
  &lt;Message&gt;${error.message}&lt;/Message&gt;
  &lt;Status&gt;${error.status}&lt;/Status&gt;
&lt;/Error&gt;]]&gt;&lt;/L7p:Content&gt;
                            &lt;L7p:ContentType stringValue="text/xml; charset=UTF-8"/&gt;
                            &lt;L7p:ExtraHeaders nameValuePairArray="included"/&gt;
                            &lt;L7p:HttpStatus stringValue="${error.status}"/&gt;
                        &lt;/L7p:CustomizeErrorResponse&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${format} == XML"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:CustomizeErrorResponse&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// text/html"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:Content stringValueReference="inline"&gt;&lt;![CDATA[${html.top}

  &lt;h1&gt;Error&lt;/h1&gt;

  &lt;p&gt;${error.message}&lt;/p&gt;

${html.bottom}]]&gt;&lt;/L7p:Content&gt;
                        &lt;L7p:ContentType stringValue="text/html; charset=UTF-8"/&gt;
                        &lt;L7p:ExtraHeaders nameValuePairArray="included"/&gt;
                        &lt;L7p:HttpStatus stringValue="${error.status}"/&gt;
                    &lt;/L7p:CustomizeErrorResponse&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Set error template per ${format}"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// Configure error response"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// 2 hours"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:Base64Expression stringValue="NzIwMA=="/&gt;
                &lt;L7p:VariableToSet stringValue="cacheAge"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// days"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:Base64Expression stringValue="Nw=="/&gt;
                &lt;L7p:VariableToSet stringValue="alertAge.WARNING"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// days"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:Base64Expression stringValue="MzA="/&gt;
                &lt;L7p:VariableToSet stringValue="alertAge.INFO"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Configuration"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:All&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="PGR1bW15IC8+"/&gt;
            &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
            &lt;L7p:DataType variableDataType="message"/&gt;
            &lt;L7p:VariableToSet stringValue="dummy"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="MA=="/&gt;
            &lt;L7p:VariableToSet stringValue="alert.level"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="T0s="/&gt;
            &lt;L7p:VariableToSet stringValue="alert.status"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:Base64Expression stringValue="QWxsIGNlcnRpZmljYXRlcyBhcmUgZmluZQ=="/&gt;
            &lt;L7p:VariableToSet stringValue="alert.message"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${loggedIn}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="boolean"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:RightValue stringValue="true"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue=""/&gt;
                    &lt;L7p:DataType variableDataType="dateTime"/&gt;
                    &lt;L7p:DateFormat stringValue="&amp;lt;Timestamp&gt;"/&gt;
                    &lt;L7p:DateOffsetExpression stringValue=""/&gt;
                    &lt;L7p:VariableToSet stringValue="now"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtub3cuc2Vjb25kc30="/&gt;
                    &lt;L7p:VariableToSet stringValue="calc.now"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:Encapsulated&gt;
                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="1feebe6b-c754-4bdc-834b-c6f3065d0216"/&gt;
                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: List Trusted Certificates"/&gt;
                    &lt;L7p:Parameters mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="cacheAge"/&gt;
                            &lt;L7p:value stringValue=""/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="refresh"/&gt;
                            &lt;L7p:value stringValue="true"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Parameters&gt;
                &lt;/L7p:Encapsulated&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:VariablePrefix stringValue="certificates"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="trustedCertificates.sorted"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/TrustedCertificates/TrustedCertificate"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:TrueAssertion/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Extract list of trusted certificates, never fail"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue=""/&gt;
                    &lt;L7p:VariableToSet stringValue="trustedCertsTable"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:ForEachLoop L7p:Usage="Required"
                    loopVariable="certificates.elements" variablePrefix="certificate"&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="JHtjZXJ0aWZpY2F0ZS5jdXJyZW50fQ=="/&gt;
                        &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                        &lt;L7p:DataType variableDataType="message"/&gt;
                        &lt;L7p:VariableToSet stringValue="certificate.xml"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:VariablePrefix stringValue="name"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="certificate.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/TrustedCertificate/Name"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:VariablePrefix stringValue="subject"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="certificate.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/TrustedCertificate/Subject"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:VariablePrefix stringValue="issuer"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="certificate.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/TrustedCertificate/Issuer"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:VariablePrefix stringValue="serialNumber"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="certificate.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/TrustedCertificate/SerialNumber"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:VariablePrefix stringValue="expires"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="certificate.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/TrustedCertificate/Expires"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="JHtleHBpcmVzLnJlc3VsdH0="/&gt;
                            &lt;L7p:DataType variableDataType="dateTime"/&gt;
                            &lt;L7p:DateOffsetExpression stringValue=""/&gt;
                            &lt;L7p:VariableToSet stringValue="expires"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="JHtleHBpcmVzLnNlY29uZHN9"/&gt;
                            &lt;L7p:VariableToSet stringValue="calc.expires"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Convert difference from seconds to float time in seconds"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:VariablePrefix stringValue="remaining"/&gt;
                            &lt;L7p:XmlMsgSrc stringValue="dummy"/&gt;
                            &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                &lt;L7p:Expression stringValue="$calc.expires - $calc.now"/&gt;
                                &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Namespaces&gt;
                                &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                            &lt;/L7p:XpathExpression&gt;
                        &lt;/L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cast to string"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:Base64Expression stringValue="JHtyZW1haW5pbmcucmVzdWx0fQ=="/&gt;
                            &lt;L7p:VariableToSet stringValue="remaining.time"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Convert difference from seconds to float days"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:VariablePrefix stringValue="remaining"/&gt;
                            &lt;L7p:XmlMsgSrc stringValue="dummy"/&gt;
                            &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                &lt;L7p:Expression stringValue="($calc.expires - $calc.now) div 60 div 60 div 24"/&gt;
                                &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Namespaces&gt;
                                &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                            &lt;/L7p:XpathExpression&gt;
                        &lt;/L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:CommentAssertion&gt;
                            &lt;L7p:Comment stringValue="** Isolate days"/&gt;
                        &lt;/L7p:CommentAssertion&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cast to string"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:Base64Expression stringValue="JHtyZW1haW5pbmcucmVzdWx0fQ=="/&gt;
                            &lt;L7p:VariableToSet stringValue="remaining.days"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:Regex&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Strip trailing decimals"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:AutoTarget booleanValue="false"/&gt;
                            &lt;L7p:OtherTargetMessageVariable stringValue="remaining.days"/&gt;
                            &lt;L7p:Regex stringValue="\..*"/&gt;
                            &lt;L7p:Replace booleanValue="true"/&gt;
                            &lt;L7p:Replacement stringValue=""/&gt;
                            &lt;L7p:Target target="OTHER"/&gt;
                        &lt;/L7p:Regex&gt;
                        &lt;L7p:Regex&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Strip away integer portion to leave decimal days remainder"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:AutoTarget booleanValue="false"/&gt;
                            &lt;L7p:OtherTargetMessageVariable stringValue="remaining.result"/&gt;
                            &lt;L7p:Regex stringValue="^-?[0-9]*\."/&gt;
                            &lt;L7p:Replace booleanValue="true"/&gt;
                            &lt;L7p:Replacement stringValue="0."/&gt;
                            &lt;L7p:Target target="OTHER"/&gt;
                        &lt;/L7p:Regex&gt;
                        &lt;L7p:CommentAssertion&gt;
                            &lt;L7p:Comment stringValue="** Isolate hours"/&gt;
                        &lt;/L7p:CommentAssertion&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cast to string"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:Base64Expression stringValue="JHtyZW1haW5pbmcucmVzdWx0fQ=="/&gt;
                            &lt;L7p:VariableToSet stringValue="remaining.hours"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:VariablePrefix stringValue="remaining"/&gt;
                            &lt;L7p:XmlMsgSrc stringValue="dummy"/&gt;
                            &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                &lt;L7p:Expression stringValue="$remaining.hours * 24"/&gt;
                                &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Namespaces&gt;
                                &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                            &lt;/L7p:XpathExpression&gt;
                        &lt;/L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cast to string"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:Base64Expression stringValue="JHtyZW1haW5pbmcucmVzdWx0fQ=="/&gt;
                            &lt;L7p:VariableToSet stringValue="remaining.hours"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:Regex&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Strip trailing decimals"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:AutoTarget booleanValue="false"/&gt;
                            &lt;L7p:OtherTargetMessageVariable stringValue="remaining.hours"/&gt;
                            &lt;L7p:Regex stringValue="\..*"/&gt;
                            &lt;L7p:Replace booleanValue="true"/&gt;
                            &lt;L7p:Replacement stringValue=""/&gt;
                            &lt;L7p:Target target="OTHER"/&gt;
                        &lt;/L7p:Regex&gt;
                        &lt;L7p:Regex&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Strip away integer portion to leave decimal hours remainder"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:AutoTarget booleanValue="false"/&gt;
                            &lt;L7p:OtherTargetMessageVariable stringValue="remaining.result"/&gt;
                            &lt;L7p:Regex stringValue="^[0-9]*\."/&gt;
                            &lt;L7p:Replace booleanValue="true"/&gt;
                            &lt;L7p:Replacement stringValue="0."/&gt;
                            &lt;L7p:Target target="OTHER"/&gt;
                        &lt;/L7p:Regex&gt;
                        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                            &lt;L7p:ComparisonAssertion&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:Expression1 stringValue="${remaining.hours}"/&gt;
                                &lt;L7p:Operator operatorNull="null"/&gt;
                                &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="int"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="GE"/&gt;
                                    &lt;L7p:RightValue stringValue="10"/&gt;
                                    &lt;/L7p:item&gt;
                                &lt;/L7p:Predicates&gt;
                            &lt;/L7p:ComparisonAssertion&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cast to string"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:Base64Expression stringValue="MCR7cmVtYWluaW5nLmhvdXJzfQ=="/&gt;
                                &lt;L7p:VariableToSet stringValue="remaining.hours"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Prefix ${remaining.hours} with 0 if &amp;lt; 10"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:OneOrMore&gt;
                        &lt;L7p:CommentAssertion&gt;
                            &lt;L7p:Comment stringValue="** Isolate minutes"/&gt;
                        &lt;/L7p:CommentAssertion&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cast to string"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:Base64Expression stringValue="JHtyZW1haW5pbmcucmVzdWx0fQ=="/&gt;
                            &lt;L7p:VariableToSet stringValue="remaining.minutes"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:VariablePrefix stringValue="remaining"/&gt;
                            &lt;L7p:XmlMsgSrc stringValue="dummy"/&gt;
                            &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                &lt;L7p:Expression stringValue="$remaining.minutes * 60"/&gt;
                                &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Namespaces&gt;
                                &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                            &lt;/L7p:XpathExpression&gt;
                        &lt;/L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cast to string"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:Base64Expression stringValue="JHtyZW1haW5pbmcucmVzdWx0fQ=="/&gt;
                            &lt;L7p:VariableToSet stringValue="remaining.minutes"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:Regex&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Strip trailing decimals"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:AutoTarget booleanValue="false"/&gt;
                            &lt;L7p:OtherTargetMessageVariable stringValue="remaining.minutes"/&gt;
                            &lt;L7p:Regex stringValue="\..*"/&gt;
                            &lt;L7p:Replace booleanValue="true"/&gt;
                            &lt;L7p:Replacement stringValue=""/&gt;
                            &lt;L7p:Target target="OTHER"/&gt;
                        &lt;/L7p:Regex&gt;
                        &lt;L7p:Regex&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Strip away integer portion to leave decimal minutes remainder"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:AutoTarget booleanValue="false"/&gt;
                            &lt;L7p:OtherTargetMessageVariable stringValue="remaining.result"/&gt;
                            &lt;L7p:Regex stringValue="^[0-9]*\."/&gt;
                            &lt;L7p:Replace booleanValue="true"/&gt;
                            &lt;L7p:Replacement stringValue="0."/&gt;
                            &lt;L7p:Target target="OTHER"/&gt;
                        &lt;/L7p:Regex&gt;
                        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                            &lt;L7p:ComparisonAssertion&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:Expression1 stringValue="${remaining.minutes}"/&gt;
                                &lt;L7p:Operator operatorNull="null"/&gt;
                                &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="int"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="GE"/&gt;
                                    &lt;L7p:RightValue stringValue="10"/&gt;
                                    &lt;/L7p:item&gt;
                                &lt;/L7p:Predicates&gt;
                            &lt;/L7p:ComparisonAssertion&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cast to string"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:Base64Expression stringValue="MCR7cmVtYWluaW5nLm1pbnV0ZXN9"/&gt;
                                &lt;L7p:VariableToSet stringValue="remaining.minutes"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Prefix ${remaining.minutes} with 0 if &amp;lt; 10"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:OneOrMore&gt;
                        &lt;L7p:CommentAssertion&gt;
                            &lt;L7p:Comment stringValue="** Isolate seconds"/&gt;
                        &lt;/L7p:CommentAssertion&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cast to string"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:Base64Expression stringValue="JHtyZW1haW5pbmcucmVzdWx0fQ=="/&gt;
                            &lt;L7p:VariableToSet stringValue="remaining.seconds"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:VariablePrefix stringValue="remaining"/&gt;
                            &lt;L7p:XmlMsgSrc stringValue="dummy"/&gt;
                            &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                &lt;L7p:Expression stringValue="$remaining.seconds * 60"/&gt;
                                &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Namespaces&gt;
                                &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                            &lt;/L7p:XpathExpression&gt;
                        &lt;/L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cast to string"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:Base64Expression stringValue="JHtyZW1haW5pbmcucmVzdWx0fQ=="/&gt;
                            &lt;L7p:VariableToSet stringValue="remaining.seconds"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:Regex&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Strip trailing decimals"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:AutoTarget booleanValue="false"/&gt;
                            &lt;L7p:OtherTargetMessageVariable stringValue="remaining.seconds"/&gt;
                            &lt;L7p:Regex stringValue="\..*"/&gt;
                            &lt;L7p:Replace booleanValue="true"/&gt;
                            &lt;L7p:Replacement stringValue=""/&gt;
                            &lt;L7p:Target target="OTHER"/&gt;
                        &lt;/L7p:Regex&gt;
                        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                            &lt;L7p:ComparisonAssertion&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:Expression1 stringValue="${remaining.seconds}"/&gt;
                                &lt;L7p:Operator operatorNull="null"/&gt;
                                &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="int"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="GE"/&gt;
                                    &lt;L7p:RightValue stringValue="10"/&gt;
                                    &lt;/L7p:item&gt;
                                &lt;/L7p:Predicates&gt;
                            &lt;/L7p:ComparisonAssertion&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cast to string"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:Base64Expression stringValue="MCR7cmVtYWluaW5nLnNlY29uZHN9"/&gt;
                                &lt;L7p:VariableToSet stringValue="remaining.seconds"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Prefix ${remaining.seconds} with 0 if &amp;lt; 10"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:OneOrMore&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Calculate days, hours, minutes and seconds until expiry"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                        &lt;wsp:All wsp:Usage="Required"&gt;
                            &lt;L7p:ComparisonAssertion&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:Expression1 stringValue="${remaining.time}"/&gt;
                                &lt;L7p:Operator operatorNull="null"/&gt;
                                &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="decimal"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="LT"/&gt;
                                    &lt;L7p:RightValue stringValue="0"/&gt;
                                    &lt;/L7p:item&gt;
                                &lt;/L7p:Predicates&gt;
                            &lt;/L7p:ComparisonAssertion&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="U0VWRVJF"/&gt;
                                &lt;L7p:VariableToSet stringValue="license.status"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="Mw=="/&gt;
                                &lt;L7p:VariableToSet stringValue="alert.level"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="U0VWRVJF"/&gt;
                                &lt;L7p:VariableToSet stringValue="alert.status"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="QXQgbGVhc3Qgb25lIGxpY2Vuc2UgaGFzIGV4cGlyZWQ="/&gt;
                                &lt;L7p:VariableToSet stringValue="alert.message"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Check for SEVERE status"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:All&gt;
                        &lt;wsp:All wsp:Usage="Required"&gt;
                            &lt;L7p:ComparisonAssertion&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:Expression1 stringValue="${remaining.days}"/&gt;
                                &lt;L7p:Operator operatorNull="null"/&gt;
                                &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="int"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:Operator operator="GE"/&gt;
                                    &lt;L7p:RightValue stringValue="${alertAge.INFO}"/&gt;
                                    &lt;/L7p:item&gt;
                                &lt;/L7p:Predicates&gt;
                            &lt;/L7p:ComparisonAssertion&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="T0s="/&gt;
                                &lt;L7p:VariableToSet stringValue="certificate.status"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Check for OK status"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:All&gt;
                        &lt;wsp:All wsp:Usage="Required"&gt;
                            &lt;L7p:ComparisonAssertion&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:Expression1 stringValue="${remaining.days}"/&gt;
                                &lt;L7p:Operator operatorNull="null"/&gt;
                                &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="int"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:Operator operator="GE"/&gt;
                                    &lt;L7p:RightValue stringValue="${alertAge.WARNING}"/&gt;
                                    &lt;/L7p:item&gt;
                                &lt;/L7p:Predicates&gt;
                            &lt;/L7p:ComparisonAssertion&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="SU5GTw=="/&gt;
                                &lt;L7p:VariableToSet stringValue="certificate.status"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${alert.level}"/&gt;
                                    &lt;L7p:Operator operatorNull="null"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="int"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="GE"/&gt;
                                    &lt;L7p:RightValue stringValue="1"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt;
                                &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="MQ=="/&gt;
                                    &lt;L7p:VariableToSet stringValue="alert.level"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="SU5GTw=="/&gt;
                                    &lt;L7p:VariableToSet stringValue="alert.status"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="QXQgbGVhc3Qgb25lIGNlcnRpZmljYXRlIHdpbGwgZXhwaXJlIHdpdGhpbmcgJHthbGVydEFnZS5JTkZPfSBkYXlz"/&gt;
                                    &lt;L7p:VariableToSet stringValue="alert.message"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Set ${alert.level}, ${alert.status}, and ${alert.message}"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                &lt;/wsp:All&gt;
                                &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Set ${alert.*} if not already at a higher state"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt;
                            &lt;/wsp:OneOrMore&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Check for INFO status"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:All&gt;
                        &lt;wsp:All wsp:Usage="Required"&gt;
                            &lt;L7p:ComparisonAssertion&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:Expression1 stringValue="${remaining.days}"/&gt;
                                &lt;L7p:Operator operatorNull="null"/&gt;
                                &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="int"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:Operator operator="GE"/&gt;
                                    &lt;L7p:RightValue stringValue="0"/&gt;
                                    &lt;/L7p:item&gt;
                                &lt;/L7p:Predicates&gt;
                            &lt;/L7p:ComparisonAssertion&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="V0FSTklORw=="/&gt;
                                &lt;L7p:VariableToSet stringValue="certificate.status"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${alert.level}"/&gt;
                                    &lt;L7p:Operator operatorNull="null"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="int"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="GE"/&gt;
                                    &lt;L7p:RightValue stringValue="2"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt;
                                &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="Mg=="/&gt;
                                    &lt;L7p:VariableToSet stringValue="alert.level"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="V0FSTklORw=="/&gt;
                                    &lt;L7p:VariableToSet stringValue="alert.status"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="QXQgbGVhc3Qgb25lIGNlcnRpZmljYXRlIHdpbGwgZXhwaXJlIHdpdGhpbmcgJHthbGVydEFnZS5XQVJOSU5HfSBkYXlz"/&gt;
                                    &lt;L7p:VariableToSet stringValue="alert.message"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Set ${alert.level}, ${alert.status}, and ${alert.message}"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                &lt;/wsp:All&gt;
                                &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Set ${alert.*} if not already at a higher state"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt;
                            &lt;/wsp:OneOrMore&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Check for WARNING status"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:All&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Set ${alert.*} based on expiration status"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                        &lt;wsp:All wsp:Usage="Required"&gt;
                            &lt;L7p:ComparisonAssertion&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:Expression1 stringValue="${format}"/&gt;
                                &lt;L7p:Expression2 stringValue="JSON"/&gt;
                                &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="JSON"/&gt;
                                    &lt;/L7p:item&gt;
                                &lt;/L7p:Predicates&gt;
                            &lt;/L7p:ComparisonAssertion&gt;
                            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${certificate.iterations}"/&gt;
                                    &lt;L7p:Expression2 stringValue="0"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="0"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt;
                                &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="JHt0cnVzdGVkQ2VydHNUYWJsZX0s"/&gt;
                                    &lt;L7p:VariableToSet stringValue="trustedCertsTable"/&gt;
                                &lt;/L7p:SetVariable&gt;
                                &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Append comma if not first iteration"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt;
                            &lt;/wsp:OneOrMore&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="JHt0cnVzdGVkQ2VydHNUYWJsZX0NCiAgICB7DQogICAgICAibmFtZSI6ICIke25hbWUucmVzdWx0fSIsDQogICAgICAic3ViamVjdCI6ICIke3N1YmplY3QucmVzdWx0fSIsDQogICAgICAiaXNzdWVyIjogIiR7aXNzdWVyLnJlc3VsdH0iLA0KICAgICAgInNlcmlhbE51bWJlciI6ICIke3NlcmlhbE51bWJlci5yZXN1bHR9IiwNCiAgICAgICJleHBpcmVzIjogIiR7ZXhwaXJlcy5yZXN1bHR9IiwNCiAgICAgICJyZW1haW5pbmciOiAiJHtyZW1haW5pbmcuZGF5c306JHtyZW1haW5pbmcuaG91cnN9OiR7cmVtYWluaW5nLm1pbnV0ZXN9OiR7cmVtYWluaW5nLnNlY29uZHN9IiwNCiAgICAgICJzdGF0dXMiOiAiJHtjZXJ0aWZpY2F0ZS5zdGF0dXN9Ig0KICAgIH0="/&gt;
                                &lt;L7p:VariableToSet stringValue="trustedCertsTable"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${format} == JSON"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:All&gt;
                        &lt;wsp:All wsp:Usage="Required"&gt;
                            &lt;L7p:ComparisonAssertion&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:Expression1 stringValue="${format}"/&gt;
                                &lt;L7p:Expression2 stringValue="XML"/&gt;
                                &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="XML"/&gt;
                                    &lt;/L7p:item&gt;
                                &lt;/L7p:Predicates&gt;
                            &lt;/L7p:ComparisonAssertion&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="JHt0cnVzdGVkQ2VydHNUYWJsZX0NCiAgICA8Q2VydGlmaWNhdGU+DQogICAgICA8TmFtZT4ke25hbWUucmVzdWx0fTwvTmFtZT4NCiAgICAgIDxTdWJqZWN0PiR7c3ViamVjdC5yZXN1bHR9PC9TdWJqZWN0Pg0KICAgICAgPElzc3Vlcj4ke2lzc3Vlci5yZXN1bHR9PC9Jc3N1ZXI+DQogICAgICA8U2VyaWFsTnVtYmVyPiR7c2VyaWFsTnVtYmVyLnJlc3VsdH08L1NlcmlhbE51bWJlcj4NCiAgICAgIDxFeHBpcmVzPiR7ZXhwaXJlcy5yZXN1bHR9PC9FeHBpcmVzPg0KICAgICAgPFJlbWFpbmluZz4ke3JlbWFpbmluZy5kYXlzfToke3JlbWFpbmluZy5ob3Vyc306JHtyZW1haW5pbmcubWludXRlc306JHtyZW1haW5pbmcuc2Vjb25kc308L1JlbWFpbmluZz4NCiAgICAgIDxTdGF0dXM+JHtjZXJ0aWZpY2F0ZS5zdGF0dXN9PC9TdGF0dXM+DQogICAgPC9DZXJ0aWZpY2F0ZT4="/&gt;
                                &lt;L7p:VariableToSet stringValue="trustedCertsTable"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${format} == XML"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:All&gt;
                        &lt;wsp:All wsp:Usage="Required"&gt;
                            &lt;L7p:ComparisonAssertion&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:Expression1 stringValue="${format}"/&gt;
                                &lt;L7p:Expression2 stringValue="HTML"/&gt;
                                &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="HTML"/&gt;
                                    &lt;/L7p:item&gt;
                                &lt;/L7p:Predicates&gt;
                            &lt;/L7p:ComparisonAssertion&gt;
                            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${remaining.days}"/&gt;
                                    &lt;L7p:Operator operatorNull="null"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="int"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="GE"/&gt;
                                    &lt;L7p:RightValue stringValue="${alertAge.INFO}"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                    &lt;/L7p:ComparisonAssertion&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="bGlnaHRncmVlbg=="/&gt;
                                    &lt;L7p:VariableToSet stringValue="bgcolor"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// No alert to set"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                &lt;/wsp:All&gt;
                                &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${remaining.days}"/&gt;
                                    &lt;L7p:Operator operatorNull="null"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="int"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="GE"/&gt;
                                    &lt;L7p:RightValue stringValue="${alertAge.WARNING}"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                    &lt;/L7p:ComparisonAssertion&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="eWVsbG93"/&gt;
                                    &lt;L7p:VariableToSet stringValue="bgcolor"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Set for INFO"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                &lt;/wsp:All&gt;
                                &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${remaining.time}"/&gt;
                                    &lt;L7p:Operator operatorNull="null"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="decimal"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="LT"/&gt;
                                    &lt;L7p:RightValue stringValue="0"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                    &lt;/L7p:ComparisonAssertion&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="cmVk"/&gt;
                                    &lt;L7p:VariableToSet stringValue="bgcolor"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Check for SEVERE if ${remaining.time} &amp;lt; 0"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                &lt;/wsp:All&gt;
                                &lt;L7p:SetVariable&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Must be WARNING level"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Base64Expression stringValue="b3Jhbmdl"/&gt;
                                    &lt;L7p:VariableToSet stringValue="bgcolor"/&gt;
                                &lt;/L7p:SetVariable&gt;
                                &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Set the background colour for the Time Remaining cell"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt;
                            &lt;/wsp:OneOrMore&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="JHt0cnVzdGVkQ2VydHNUYWJsZX0gIDx0cj4NCiAgICA8dGQ+JHtuYW1lLnJlc3VsdH08L3RkPg0KICAgIDx0ZD4ke3N1YmplY3QucmVzdWx0fTwvdGQ+DQogICAgPHRkPiR7aXNzdWVyLnJlc3VsdH08L3RkPg0KICAgIDx0ZD4ke3NlcmlhbE51bWJlci5yZXN1bHR9PC90ZD4NCiAgICA8dGQ+JHtleHBpcmVzLnJlc3VsdH08L3RkPg0KICAgIDx0ZCBiZ2NvbG9yPSIke2JnY29sb3J9Ij4ke3JlbWFpbmluZy5kYXlzfToke3JlbWFpbmluZy5ob3Vyc306JHtyZW1haW5pbmcubWludXRlc306JHtyZW1haW5pbmcuc2Vjb25kc308L3RkPg0KICA8L3RyPg=="/&gt;
                                &lt;L7p:VariableToSet stringValue="trustedCertsTable"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${format} == HTML"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:All&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Set response per ${format}"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:OneOrMore&gt;
                &lt;/L7p:ForEachLoop&gt;
                &lt;L7p:Encapsulated&gt;
                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="fbdcb4ad-bf2d-44f7-8aef-c8e1553c13ba"/&gt;
                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: List Private Keys"/&gt;
                    &lt;L7p:Parameters mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="cacheAge"/&gt;
                            &lt;L7p:value stringValue=""/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="refresh"/&gt;
                            &lt;L7p:value stringValue="true"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Parameters&gt;
                &lt;/L7p:Encapsulated&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:VariablePrefix stringValue="privateKeys"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="privateKeys.sorted"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/PrivateKeys/PrivateKey"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:TrueAssertion/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Extract list of private keys, never fail"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue=""/&gt;
                    &lt;L7p:VariableToSet stringValue="privateKeysTable"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:ForEachLoop L7p:Usage="Required"
                    loopVariable="privateKeys.elements" variablePrefix="privateKey"&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="JHtwcml2YXRlS2V5LmN1cnJlbnR9"/&gt;
                        &lt;L7p:ContentType stringValue="text/xml; charset=utf-8"/&gt;
                        &lt;L7p:DataType variableDataType="message"/&gt;
                        &lt;L7p:VariableToSet stringValue="privateKey.xml"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:VariablePrefix stringValue="alias"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="privateKey.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/PrivateKey/Alias"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:VariablePrefix stringValue="keyStore"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="privateKey.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/PrivateKey/Keystore"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:VariablePrefix stringValue="subject"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="privateKey.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/PrivateKey/Certificates/Certificate/Subject"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:VariablePrefix stringValue="issuer"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="privateKey.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/PrivateKey/Certificates/Certificate/Issuer"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:VariablePrefix stringValue="serialNumber"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="privateKey.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/PrivateKey/Certificates/Certificate/SerialNumber"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:VariablePrefix stringValue="expires"/&gt;
                        &lt;L7p:XmlMsgSrc stringValue="privateKey.xml"/&gt;
                        &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                            &lt;L7p:Expression stringValue="/PrivateKey/Certificates/Certificate/Expires"/&gt;
                            &lt;L7p:Namespaces mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Namespaces&gt;
                            &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                        &lt;/L7p:XpathExpression&gt;
                    &lt;/L7p:ResponseXpathAssertion&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="JHtleHBpcmVzLnJlc3VsdH0="/&gt;
                            &lt;L7p:DataType variableDataType="dateTime"/&gt;
                            &lt;L7p:DateOffsetExpression stringValue=""/&gt;
                            &lt;L7p:VariableToSet stringValue="expires"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="JHtleHBpcmVzLnNlY29uZHN9"/&gt;
                            &lt;L7p:VariableToSet stringValue="calc.expires"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Convert difference from seconds to float days"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:VariablePrefix stringValue="remaining"/&gt;
                            &lt;L7p:XmlMsgSrc stringValue="dummy"/&gt;
                            &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                &lt;L7p:Expression stringValue="($calc.expires - $calc.now) div 60 div 60 div 24"/&gt;
                                &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Namespaces&gt;
                                &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                            &lt;/L7p:XpathExpression&gt;
                        &lt;/L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:CommentAssertion&gt;
                            &lt;L7p:Comment stringValue="** Isolate days"/&gt;
                        &lt;/L7p:CommentAssertion&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cast to string"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:Base64Expression stringValue="JHtyZW1haW5pbmcucmVzdWx0fQ=="/&gt;
                            &lt;L7p:VariableToSet stringValue="remaining.days"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:Regex&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Strip trailing decimals"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:AutoTarget booleanValue="false"/&gt;
                            &lt;L7p:OtherTargetMessageVariable stringValue="remaining.days"/&gt;
                            &lt;L7p:Regex stringValue="\..*"/&gt;
                            &lt;L7p:Replace booleanValue="true"/&gt;
                            &lt;L7p:Replacement stringValue=""/&gt;
                            &lt;L7p:Target target="OTHER"/&gt;
                        &lt;/L7p:Regex&gt;
                        &lt;L7p:Regex&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Strip away integer portion to leave decimal days remainder"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:AutoTarget booleanValue="false"/&gt;
                            &lt;L7p:OtherTargetMessageVariable stringValue="remaining.result"/&gt;
                            &lt;L7p:Regex stringValue="^-?[0-9]*\."/&gt;
                            &lt;L7p:Replace booleanValue="true"/&gt;
                            &lt;L7p:Replacement stringValue="0."/&gt;
                            &lt;L7p:Target target="OTHER"/&gt;
                        &lt;/L7p:Regex&gt;
                        &lt;L7p:CommentAssertion&gt;
                            &lt;L7p:Comment stringValue="** Isolate hours"/&gt;
                        &lt;/L7p:CommentAssertion&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cast to string"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:Base64Expression stringValue="JHtyZW1haW5pbmcucmVzdWx0fQ=="/&gt;
                            &lt;L7p:VariableToSet stringValue="remaining.hours"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:VariablePrefix stringValue="remaining"/&gt;
                            &lt;L7p:XmlMsgSrc stringValue="dummy"/&gt;
                            &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                &lt;L7p:Expression stringValue="$remaining.hours * 24"/&gt;
                                &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Namespaces&gt;
                                &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                            &lt;/L7p:XpathExpression&gt;
                        &lt;/L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cast to string"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:Base64Expression stringValue="JHtyZW1haW5pbmcucmVzdWx0fQ=="/&gt;
                            &lt;L7p:VariableToSet stringValue="remaining.hours"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:Regex&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Strip trailing decimals"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:AutoTarget booleanValue="false"/&gt;
                            &lt;L7p:OtherTargetMessageVariable stringValue="remaining.hours"/&gt;
                            &lt;L7p:Regex stringValue="\..*"/&gt;
                            &lt;L7p:Replace booleanValue="true"/&gt;
                            &lt;L7p:Replacement stringValue=""/&gt;
                            &lt;L7p:Target target="OTHER"/&gt;
                        &lt;/L7p:Regex&gt;
                        &lt;L7p:Regex&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Strip away integer portion to leave decimal hours remainder"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:AutoTarget booleanValue="false"/&gt;
                            &lt;L7p:OtherTargetMessageVariable stringValue="remaining.result"/&gt;
                            &lt;L7p:Regex stringValue="^[0-9]*\."/&gt;
                            &lt;L7p:Replace booleanValue="true"/&gt;
                            &lt;L7p:Replacement stringValue="0."/&gt;
                            &lt;L7p:Target target="OTHER"/&gt;
                        &lt;/L7p:Regex&gt;
                        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                            &lt;L7p:ComparisonAssertion&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:Expression1 stringValue="${remaining.hours}"/&gt;
                                &lt;L7p:Operator operatorNull="null"/&gt;
                                &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="int"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="GE"/&gt;
                                    &lt;L7p:RightValue stringValue="10"/&gt;
                                    &lt;/L7p:item&gt;
                                &lt;/L7p:Predicates&gt;
                            &lt;/L7p:ComparisonAssertion&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cast to string"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:Base64Expression stringValue="MCR7cmVtYWluaW5nLmhvdXJzfQ=="/&gt;
                                &lt;L7p:VariableToSet stringValue="remaining.hours"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Prefix ${remaining.hours} with 0 if &amp;lt; 10"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:OneOrMore&gt;
                        &lt;L7p:CommentAssertion&gt;
                            &lt;L7p:Comment stringValue="** Isolate minutes"/&gt;
                        &lt;/L7p:CommentAssertion&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cast to string"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:Base64Expression stringValue="JHtyZW1haW5pbmcucmVzdWx0fQ=="/&gt;
                            &lt;L7p:VariableToSet stringValue="remaining.minutes"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:VariablePrefix stringValue="remaining"/&gt;
                            &lt;L7p:XmlMsgSrc stringValue="dummy"/&gt;
                            &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                &lt;L7p:Expression stringValue="$remaining.minutes * 60"/&gt;
                                &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Namespaces&gt;
                                &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                            &lt;/L7p:XpathExpression&gt;
                        &lt;/L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cast to string"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:Base64Expression stringValue="JHtyZW1haW5pbmcucmVzdWx0fQ=="/&gt;
                            &lt;L7p:VariableToSet stringValue="remaining.minutes"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:Regex&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Strip trailing decimals"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:AutoTarget booleanValue="false"/&gt;
                            &lt;L7p:OtherTargetMessageVariable stringValue="remaining.minutes"/&gt;
                            &lt;L7p:Regex stringValue="\..*"/&gt;
                            &lt;L7p:Replace booleanValue="true"/&gt;
                            &lt;L7p:Replacement stringValue=""/&gt;
                            &lt;L7p:Target target="OTHER"/&gt;
                        &lt;/L7p:Regex&gt;
                        &lt;L7p:Regex&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Strip away integer portion to leave decimal minutes remainder"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:AutoTarget booleanValue="false"/&gt;
                            &lt;L7p:OtherTargetMessageVariable stringValue="remaining.result"/&gt;
                            &lt;L7p:Regex stringValue="^[0-9]*\."/&gt;
                            &lt;L7p:Replace booleanValue="true"/&gt;
                            &lt;L7p:Replacement stringValue="0."/&gt;
                            &lt;L7p:Target target="OTHER"/&gt;
                        &lt;/L7p:Regex&gt;
                        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                            &lt;L7p:ComparisonAssertion&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:Expression1 stringValue="${remaining.minutes}"/&gt;
                                &lt;L7p:Operator operatorNull="null"/&gt;
                                &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="int"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="GE"/&gt;
                                    &lt;L7p:RightValue stringValue="10"/&gt;
                                    &lt;/L7p:item&gt;
                                &lt;/L7p:Predicates&gt;
                            &lt;/L7p:ComparisonAssertion&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cast to string"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:Base64Expression stringValue="MCR7cmVtYWluaW5nLm1pbnV0ZXN9"/&gt;
                                &lt;L7p:VariableToSet stringValue="remaining.minutes"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Prefix ${remaining.minutes} with 0 if &amp;lt; 10"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:OneOrMore&gt;
                        &lt;L7p:CommentAssertion&gt;
                            &lt;L7p:Comment stringValue="** Isolate seconds"/&gt;
                        &lt;/L7p:CommentAssertion&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cast to string"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:Base64Expression stringValue="JHtyZW1haW5pbmcucmVzdWx0fQ=="/&gt;
                            &lt;L7p:VariableToSet stringValue="remaining.seconds"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:ResponseXpathAssertion&gt;
                            &lt;L7p:VariablePrefix stringValue="remaining"/&gt;
                            &lt;L7p:XmlMsgSrc stringValue="dummy"/&gt;
                            &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                &lt;L7p:Expression stringValue="$remaining.seconds * 60"/&gt;
                                &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Namespaces&gt;
                                &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                            &lt;/L7p:XpathExpression&gt;
                        &lt;/L7p:ResponseXpathAssertion&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cast to string"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:Base64Expression stringValue="JHtyZW1haW5pbmcucmVzdWx0fQ=="/&gt;
                            &lt;L7p:VariableToSet stringValue="remaining.seconds"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:Regex&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Strip trailing decimals"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:AutoTarget booleanValue="false"/&gt;
                            &lt;L7p:OtherTargetMessageVariable stringValue="remaining.seconds"/&gt;
                            &lt;L7p:Regex stringValue="\..*"/&gt;
                            &lt;L7p:Replace booleanValue="true"/&gt;
                            &lt;L7p:Replacement stringValue=""/&gt;
                            &lt;L7p:Target target="OTHER"/&gt;
                        &lt;/L7p:Regex&gt;
                        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                            &lt;L7p:ComparisonAssertion&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:Expression1 stringValue="${remaining.seconds}"/&gt;
                                &lt;L7p:Operator operatorNull="null"/&gt;
                                &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="int"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="GE"/&gt;
                                    &lt;L7p:RightValue stringValue="10"/&gt;
                                    &lt;/L7p:item&gt;
                                &lt;/L7p:Predicates&gt;
                            &lt;/L7p:ComparisonAssertion&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Cast to string"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:Base64Expression stringValue="MCR7cmVtYWluaW5nLnNlY29uZHN9"/&gt;
                                &lt;L7p:VariableToSet stringValue="remaining.seconds"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Prefix ${remaining.seconds} with 0 if &amp;lt; 10"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:OneOrMore&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Calculate days, hours, minutes and seconds until expiry"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                        &lt;wsp:All wsp:Usage="Required"&gt;
                            &lt;L7p:ComparisonAssertion&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:Expression1 stringValue="${remaining.days}"/&gt;
                                &lt;L7p:Operator operatorNull="null"/&gt;
                                &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="int"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:Operator operator="GE"/&gt;
                                    &lt;L7p:RightValue stringValue="${alertAge.INFO}"/&gt;
                                    &lt;/L7p:item&gt;
                                &lt;/L7p:Predicates&gt;
                            &lt;/L7p:ComparisonAssertion&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="T0s="/&gt;
                                &lt;L7p:VariableToSet stringValue="certificate.status"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Check for OK status"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:All&gt;
                        &lt;wsp:All wsp:Usage="Required"&gt;
                            &lt;L7p:ComparisonAssertion&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:Expression1 stringValue="${remaining.days}"/&gt;
                                &lt;L7p:Operator operatorNull="null"/&gt;
                                &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="int"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:Operator operator="GE"/&gt;
                                    &lt;L7p:RightValue stringValue="${alertAge.WARNING}"/&gt;
                                    &lt;/L7p:item&gt;
                                &lt;/L7p:Predicates&gt;
                            &lt;/L7p:ComparisonAssertion&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="SU5GTw=="/&gt;
                                &lt;L7p:VariableToSet stringValue="certificate.status"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${alert.level}"/&gt;
                                    &lt;L7p:Operator operatorNull="null"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="int"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="GE"/&gt;
                                    &lt;L7p:RightValue stringValue="1"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt;
                                &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="MQ=="/&gt;
                                    &lt;L7p:VariableToSet stringValue="alert.level"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="SU5GTw=="/&gt;
                                    &lt;L7p:VariableToSet stringValue="alert.status"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="QXQgbGVhc3Qgb25lIGNlcnRpZmljYXRlIHdpbGwgZXhwaXJlIHdpdGhpbmcgJHthbGVydEFnZS5JTkZPfSBkYXlz"/&gt;
                                    &lt;L7p:VariableToSet stringValue="alert.message"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Set ${alert.level}, ${alert.status}, and ${alert.message}"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                &lt;/wsp:All&gt;
                                &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Set ${alert.*} if not already at a higher state"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt;
                            &lt;/wsp:OneOrMore&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Check for INFO status"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:All&gt;
                        &lt;wsp:All wsp:Usage="Required"&gt;
                            &lt;L7p:ComparisonAssertion&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:Expression1 stringValue="${remaining.days}"/&gt;
                                &lt;L7p:Operator operatorNull="null"/&gt;
                                &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="int"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:Operator operator="GE"/&gt;
                                    &lt;L7p:RightValue stringValue="0"/&gt;
                                    &lt;/L7p:item&gt;
                                &lt;/L7p:Predicates&gt;
                            &lt;/L7p:ComparisonAssertion&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="V0FSTklORw=="/&gt;
                                &lt;L7p:VariableToSet stringValue="certificate.status"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${alert.level}"/&gt;
                                    &lt;L7p:Operator operatorNull="null"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="int"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="GE"/&gt;
                                    &lt;L7p:RightValue stringValue="2"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt;
                                &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="Mg=="/&gt;
                                    &lt;L7p:VariableToSet stringValue="alert.level"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="V0FSTklORw=="/&gt;
                                    &lt;L7p:VariableToSet stringValue="alert.status"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="QXQgbGVhc3Qgb25lIGNlcnRpZmljYXRlIHdpbGwgZXhwaXJlIHdpdGhpbmcgJHthbGVydEFnZS5XQVJOSU5HfSBkYXlz"/&gt;
                                    &lt;L7p:VariableToSet stringValue="alert.message"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Set ${alert.level}, ${alert.status}, and ${alert.message}"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                &lt;/wsp:All&gt;
                                &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Set ${alert.*} if not already at a higher state"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt;
                            &lt;/wsp:OneOrMore&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Check for WARNING status"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:All&gt;
                        &lt;wsp:All wsp:Usage="Required"&gt;
                            &lt;L7p:ComparisonAssertion&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:Expression1 stringValue="${remaining.days}"/&gt;
                                &lt;L7p:Operator operatorNull="null"/&gt;
                                &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="int"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="LT"/&gt;
                                    &lt;L7p:RightValue stringValue="0"/&gt;
                                    &lt;/L7p:item&gt;
                                &lt;/L7p:Predicates&gt;
                            &lt;/L7p:ComparisonAssertion&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="U0VWRVJF"/&gt;
                                &lt;L7p:VariableToSet stringValue="certificate.status"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${alert.level}"/&gt;
                                    &lt;L7p:Operator operatorNull="null"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="int"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="GE"/&gt;
                                    &lt;L7p:RightValue stringValue="3"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt;
                                &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="Mw=="/&gt;
                                    &lt;L7p:VariableToSet stringValue="alert.level"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="U0VWRVJF"/&gt;
                                    &lt;L7p:VariableToSet stringValue="alert.status"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="QXQgbGVhc3Qgb25lIGNlcnRpZmljYXRlIGhhcyBleHBpcmVk"/&gt;
                                    &lt;L7p:VariableToSet stringValue="alert.message"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Set ${alert.level}, ${alert.status}, and ${alert.message}"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                &lt;/wsp:All&gt;
                                &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Set ${alert.*} if not already at a higher state"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt;
                            &lt;/wsp:OneOrMore&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Check for SEVERE status"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:All&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Set ${alert.*} based on expiration status"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                        &lt;wsp:All wsp:Usage="Required"&gt;
                            &lt;L7p:ComparisonAssertion&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:Expression1 stringValue="${format}"/&gt;
                                &lt;L7p:Expression2 stringValue="JSON"/&gt;
                                &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="JSON"/&gt;
                                    &lt;/L7p:item&gt;
                                &lt;/L7p:Predicates&gt;
                            &lt;/L7p:ComparisonAssertion&gt;
                            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${privateKey.iterations}"/&gt;
                                    &lt;L7p:Expression2 stringValue="0"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="0"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt;
                                &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="JHtwcml2YXRlS2V5c1RhYmxlfSw="/&gt;
                                    &lt;L7p:VariableToSet stringValue="privateKeysTable"/&gt;
                                &lt;/L7p:SetVariable&gt;
                                &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Append comma if not first iteration"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt;
                            &lt;/wsp:OneOrMore&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="JHtwcml2YXRlS2V5c1RhYmxlfQ0KICAgIHsNCiAgICAgICJhbGlhcyI6ICIke2FsaWFzLnJlc3VsdH0iLA0KICAgICAgInN1YmplY3QiOiAiJHtzdWJqZWN0LnJlc3VsdH0iLA0KICAgICAgImlzc3VlciI6ICIke2lzc3Vlci5yZXN1bHR9IiwNCiAgICAgICJzZXJpYWxOdW1iZXIiOiAiJHtzZXJpYWxOdW1iZXIucmVzdWx0fSIsDQogICAgICAiZXhwaXJlcyI6ICIke2V4cGlyZXMucmVzdWx0fSIsDQogICAgICAicmVtYWluaW5nIjogIiR7cmVtYWluaW5nLmRheXN9OiR7cmVtYWluaW5nLmhvdXJzfToke3JlbWFpbmluZy5taW51dGVzfToke3JlbWFpbmluZy5zZWNvbmRzfSIsDQogICAgICAic3RhdHVzIjogIiR7Y2VydGlmaWNhdGUuc3RhdHVzfSINCiAgICB9"/&gt;
                                &lt;L7p:VariableToSet stringValue="privateKeysTable"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${format} == JSON"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:All&gt;
                        &lt;wsp:All wsp:Usage="Required"&gt;
                            &lt;L7p:ComparisonAssertion&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:Expression1 stringValue="${format}"/&gt;
                                &lt;L7p:Expression2 stringValue="XML"/&gt;
                                &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="XML"/&gt;
                                    &lt;/L7p:item&gt;
                                &lt;/L7p:Predicates&gt;
                            &lt;/L7p:ComparisonAssertion&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="JHtwcml2YXRlS2V5c1RhYmxlfQ0KICAgIDxQcml2YXRlS2V5Pg0KICAgICAgPEFsaWFzPiR7YWxpYXMucmVzdWx0fTwvQWxpYXM+DQogICAgICA8U3ViamVjdD4ke3N1YmplY3QucmVzdWx0fTwvU3ViamVjdD4NCiAgICAgIDxJc3N1ZXI+JHtpc3N1ZXIucmVzdWx0fTwvSXNzdWVyPg0KICAgICAgPFNlcmlhbE51bWJlcj4ke3NlcmlhbE51bWJlci5yZXN1bHR9PC9TZXJpYWxOdW1iZXI+DQogICAgICA8RXhwaXJlcz4ke2V4cGlyZXMucmVzdWx0fTwvRXhwaXJlcz4NCiAgICAgIDxSZW1haW5pbmc+JHtyZW1haW5pbmcuZGF5c306JHtyZW1haW5pbmcuaG91cnN9OiR7cmVtYWluaW5nLm1pbnV0ZXN9OiR7cmVtYWluaW5nLnNlY29uZHN9PC9SZW1haW5pbmc+DQogICAgICA8U3RhdHVzPiR7Y2VydGlmaWNhdGUuc3RhdHVzfTwvU3RhdHVzPg0KICAgIDwvUHJpdmF0ZUtleT4="/&gt;
                                &lt;L7p:VariableToSet stringValue="privateKeysTable"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${format} == XML"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:All&gt;
                        &lt;wsp:All wsp:Usage="Required"&gt;
                            &lt;L7p:ComparisonAssertion&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:Expression1 stringValue="${format}"/&gt;
                                &lt;L7p:Expression2 stringValue="HTML"/&gt;
                                &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="HTML"/&gt;
                                    &lt;/L7p:item&gt;
                                &lt;/L7p:Predicates&gt;
                            &lt;/L7p:ComparisonAssertion&gt;
                            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                                &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${remaining.days}"/&gt;
                                    &lt;L7p:Operator operatorNull="null"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="int"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="GE"/&gt;
                                    &lt;L7p:RightValue stringValue="${alertAge.INFO}"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                    &lt;/L7p:ComparisonAssertion&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="bGlnaHRncmVlbg=="/&gt;
                                    &lt;L7p:VariableToSet stringValue="bgcolor"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// No alert to set"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                &lt;/wsp:All&gt;
                                &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${remaining.days}"/&gt;
                                    &lt;L7p:Operator operatorNull="null"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="int"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="GE"/&gt;
                                    &lt;L7p:RightValue stringValue="${alertAge.WARNING}"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                    &lt;/L7p:ComparisonAssertion&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="eWVsbG93"/&gt;
                                    &lt;L7p:VariableToSet stringValue="bgcolor"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Set for INFO"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                &lt;/wsp:All&gt;
                                &lt;wsp:All wsp:Usage="Required"&gt;
                                    &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${remaining.days}"/&gt;
                                    &lt;L7p:Operator operatorNull="null"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="int"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Operator operator="GE"/&gt;
                                    &lt;L7p:RightValue stringValue="0"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                    &lt;/L7p:ComparisonAssertion&gt;
                                    &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="b3Jhbmdl"/&gt;
                                    &lt;L7p:VariableToSet stringValue="bgcolor"/&gt;
                                    &lt;/L7p:SetVariable&gt;
                                    &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Set for WARNING"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:assertionComment&gt;
                                &lt;/wsp:All&gt;
                                &lt;L7p:SetVariable&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Must be EXPIRED"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Base64Expression stringValue="cmVk"/&gt;
                                    &lt;L7p:VariableToSet stringValue="bgcolor"/&gt;
                                &lt;/L7p:SetVariable&gt;
                                &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Set the background colour for the Time Remaining cell"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt;
                            &lt;/wsp:OneOrMore&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="JHtwcml2YXRlS2V5c1RhYmxlfSAgPHRyPg0KICAgIDx0ZD4ke2FsaWFzLnJlc3VsdH08L3RkPg0KICAgIDx0ZD4ke3N1YmplY3QucmVzdWx0fTwvdGQ+DQogICAgPHRkPiR7aXNzdWVyLnJlc3VsdH08L3RkPg0KICAgIDx0ZD4ke3NlcmlhbE51bWJlci5yZXN1bHR9PC90ZD4NCiAgICA8dGQ+JHtleHBpcmVzLnJlc3VsdH08L3RkPg0KICAgIDx0ZCBiZ2NvbG9yPSIke2JnY29sb3J9Ij4ke3JlbWFpbmluZy5kYXlzfToke3JlbWFpbmluZy5ob3Vyc306JHtyZW1haW5pbmcubWludXRlc306JHtyZW1haW5pbmcuc2Vjb25kc308L3RkPg0KICA8L3RyPg=="/&gt;
                                &lt;L7p:VariableToSet stringValue="privateKeysTable"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${format} == HTML"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:All&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Set response per ${format}"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:OneOrMore&gt;
                &lt;/L7p:ForEachLoop&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${format}"/&gt;
                            &lt;L7p:Expression2 stringValue="JSON"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="JSON"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:HardcodedResponse&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// application/json"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:Base64ResponseBody stringValue="ewogICJhbGVydFN0YXR1cyI6ICIke2FsZXJ0LnN0YXR1c30iLAogICJhbGVydExldmVsIjogIiR7YWxlcnQubGV2ZWx9IiwKICAiYWxlcnRNZXNzYWdlIjogIiR7YWxlcnQubWVzc2FnZX0iLAogICJ0aHJlc2hvbGQuSU5GTyI6ICIke2FsZXJ0QWdlLklORk99IGRheXMiLAogICJ0aHJlc2hvbGQuV0FSTklORyI6ICIke2FsZXJ0QWdlLldBUk5JTkd9IGRheXMiLAogICJ0cnVzdGVkQ2VydHMiOiBbJHt0cnVzdGVkQ2VydHNUYWJsZX0KICBdLAogICJwcml2YXRlS2V5cyI6IFske3ByaXZhdGVLZXlzVGFibGV9CiAgXSwKICAiYWNjZXNzZWRCeSI6ICIke3JlcXVlc3QuYXV0aGVudGljYXRlZHVzZXJ9Igp9"/&gt;
                            &lt;L7p:ResponseContentType stringValue="application/json; charset=UTF-8"/&gt;
                        &lt;/L7p:HardcodedResponse&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${format} == JSON"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${format}"/&gt;
                            &lt;L7p:Expression2 stringValue="XML"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="XML"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:HardcodedResponse&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// text/xml"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:Base64ResponseBody stringValue="PENlcnRpZmljYXRlUmVwb3J0PgogIDxBbGVydFN0YXR1cz4ke2FsZXJ0LnN0YXR1c308L0FsZXJ0U3RhdHVzPgogIDxBbGVydExldmVsPiR7YWxlcnQubGV2ZWx9PC9BbGVydExldmVsPgogIDxBbGVydE1lc3NhZ2U+JHthbGVydC5tZXNzYWdlfTwvQWxlcnRNZXNzYWdlPgogIDxUaHJlc2hvbGQuSU5GTz4ke2FsZXJ0QWdlLklORk99IGRheXM8L1RocmVzaG9sZC5JTkZPPgogIDxUaHJlc2hvbGQuV0FSTklORz4ke2FsZXJ0QWdlLldBUk5JTkd9IGRheXM8L1RocmVzaG9sZC5XQVJOSU5HPgogIDxUcnVzdGVkQ2VydGlmaWNhdGVzPiR7dHJ1c3RlZENlcnRzVGFibGV9CiAgPC9UcnVzdGVkQ2VydGlmaWNhdGVzPgogIDxQcml2YXRlS2V5cz4ke3ByaXZhdGVLZXlzVGFibGV9CiAgPC9Qcml2YXRlS2V5cz4KICA8QWNjZXNzZWRCeT4ke3JlcXVlc3QuYXV0aGVudGljYXRlZHVzZXJ9PC9BY2Nlc3NlZEJ5Pgo8L0NlcnRpZmljYXRlUmVwb3J0Pg=="/&gt;
                        &lt;/L7p:HardcodedResponse&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${format} == XML"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${format}"/&gt;
                            &lt;L7p:Expression2 stringValue="HTML"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="HTML"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:HardcodedResponse&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// text/html"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:Base64ResponseBody stringValue="JHtodG1sLnRvcH0KCgo8aDI+VHJ1c3RlZCBDZXJ0aWZpY2F0ZXM8L2gyPgo8dGFibGUgY2xhc3M9InRhYmxlLXN0cmlwZWQgdGFibGUtaG92ZXIiPgogIDx0ciBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjogcmdiKDIxNiwyMTYsMjE2KTsiPgogICAgPHRoPk5hbWU8L3RoPgogICAgPHRoPlN1YmplY3Q8L3RoPgogICAgPHRoPklzc3VlcjwvdGg+CiAgICA8dGg+U2VyaWFsIE51bWJlcjwvdGg+CiAgICA8dGg+RXhwaXJlczwvdGg+CiAgICA8dGg+VGltZSBSZW1haW5pbmc8L3RoPgogIDwvdHI+CiR7dHJ1c3RlZENlcnRzVGFibGV9CjwvdGFibGU+Cgo8aDI+UHJpdmF0ZSBLZXkgQ2VydGlmaWNhdGVzPC9oMj4KPHRhYmxlIGNsYXNzPSJ0YWJsZS1zdHJpcGVkIHRhYmxlLWhvdmVyIj4KICA8dHIgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6IHJnYigyMTYsMjE2LDIxNik7Ij4KICAgIDx0aD5BbGlhczwvdGg+CiAgICA8dGg+U3ViamVjdDwvdGg+CiAgICA8dGg+SXNzdWVyPC90aD4KICAgIDx0aD5TZXJpYWwgTnVtYmVyPC90aD4KICAgIDx0aD5FeHBpcmVzPC90aD4KICAgIDx0aD5UaW1lIFJlbWFpbmluZzwvdGg+CiAgPC90cj4KJHtwcml2YXRlS2V5c1RhYmxlfQo8L3RhYmxlPgoKPGgyPkxlZ2VuZDwvaDI+Cjx0YWJsZSBjbGFzcz0idGFibGUtc3RyaXBlZCB0YWJsZS1ob3ZlciI+CiAgPHRyPgogICAgPHRkIGJnY29sb3I9ImxpZ2h0Z3JlZW4iPkNlcnRpZmljYXRlIGlzIE9LPC90ZD4KICAgIDx0ZCBiZ2NvbG9yPSJ5ZWxsb3ciPkNlcnRpZmljYXRlIHdpbGwgZXhwaXJlIGluIGxlc3MgdGhhbiAke2FsZXJ0QWdlLklORk99IGRheXM8L3RkPgogICAgPHRkIGJnY29sb3I9Im9yYW5nZSI+Q2VydGlmaWNhdGUgd2lsbCBleHBpcmUgaW4gbGVzcyB0aGFuICR7YWxlcnRBZ2UuV0FSTklOR30gZGF5czwvdGQ+CiAgICA8dGQgYmdjb2xvcj0icmVkIj5DZXJ0aWZpY2F0ZSBoYXMgZXhwaXJlZDwvdGQ+CiAgPC90cj4KPC90YWJsZT4KCiR7aHRtbC5ib3R0b219"/&gt;
                            &lt;L7p:ResponseContentType stringValue="text/html; charset=UTF-8"/&gt;
                        &lt;/L7p:HardcodedResponse&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${format} == HTML"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Return response per ${format}"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:AddHeader&gt;
                    &lt;L7p:HeaderName stringValue="X-AlertLevel"/&gt;
                    &lt;L7p:HeaderValue stringValue="${alert.level}"/&gt;
                    &lt;L7p:Target target="RESPONSE"/&gt;
                &lt;/L7p:AddHeader&gt;
                &lt;L7p:AddHeader&gt;
                    &lt;L7p:HeaderName stringValue="X-AlertStatus"/&gt;
                    &lt;L7p:HeaderValue stringValue="${alert.status}"/&gt;
                    &lt;L7p:Target target="RESPONSE"/&gt;
                &lt;/L7p:AddHeader&gt;
                &lt;L7p:AddHeader&gt;
                    &lt;L7p:HeaderName stringValue="X-AlertMessage"/&gt;
                    &lt;L7p:HeaderValue stringValue="${alert.message}"/&gt;
                    &lt;L7p:Target target="RESPONSE"/&gt;
                &lt;/L7p:AddHeader&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// ${loggedIn} == true"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${loggedIn}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="boolean"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:RightValue stringValue="false"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                            &lt;L7p:ComparisonAssertion&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:Expression1 stringValue="${format}"/&gt;
                                &lt;L7p:Expression2 stringValue="JSON"/&gt;
                                &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="JSON"/&gt;
                                    &lt;/L7p:item&gt;
                                &lt;/L7p:Predicates&gt;
                            &lt;/L7p:ComparisonAssertion&gt;
                            &lt;L7p:ComparisonAssertion&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:Expression1 stringValue="${format}"/&gt;
                                &lt;L7p:Expression2 stringValue="XML"/&gt;
                                &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="XML"/&gt;
                                    &lt;/L7p:item&gt;
                                &lt;/L7p:Predicates&gt;
                            &lt;/L7p:ComparisonAssertion&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Check for ${format} == JSON|XML"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:OneOrMore&gt;
                        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                            &lt;wsp:All wsp:Usage="Required"&gt;
                                &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${request.http.secure}"/&gt;
                                    &lt;L7p:Operator operatorNull="null"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="boolean"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="true"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt;
                                &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="Tm90IEF1dGhvcml6ZWQ="/&gt;
                                    &lt;L7p:VariableToSet stringValue="error.message"/&gt;
                                &lt;/L7p:SetVariable&gt;
                                &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Secure connection, so just return &amp;quot;Not Authorized&amp;quot;"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt;
                            &lt;/wsp:All&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="U1NMIFJlcXVpcmVk"/&gt;
                                &lt;L7p:VariableToSet stringValue="error.message"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Set error response depending on whether it came over SSL or not"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:OneOrMore&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="NDAx"/&gt;
                            &lt;L7p:VariableToSet stringValue="error.status"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:FalseAssertion/&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${format} == JSON|XML"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${format}"/&gt;
                            &lt;L7p:Expression2 stringValue="HTML"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="HTML"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                            &lt;wsp:All wsp:Usage="Required"&gt;
                                &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${logout}"/&gt;
                                    &lt;L7p:Operator operatorNull="null"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="boolean"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="true"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt;
                                &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Detail stringValue="==&gt; Logging user out"/&gt;
                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                &lt;/L7p:AuditDetailAssertion&gt;
                                &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue=""/&gt;
                                    &lt;L7p:DataType variableDataType="dateTime"/&gt;
                                    &lt;L7p:DateOffsetExpression stringValue="-1"/&gt;
                                    &lt;L7p:DateOffsetField intValue="5"/&gt;
                                    &lt;L7p:VariableToSet stringValue="yesterday"/&gt;
                                &lt;/L7p:SetVariable&gt;
                                &lt;L7p:ManageCookie&gt;
                                    &lt;L7p:CookieAttributes mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="name"/&gt;
                                    &lt;L7p:value nameValuePair="included"&gt;
                                    &lt;L7p:Key stringValue="name"/&gt;
                                    &lt;L7p:Value stringValue="sessionKey"/&gt;
                                    &lt;/L7p:value&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="max-age"/&gt;
                                    &lt;L7p:value nameValuePair="included"&gt;
                                    &lt;L7p:Key stringValue="max-age"/&gt;
                                    &lt;L7p:Value stringValue="0"/&gt;
                                    &lt;/L7p:value&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="httpOnly"/&gt;
                                    &lt;L7p:value nameValuePair="included"&gt;
                                    &lt;L7p:Key stringValue="httpOnly"/&gt;
                                    &lt;L7p:Value stringValue="true"/&gt;
                                    &lt;/L7p:value&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="secure"/&gt;
                                    &lt;L7p:value nameValuePair="included"&gt;
                                    &lt;L7p:Key stringValue="secure"/&gt;
                                    &lt;L7p:Value stringValue="true"/&gt;
                                    &lt;/L7p:value&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="value"/&gt;
                                    &lt;L7p:value nameValuePair="included"&gt;
                                    &lt;L7p:Key stringValue="value"/&gt;
                                    &lt;L7p:Value stringValue="NULL"/&gt;
                                    &lt;/L7p:value&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:CookieAttributes&gt;
                                    &lt;L7p:Operation operation="ADD_OR_REPLACE"/&gt;
                                    &lt;L7p:Target target="RESPONSE"/&gt;
                                &lt;/L7p:ManageCookie&gt;
                                &lt;L7p:CacheStorage&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Remove from cache by setting TTL to 0"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:CacheEntryKey stringValue="${cookie.sessionKey}"/&gt;
                                    &lt;L7p:CacheId stringValue="loginCache"/&gt;
                                    &lt;L7p:MaxEntries stringValue="25"/&gt;
                                    &lt;L7p:MaxEntryAgeSeconds stringValue="0"/&gt;
                                    &lt;L7p:MaxEntrySizeBytes stringValue="1000"/&gt;
                                    &lt;L7p:OtherTargetMessageVariable stringValue="sessionDetail"/&gt;
                                    &lt;L7p:Target target="OTHER"/&gt;
                                &lt;/L7p:CacheStorage&gt;
                                &lt;L7p:AddHeader&gt;
                                    &lt;L7p:HeaderName stringValue="Location"/&gt;
                                    &lt;L7p:HeaderValue stringValue="${request.url.path}"/&gt;
                                    &lt;L7p:Target target="RESPONSE"/&gt;
                                &lt;/L7p:AddHeader&gt;
                                &lt;L7p:HardcodedResponse&gt;
                                    &lt;L7p:Base64ResponseBody stringValue="JHtodG1sLnRvcH0KPHA+JHtmb3JtLm1lc3NhZ2V9PC9wPgoKPHA+PGEgaHJlZj0iJHtyZXF1ZXN0LnVybC5wYXRofSI+Q29udGludWU8L3A+CiR7aHRtbC5ib3R0b219"/&gt;
                                    &lt;L7p:ResponseContentType stringValue="text/html; charset=UTF-8"/&gt;
                                    &lt;L7p:ResponseStatus stringValue="302"/&gt;
                                &lt;/L7p:HardcodedResponse&gt;
                                &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Logout"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt;
                            &lt;/wsp:All&gt;
                            &lt;wsp:All wsp:Usage="Required"&gt;
                                &lt;L7p:AuditDetailAssertion&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:Detail stringValue="==&gt; Not authenticated, returning login form"/&gt;
                                    &lt;L7p:Level stringValue="FINE"/&gt;
                                &lt;/L7p:AuditDetailAssertion&gt;
                                &lt;L7p:HardcodedResponse&gt;
                                    &lt;L7p:Base64ResponseBody stringValue="JHtodG1sLnRvcH0KCiAgICA8cD4ke2Zvcm0ubWVzc2FnZX08L3A+CgogICAgPHA+UGxlYXNlIHByb3ZpZGUgUG9saWN5IE1hbmFnZXIgYWRtaW5pc3RyYXRvciBjcmVkZW50aWFsczo8L3A+CiAgICA8Zm9ybSBtZXRob2Q9IlBPU1QiPgogICAgPHA+VXNlcm5hbWU6IDxpbnB1dCBuYW1lPSJ1c2VybmFtZSIgdHlwZT0idGV4dCIvPjxici8+CiAgICBQYXNzd29yZDogPGlucHV0IG5hbWU9InBhc3N3b3JkIiB0eXBlPSJwYXNzd29yZCIvPjxici8+CiAgICA8aW5wdXQgdHlwZT0ic3VibWl0IiB2YWx1ZT0iQ29udGludWUiLz48L3A+CiAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJhY3Rpb24iIHZhbHVlPSJsb2dpbiIvPgogICAgPC9mb3JtPgoKJHtodG1sLmJvdHRvbX0="/&gt;
                                    &lt;L7p:ResponseContentType stringValue="text/html; charset=UTF-8"/&gt;
                                &lt;/L7p:HardcodedResponse&gt;
                                &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Failed or new"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt;
                            &lt;/wsp:All&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Handle logout vs failed or new login"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:OneOrMore&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${request.http.parameter.format} != JSON|XML"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Handle format parameter"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// ${loggedIn} == false"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Do processing if ${loggedIn} == true else return login form"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
                        </l7:ResourceSet>
                    </l7:Resources>
                </l7:Service>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Utility: Get Policy</l7:Name>
            <l7:Id>7215d076e3f7201974e2be3edf231742</l7:Id>
            <l7:Type>ENCAPSULATED_ASSERTION</l7:Type>
            <l7:TimeStamp>2022-04-29T11:42:05.501-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:EncapsulatedAssertion id="7215d076e3f7201974e2be3edf231742" version="0">
                    <l7:Name>Utility: Get Policy</l7:Name>
                    <l7:Guid>175dcb54-530d-4402-a8fe-08bd6be420fc</l7:Guid>
                    <l7:PolicyReference id="7215d076e3f7201974e2be3edf231684" resourceUri="http://ns.l7tech.com/2010/04/gateway-management/policies"/>
                    <l7:EncapsulatedArguments>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>1</l7:Ordinal>
                            <l7:ArgumentName>policyId</l7:ArgumentName>
                            <l7:ArgumentType>string</l7:ArgumentType>
                            <l7:GuiLabel>Policy ID (required): </l7:GuiLabel>
                            <l7:GuiPrompt>true</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>2</l7:Ordinal>
                            <l7:ArgumentName>refresh</l7:ArgumentName>
                            <l7:ArgumentType>string</l7:ArgumentType>
                            <l7:GuiLabel>Refresh Cache? (true|false) (optional): </l7:GuiLabel>
                            <l7:GuiPrompt>true</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>3</l7:Ordinal>
                            <l7:ArgumentName>cacheAge</l7:ArgumentName>
                            <l7:ArgumentType>string</l7:ArgumentType>
                            <l7:GuiLabel>Cache Age (optional): </l7:GuiLabel>
                            <l7:GuiPrompt>true</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                    </l7:EncapsulatedArguments>
                    <l7:EncapsulatedResults>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>error.msg</l7:ResultName>
                            <l7:ResultType>string</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>policy.definition</l7:ResultName>
                            <l7:ResultType>message</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>policy.source</l7:ResultName>
                            <l7:ResultType>string</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                    </l7:EncapsulatedResults>
                    <l7:Properties>
                        <l7:Property key="allowTracing">
                            <l7:StringValue>false</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="description">
                            <l7:StringValue>Assertion to call restman and retrieve a policy by ID</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="paletteFolder">
                            <l7:StringValue>internalAssertions</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="paletteIconResourceName">
                            <l7:StringValue>Refresh16.gif</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="passMetricsToParent">
                            <l7:StringValue>false</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="policyGuid">
                            <l7:StringValue>15f82eda-b44f-4688-b34f-180aaa5d2d26</l7:StringValue>
                        </l7:Property>
                    </l7:Properties>
                </l7:EncapsulatedAssertion>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Utility: Get Service</l7:Name>
            <l7:Id>7215d076e3f7201974e2be3edf23307f</l7:Id>
            <l7:Type>ENCAPSULATED_ASSERTION</l7:Type>
            <l7:TimeStamp>2022-04-29T11:42:05.501-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:EncapsulatedAssertion id="7215d076e3f7201974e2be3edf23307f" version="0">
                    <l7:Name>Utility: Get Service</l7:Name>
                    <l7:Guid>e2ffdd1c-b183-4298-b1c8-5e37eee53eb3</l7:Guid>
                    <l7:PolicyReference id="7215d076e3f7201974e2be3edf232fde" resourceUri="http://ns.l7tech.com/2010/04/gateway-management/policies"/>
                    <l7:EncapsulatedArguments>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>1</l7:Ordinal>
                            <l7:ArgumentName>serviceId</l7:ArgumentName>
                            <l7:ArgumentType>string</l7:ArgumentType>
                            <l7:GuiLabel>Service ID (required): </l7:GuiLabel>
                            <l7:GuiPrompt>true</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>2</l7:Ordinal>
                            <l7:ArgumentName>refresh</l7:ArgumentName>
                            <l7:ArgumentType>string</l7:ArgumentType>
                            <l7:GuiLabel>Refresh Cache? (true|false) (optional): </l7:GuiLabel>
                            <l7:GuiPrompt>true</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>3</l7:Ordinal>
                            <l7:ArgumentName>cacheAge</l7:ArgumentName>
                            <l7:ArgumentType>string</l7:ArgumentType>
                            <l7:GuiLabel>Cache Age (optional): </l7:GuiLabel>
                            <l7:GuiPrompt>true</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                    </l7:EncapsulatedArguments>
                    <l7:EncapsulatedResults>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>error.msg</l7:ResultName>
                            <l7:ResultType>string</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>service.definition</l7:ResultName>
                            <l7:ResultType>message</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>service.source</l7:ResultName>
                            <l7:ResultType>string</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                    </l7:EncapsulatedResults>
                    <l7:Properties>
                        <l7:Property key="allowTracing">
                            <l7:StringValue>false</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="description">
                            <l7:StringValue>Assertion to call restman and retrieve a service by ID</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="paletteFolder">
                            <l7:StringValue>internalAssertions</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="paletteIconResourceName">
                            <l7:StringValue>Refresh16.gif</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="passMetricsToParent">
                            <l7:StringValue>false</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="policyGuid">
                            <l7:StringValue>59074fe9-1cee-442d-bea4-79d9e3da5381</l7:StringValue>
                        </l7:Property>
                    </l7:Properties>
                </l7:EncapsulatedAssertion>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>Utility Assertions Tester</l7:Name>
            <l7:Id>dfaa76af686fcb8fe1c2542b37613bd2</l7:Id>
            <l7:Type>SERVICE</l7:Type>
            <l7:TimeStamp>2022-04-29T11:42:05.525-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Service id="dfaa76af686fcb8fe1c2542b37613bd2" version="4">
                    <l7:ServiceDetail folderId="7215d076e3f7201974e2be3edf13f52e" id="dfaa76af686fcb8fe1c2542b37613bd2" version="4">
                        <l7:Name>Utility Assertions Tester</l7:Name>
                        <l7:Enabled>true</l7:Enabled>
                        <l7:ServiceMappings>
                            <l7:HttpMapping>
                                <l7:UrlPattern>/apigw/utilityTester</l7:UrlPattern>
                                <l7:Verbs>
                                    <l7:Verb>GET</l7:Verb>
                                    <l7:Verb>POST</l7:Verb>
                                    <l7:Verb>PUT</l7:Verb>
                                    <l7:Verb>DELETE</l7:Verb>
                                </l7:Verbs>
                            </l7:HttpMapping>
                        </l7:ServiceMappings>
                        <l7:Properties>
                            <l7:Property key="internal">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                            <l7:Property key="policyRevision">
                                <l7:LongValue>21</l7:LongValue>
                            </l7:Property>
                            <l7:Property key="soap">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                            <l7:Property key="tracingEnabled">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                            <l7:Property key="wssProcessingEnabled">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                        </l7:Properties>
                    </l7:ServiceDetail>
                    <l7:Resources>
                        <l7:ResourceSet tag="policy">
                            <l7:Resource type="policy" version="20">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Web interface to test the Gateway Management Utilities' encapsulated assertions"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Caches results for two hours. Check the &amp;quot;Refresh cache&amp;quot; box on the form to pull fresh data from Gateway"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v1.0.0 - Jay MacDonald - 20201107 - Initial Version"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v1.0.1 - Jay MacDonald - 20211102 - Added link to API Gateway Certificate Report"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="*****************************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:AuditAssertion/&gt;
        &lt;L7p:Encapsulated&gt;
            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="4bd10104-a43c-4ecf-ae4d-b95e312cad4b"/&gt;
            &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Form and Session Authentication"/&gt;
            &lt;L7p:Parameters mapValue="included"&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="sessionTTL"/&gt;
                    &lt;L7p:value stringValue="1800"/&gt;
                &lt;/L7p:entry&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="verifyAdmin"/&gt;
                    &lt;L7p:value stringValue="true"/&gt;
                &lt;/L7p:entry&gt;
            &lt;/L7p:Parameters&gt;
        &lt;/L7p:Encapsulated&gt;
        &lt;L7p:Encapsulated&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// v1.0.1"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="43cbc673-f658-4e98-882d-111e752794b1"/&gt;
            &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Set Web Page Wrappers"/&gt;
            &lt;L7p:Parameters mapValue="included"&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="utility.name"/&gt;
                    &lt;L7p:value stringValue="Utility Assertion Tester"/&gt;
                &lt;/L7p:entry&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="utility.version"/&gt;
                    &lt;L7p:value stringValue="1.0.1"/&gt;
                &lt;/L7p:entry&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="version"/&gt;
                    &lt;L7p:value stringValue="1.1"/&gt;
                &lt;/L7p:entry&gt;
            &lt;/L7p:Parameters&gt;
        &lt;/L7p:Encapsulated&gt;
        &lt;L7p:SetVariable&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// 2 hours"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Base64Expression stringValue="NzIwMA=="/&gt;
            &lt;L7p:VariableToSet stringValue="cacheAge"/&gt;
        &lt;/L7p:SetVariable&gt;
        &lt;wsp:All wsp:Usage="Required"&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="VW5rbm93biBlcnJvciBmb3VuZA=="/&gt;
                &lt;L7p:VariableToSet stringValue="error.message"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="NTAw"/&gt;
                &lt;L7p:VariableToSet stringValue="error.status"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:CustomizeErrorResponse&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// text/html"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:Content stringValueReference="inline"&gt;&lt;![CDATA[${html.top}

  &lt;h1&gt;Error&lt;/h1&gt;

  &lt;p&gt;${error.message}&lt;/p&gt;

${html.bottom}]]&gt;&lt;/L7p:Content&gt;
                &lt;L7p:ContentType stringValue="text/html; charset=UTF-8"/&gt;
                &lt;L7p:ExtraHeaders nameValuePairArray="included"/&gt;
                &lt;L7p:HttpStatus stringValue="${error.status}"/&gt;
            &lt;/L7p:CustomizeErrorResponse&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Configure error response"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:All&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${loggedIn}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="boolean"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:RightValue stringValue="true"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtyZXF1ZXN0Lmh0dHAucGFyYW1ldGVycy51dGlsaXR5fQ=="/&gt;
                    &lt;L7p:VariableToSet stringValue="utility"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// FINE"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:Detail stringValue="==&gt; utility=${utility}"/&gt;
                    &lt;L7p:Level stringValue="FINE"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${utility}"/&gt;
                        &lt;L7p:Operator operatorNull="null"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item regex="included"&gt;
                                &lt;L7p:Pattern stringValue="^(menu|CallRestman|GetAllPolicyXML|GetService|GetPolicy|ListActiveConnectors|ListCassandraConnections|ListClusterProperties|ListEmailListeners|ListEncapsulatedAssertions|ListFolders|ListGenericEntities|ListGroups|ListHTTPConfigurations|ListIdentityProviders|ListJDBCConnections|ListJMSDestinations|ListListenPorts|ListPolicies|ListPolicyBackedServices|ListPrivateKeys|ListScheduledTasks|ListSecurePasswords|ListServices|ListSiteMinderConfigurations|ListTrustedCertificates|ListUsers)$"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="bWVudQ=="/&gt;
                        &lt;L7p:VariableToSet stringValue="utility"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Confirm utility is set, default=menu"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtyZXF1ZXN0Lmh0dHAucGFyYW1ldGVycy5yZWZyZXNofQ=="/&gt;
                    &lt;L7p:VariableToSet stringValue="refresh"/&gt;
                &lt;/L7p:SetVariable&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${refresh}"/&gt;
                        &lt;L7p:Operator operatorNull="null"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item regex="included"&gt;
                                &lt;L7p:Pattern stringValue="^(true|false)$"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue="ZmFsc2U="/&gt;
                        &lt;L7p:VariableToSet stringValue="refresh"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Confirm refresh is set, default=false"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${utility}"/&gt;
                            &lt;L7p:Expression2 stringValue="menu"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="menu"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:HardcodedResponse&gt;
                            &lt;L7p:Base64ResponseBody stringValue=""/&gt;
                            &lt;L7p:ResponseContentType stringValue="text/html; charset=UTF-8"/&gt;
                        &lt;/L7p:HardcodedResponse&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${utility} is not set - display intro"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${utility}"/&gt;
                            &lt;L7p:Expression2 stringValue="CallRestman"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="CallRestman"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:Encapsulated&gt;
                            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="c8a5a0d5-1ae2-4144-b538-5c311efc1560"/&gt;
                            &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Call Restman"/&gt;
                            &lt;L7p:Parameters mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="element"/&gt;
                                    &lt;L7p:value stringValue=""/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="message"/&gt;
                                    &lt;L7p:value stringValue=""/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="method"/&gt;
                                    &lt;L7p:value stringValue=""/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="resource"/&gt;
                                    &lt;L7p:value stringValue="${request.http.parameter.resource}"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Parameters&gt;
                        &lt;/L7p:Encapsulated&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${utility} == 'CallRestman'"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${utility}"/&gt;
                            &lt;L7p:Expression2 stringValue="GetPolicy"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="GetPolicy"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:Encapsulated&gt;
                            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="175dcb54-530d-4402-a8fe-08bd6be420fc"/&gt;
                            &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Get Policy"/&gt;
                            &lt;L7p:Parameters mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="cacheAge"/&gt;
                                    &lt;L7p:value stringValue="${cacheAge}"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="policyDefinition.refresh"/&gt;
                                    &lt;L7p:value stringValue="${refresh}"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="policyId"/&gt;
                                    &lt;L7p:value stringValue="${request.http.parameter.policyId}"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="refresh"/&gt;
                                    &lt;L7p:value stringValue="${refresh}"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Parameters&gt;
                        &lt;/L7p:Encapsulated&gt;
                        &lt;L7p:HardcodedResponse&gt;
                            &lt;L7p:Base64ResponseBody stringValue="JHtwb2xpY3kuZGVmaW5pdGlvbi5tYWlucGFydH0="/&gt;
                        &lt;/L7p:HardcodedResponse&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${utility} == 'GetPolicy'"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${utility}"/&gt;
                            &lt;L7p:Expression2 stringValue="GetService"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="GetService"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:Encapsulated&gt;
                            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="e2ffdd1c-b183-4298-b1c8-5e37eee53eb3"/&gt;
                            &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Get Service"/&gt;
                            &lt;L7p:Parameters mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="cacheAge"/&gt;
                                    &lt;L7p:value stringValue="${cacheAge}"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="refresh"/&gt;
                                    &lt;L7p:value stringValue="${refresh}"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="serviceDefinition.refresh"/&gt;
                                    &lt;L7p:value stringValue="${refresh}"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="serviceId"/&gt;
                                    &lt;L7p:value stringValue="${request.http.parameter.serviceId}"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Parameters&gt;
                        &lt;/L7p:Encapsulated&gt;
                        &lt;L7p:HardcodedResponse&gt;
                            &lt;L7p:Base64ResponseBody stringValue="JHtzZXJ2aWNlLmRlZmluaXRpb24ubWFpbnBhcnR9"/&gt;
                        &lt;/L7p:HardcodedResponse&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${utility} == 'GetService'"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${utility}"/&gt;
                            &lt;L7p:Expression2 stringValue="ListActiveConnectors"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="ListActiveConnectors"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:Encapsulated&gt;
                            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="48b49f89-16fe-4b7a-bb66-02d86ad236d8"/&gt;
                            &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: List Active Connectors"/&gt;
                            &lt;L7p:Parameters mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="cacheAge"/&gt;
                                    &lt;L7p:value stringValue="${cacheAge}"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="refresh"/&gt;
                                    &lt;L7p:value stringValue="${refresh}"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Parameters&gt;
                        &lt;/L7p:Encapsulated&gt;
                        &lt;L7p:HardcodedResponse&gt;
                            &lt;L7p:Base64ResponseBody stringValue="JHthY3RpdmVDb25uZWN0b3JzLnNvcnRlZC5tYWlucGFydH0="/&gt;
                        &lt;/L7p:HardcodedResponse&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${utility} == 'ListActiveConnectors'"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${utility}"/&gt;
                            &lt;L7p:Expression2 stringValue="ListCassandraConnections"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="ListCassandraConnections"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:Encapsulated&gt;
                            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="b55454b6-3095-4e4d-92dc-3f10a6594fba"/&gt;
                            &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: List Cassandra Connections"/&gt;
                            &lt;L7p:Parameters mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="cacheAge"/&gt;
                                    &lt;L7p:value stringValue="${cacheAge}"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="refresh"/&gt;
                                    &lt;L7p:value stringValue="${refresh}"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Parameters&gt;
                        &lt;/L7p:Encapsulated&gt;
                        &lt;L7p:HardcodedResponse&gt;
                            &lt;L7p:Base64ResponseBody stringValue="JHtjYXNzYW5kcmFDb25uZWN0aW9ucy5zb3J0ZWQubWFpbnBhcnR9"/&gt;
                        &lt;/L7p:HardcodedResponse&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${utility} == 'ListCassandraConnections'"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${utility}"/&gt;
                            &lt;L7p:Expression2 stringValue="ListClusterProperties"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="ListClusterProperties"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:Encapsulated&gt;
                            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="c8e30576-c290-4bd0-b63d-1eb3df866479"/&gt;
                            &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: List Cluster Properties"/&gt;
                            &lt;L7p:Parameters mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="cacheAge"/&gt;
                                    &lt;L7p:value stringValue="${cacheAge}"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="refresh"/&gt;
                                    &lt;L7p:value stringValue="${refresh}"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Parameters&gt;
                        &lt;/L7p:Encapsulated&gt;
                        &lt;L7p:HardcodedResponse&gt;
                            &lt;L7p:Base64ResponseBody stringValue="JHtjbHVzdGVyUHJvcGVydGllcy5zb3J0ZWQubWFpbnBhcnR9"/&gt;
                        &lt;/L7p:HardcodedResponse&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${utility} == 'ListClusterProperties'"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${utility}"/&gt;
                            &lt;L7p:Expression2 stringValue="ListEmailListeners"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="ListEmailListeners"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:Encapsulated&gt;
                            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="33877201-e5e7-4d81-a8d2-34c1250204ec"/&gt;
                            &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: List Email Listeners"/&gt;
                            &lt;L7p:Parameters mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="cacheAge"/&gt;
                                    &lt;L7p:value stringValue="${cacheAge}"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="refresh"/&gt;
                                    &lt;L7p:value stringValue="${refresh}"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Parameters&gt;
                        &lt;/L7p:Encapsulated&gt;
                        &lt;L7p:HardcodedResponse&gt;
                            &lt;L7p:Base64ResponseBody stringValue="JHtlbWFpbExpc3RlbmVycy5zb3J0ZWQubWFpbnBhcnR9"/&gt;
                        &lt;/L7p:HardcodedResponse&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${utility} == 'ListEmailListeners'"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${utility}"/&gt;
                            &lt;L7p:Expression2 stringValue="ListEncapsulatedAssertions"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="ListEncapsulatedAssertions"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:Encapsulated&gt;
                            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="8fc67f28-191e-4a4b-808b-299848593b53"/&gt;
                            &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: List Encapsulated Assertions"/&gt;
                            &lt;L7p:Parameters mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="cacheAge"/&gt;
                                    &lt;L7p:value stringValue="${cacheAge}"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="refresh"/&gt;
                                    &lt;L7p:value stringValue="${refresh}"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Parameters&gt;
                        &lt;/L7p:Encapsulated&gt;
                        &lt;L7p:HardcodedResponse&gt;
                            &lt;L7p:Base64ResponseBody stringValue="JHtlbmNhcHN1bGF0ZWRBc3NlcnRpb25zLnNvcnRlZC5tYWlucGFydH0="/&gt;
                        &lt;/L7p:HardcodedResponse&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${utility} == 'ListEncapsulatedAssertions'"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${utility}"/&gt;
                            &lt;L7p:Expression2 stringValue="ListFolders"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="ListFolders"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:Encapsulated&gt;
                            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="fbb4b1d3-54a5-4ab4-95af-814267236d17"/&gt;
                            &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: List Folders"/&gt;
                            &lt;L7p:Parameters mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="cacheAge"/&gt;
                                    &lt;L7p:value stringValue="${cacheAge}"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="refresh"/&gt;
                                    &lt;L7p:value stringValue="${refresh}"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Parameters&gt;
                        &lt;/L7p:Encapsulated&gt;
                        &lt;L7p:HardcodedResponse&gt;
                            &lt;L7p:Base64ResponseBody stringValue="JHtmb2xkZXJzLnNvcnRlZC5tYWlucGFydH0="/&gt;
                        &lt;/L7p:HardcodedResponse&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${utility} == 'ListFolders'"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${utility}"/&gt;
                            &lt;L7p:Expression2 stringValue="ListGenericEntities"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="ListGenericEntities"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:Encapsulated&gt;
                            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="6db56c26-58d7-4ffc-8fa5-01b525d5468b"/&gt;
                            &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: List Generic Entities"/&gt;
                            &lt;L7p:Parameters mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="cacheAge"/&gt;
                                    &lt;L7p:value stringValue="${cacheAge}"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="refresh"/&gt;
                                    &lt;L7p:value stringValue="${refresh}"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Parameters&gt;
                        &lt;/L7p:Encapsulated&gt;
                        &lt;L7p:HardcodedResponse&gt;
                            &lt;L7p:Base64ResponseBody stringValue="JHtnZW5lcmljRW50aXRpZXMuc29ydGVkLm1haW5wYXJ0fQ=="/&gt;
                        &lt;/L7p:HardcodedResponse&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${utility} == 'ListGenericEntities'"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${utility}"/&gt;
                            &lt;L7p:Expression2 stringValue="ListGroups"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="ListGroups"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:Encapsulated&gt;
                            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="ead32848-5ace-4468-95fe-50cb9d343d60"/&gt;
                            &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: List Groups"/&gt;
                            &lt;L7p:Parameters mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="cacheAge"/&gt;
                                    &lt;L7p:value stringValue="${cacheAge}"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="identityProviderIds"/&gt;
                                    &lt;L7p:value stringValue="${request.http.parameter.identityProviderIds}"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="refresh"/&gt;
                                    &lt;L7p:value stringValue="${refresh}"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Parameters&gt;
                        &lt;/L7p:Encapsulated&gt;
                        &lt;L7p:HardcodedResponse&gt;
                            &lt;L7p:Base64ResponseBody stringValue="JHtncm91cHMuc29ydGVkLm1haW5wYXJ0fQ=="/&gt;
                        &lt;/L7p:HardcodedResponse&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${utility} == 'ListGroups'"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${utility}"/&gt;
                            &lt;L7p:Expression2 stringValue="ListHTTPConfigurations"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="ListHTTPConfigurations"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:Encapsulated&gt;
                            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="8ad8d013-cb3d-4ab1-b92d-8ad943148b5f"/&gt;
                            &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: List HTTP Configurations"/&gt;
                            &lt;L7p:Parameters mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="cacheAge"/&gt;
                                    &lt;L7p:value stringValue="${cacheAge}"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="refresh"/&gt;
                                    &lt;L7p:value stringValue="${refresh}"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Parameters&gt;
                        &lt;/L7p:Encapsulated&gt;
                        &lt;L7p:HardcodedResponse&gt;
                            &lt;L7p:Base64ResponseBody stringValue="JHtodHRwQ29uZmlndXJhdGlvbnMuc29ydGVkLm1haW5wYXJ0fQ=="/&gt;
                        &lt;/L7p:HardcodedResponse&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${utility} == 'ListHTTPConfigurations'"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${utility}"/&gt;
                            &lt;L7p:Expression2 stringValue="ListIdentityProviders"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="ListIdentityProviders"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:Encapsulated&gt;
                            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="1ab6158d-33ce-4fa6-a7d8-2b8dc8e31faf"/&gt;
                            &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: List Identity Providers"/&gt;
                            &lt;L7p:Parameters mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="cacheAge"/&gt;
                                    &lt;L7p:value stringValue="${cacheAge}"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="refresh"/&gt;
                                    &lt;L7p:value stringValue="${refresh}"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Parameters&gt;
                        &lt;/L7p:Encapsulated&gt;
                        &lt;L7p:HardcodedResponse&gt;
                            &lt;L7p:Base64ResponseBody stringValue="JHtpZGVudGl0eVByb3ZpZGVycy5zb3J0ZWQubWFpbnBhcnR9"/&gt;
                        &lt;/L7p:HardcodedResponse&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${utility} == 'ListIdentityProviders'"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${utility}"/&gt;
                            &lt;L7p:Expression2 stringValue="ListJDBCConnections"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="ListJDBCConnections"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:Encapsulated&gt;
                            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="f8abecfe-11d6-44e4-be07-16e6080a7e5e"/&gt;
                            &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: List JDBC Connections"/&gt;
                            &lt;L7p:Parameters mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="cacheAge"/&gt;
                                    &lt;L7p:value stringValue="${cacheAge}"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="refresh"/&gt;
                                    &lt;L7p:value stringValue="${refresh}"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Parameters&gt;
                        &lt;/L7p:Encapsulated&gt;
                        &lt;L7p:HardcodedResponse&gt;
                            &lt;L7p:Base64ResponseBody stringValue="JHtqZGJjQ29ubmVjdGlvbnMuc29ydGVkLm1haW5wYXJ0fQ=="/&gt;
                        &lt;/L7p:HardcodedResponse&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${utility} == 'ListJDBCConnections'"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${utility}"/&gt;
                            &lt;L7p:Expression2 stringValue="ListJMSDestinations"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="ListJMSDestinations"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:Encapsulated&gt;
                            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="53bc61d8-f0d0-4024-b09c-61fd5c9ef33e"/&gt;
                            &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: List JMS Destinations"/&gt;
                            &lt;L7p:Parameters mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="cacheAge"/&gt;
                                    &lt;L7p:value stringValue="${cacheAge}"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="refresh"/&gt;
                                    &lt;L7p:value stringValue="${refresh}"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Parameters&gt;
                        &lt;/L7p:Encapsulated&gt;
                        &lt;L7p:HardcodedResponse&gt;
                            &lt;L7p:Base64ResponseBody stringValue="JHtqbXNEZXN0aW5hdGlvbnMuc29ydGVkLm1haW5wYXJ0fQ=="/&gt;
                        &lt;/L7p:HardcodedResponse&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${utility} == 'ListJMSDestinations'"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${utility}"/&gt;
                            &lt;L7p:Expression2 stringValue="ListListenPorts"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="ListListenPorts"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:Encapsulated&gt;
                            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="9bee9837-82a1-4aab-99f4-08b664773ad7"/&gt;
                            &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: List Listen Ports"/&gt;
                            &lt;L7p:Parameters mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="cacheAge"/&gt;
                                    &lt;L7p:value stringValue="${cacheAge}"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="refresh"/&gt;
                                    &lt;L7p:value stringValue="${refresh}"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Parameters&gt;
                        &lt;/L7p:Encapsulated&gt;
                        &lt;L7p:HardcodedResponse&gt;
                            &lt;L7p:Base64ResponseBody stringValue="JHtsaXN0ZW5Qb3J0cy5zb3J0ZWQubWFpbnBhcnR9"/&gt;
                        &lt;/L7p:HardcodedResponse&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${utility} == 'ListListenPorts'"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${utility}"/&gt;
                            &lt;L7p:Expression2 stringValue="ListPolicies"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="ListPolicies"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:Encapsulated&gt;
                            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="da84740e-cee3-47d8-b6f7-0a9eb1fd9638"/&gt;
                            &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: List Policies"/&gt;
                            &lt;L7p:Parameters mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="cacheAge"/&gt;
                                    &lt;L7p:value stringValue="${cacheAge}"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="folderId"/&gt;
                                    &lt;L7p:value stringValue="${request.http.parameter.folderId}"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="policyList.refresh"/&gt;
                                    &lt;L7p:value stringValue="${refresh}"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="refresh"/&gt;
                                    &lt;L7p:value stringValue="${refresh}"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Parameters&gt;
                        &lt;/L7p:Encapsulated&gt;
                        &lt;L7p:HardcodedResponse&gt;
                            &lt;L7p:Base64ResponseBody stringValue="JHtwb2xpY2llcy5zb3J0ZWQubWFpbnBhcnR9"/&gt;
                        &lt;/L7p:HardcodedResponse&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${utility} == 'ListPolicies'"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${utility}"/&gt;
                            &lt;L7p:Expression2 stringValue="ListPolicyBackedServices"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="ListPolicyBackedServices"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:Encapsulated&gt;
                            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="461cb9aa-0d25-4bf0-85d2-7e2d8d895e47"/&gt;
                            &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: List Policy Backed Services"/&gt;
                            &lt;L7p:Parameters mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="cacheAge"/&gt;
                                    &lt;L7p:value stringValue="${cacheAge}"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="refresh"/&gt;
                                    &lt;L7p:value stringValue="${refresh}"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Parameters&gt;
                        &lt;/L7p:Encapsulated&gt;
                        &lt;L7p:HardcodedResponse&gt;
                            &lt;L7p:Base64ResponseBody stringValue="JHtwb2xpY3lCYWNrZWRTZXJ2aWNlcy5zb3J0ZWQubWFpbnBhcnR9"/&gt;
                        &lt;/L7p:HardcodedResponse&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${utility} == 'ListPolicyBackedServices'"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${utility}"/&gt;
                            &lt;L7p:Expression2 stringValue="ListPrivateKeys"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="ListPrivateKeys"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:Encapsulated&gt;
                            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="fbdcb4ad-bf2d-44f7-8aef-c8e1553c13ba"/&gt;
                            &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: List Private Keys"/&gt;
                            &lt;L7p:Parameters mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="cacheAge"/&gt;
                                    &lt;L7p:value stringValue="${cacheAge}"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="refresh"/&gt;
                                    &lt;L7p:value stringValue="${refresh}"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Parameters&gt;
                        &lt;/L7p:Encapsulated&gt;
                        &lt;L7p:HardcodedResponse&gt;
                            &lt;L7p:Base64ResponseBody stringValue="JHtwcml2YXRlS2V5cy5zb3J0ZWQubWFpbnBhcnR9"/&gt;
                        &lt;/L7p:HardcodedResponse&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${utility} == 'ListPrivateKeys'"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${utility}"/&gt;
                            &lt;L7p:Expression2 stringValue="ListScheduledTasks"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="ListScheduledTasks"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:Encapsulated&gt;
                            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="100c1321-8d9f-45b9-80bd-ca1198081e5b"/&gt;
                            &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: List Scheduled Tasks"/&gt;
                            &lt;L7p:Parameters mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="cacheAge"/&gt;
                                    &lt;L7p:value stringValue="${cacheAge}"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="refresh"/&gt;
                                    &lt;L7p:value stringValue="${refresh}"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Parameters&gt;
                        &lt;/L7p:Encapsulated&gt;
                        &lt;L7p:HardcodedResponse&gt;
                            &lt;L7p:Base64ResponseBody stringValue="JHtzY2hlZHVsZWRUYXNrcy5zb3J0ZWQubWFpbnBhcnR9"/&gt;
                        &lt;/L7p:HardcodedResponse&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${utility} == 'ListScheduledTasks'"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${utility}"/&gt;
                            &lt;L7p:Expression2 stringValue="ListSecurePasswords"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="ListSecurePasswords"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:Encapsulated&gt;
                            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="eeb96501-f75c-4078-bcf7-98bc2c52bfe8"/&gt;
                            &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: List Secure Passwords"/&gt;
                            &lt;L7p:Parameters mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="cacheAge"/&gt;
                                    &lt;L7p:value stringValue="${cacheAge}"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="refresh"/&gt;
                                    &lt;L7p:value stringValue="${refresh}"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Parameters&gt;
                        &lt;/L7p:Encapsulated&gt;
                        &lt;L7p:HardcodedResponse&gt;
                            &lt;L7p:Base64ResponseBody stringValue="JHtzZWN1cmVQYXNzd29yZHMuc29ydGVkLm1haW5wYXJ0fQ=="/&gt;
                        &lt;/L7p:HardcodedResponse&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${utility} == 'ListSecurePasswords'"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${utility}"/&gt;
                            &lt;L7p:Expression2 stringValue="ListServices"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="ListServices"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:Encapsulated&gt;
                            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="6fcf3e6c-eac9-4b2b-ac49-aa5fb2ff801f"/&gt;
                            &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: List Services"/&gt;
                            &lt;L7p:Parameters mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="cacheAge"/&gt;
                                    &lt;L7p:value stringValue="${cacheAge}"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="folderId"/&gt;
                                    &lt;L7p:value stringValue="${request.http.parameter.folderId}"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="refresh"/&gt;
                                    &lt;L7p:value stringValue="${refresh}"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="serviceList.refresh"/&gt;
                                    &lt;L7p:value stringValue="${refresh}"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Parameters&gt;
                        &lt;/L7p:Encapsulated&gt;
                        &lt;L7p:HardcodedResponse&gt;
                            &lt;L7p:Base64ResponseBody stringValue="JHtzZXJ2aWNlcy5zb3J0ZWQubWFpbnBhcnR9"/&gt;
                        &lt;/L7p:HardcodedResponse&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${utility} == 'ListServices'"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${utility}"/&gt;
                            &lt;L7p:Expression2 stringValue="ListSiteMinderConfigurations"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="ListSiteMinderConfigurations"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:Encapsulated&gt;
                            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="779a8f46-fcef-4739-b6c7-95eea2a160ff"/&gt;
                            &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: List SiteMinder Configurations"/&gt;
                            &lt;L7p:Parameters mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="cacheAge"/&gt;
                                    &lt;L7p:value stringValue="${cacheAge}"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="refresh"/&gt;
                                    &lt;L7p:value stringValue="${refresh}"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Parameters&gt;
                        &lt;/L7p:Encapsulated&gt;
                        &lt;L7p:HardcodedResponse&gt;
                            &lt;L7p:Base64ResponseBody stringValue="JHtzaXRlbWluZGVyQ29uZmlndXJhdGlvbnMuc29ydGVkLm1haW5wYXJ0fQ=="/&gt;
                        &lt;/L7p:HardcodedResponse&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${utility} == 'ListSiteMinderConfigurations'"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${utility}"/&gt;
                            &lt;L7p:Expression2 stringValue="ListTrustedCertificates"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="ListTrustedCertificates"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:Encapsulated&gt;
                            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="1feebe6b-c754-4bdc-834b-c6f3065d0216"/&gt;
                            &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: List Trusted Certificates"/&gt;
                            &lt;L7p:Parameters mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="cacheAge"/&gt;
                                    &lt;L7p:value stringValue="${cacheAge}"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="refresh"/&gt;
                                    &lt;L7p:value stringValue="${refresh}"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Parameters&gt;
                        &lt;/L7p:Encapsulated&gt;
                        &lt;L7p:HardcodedResponse&gt;
                            &lt;L7p:Base64ResponseBody stringValue="JHt0cnVzdGVkQ2VydGlmaWNhdGVzLnNvcnRlZC5tYWlucGFydH0="/&gt;
                        &lt;/L7p:HardcodedResponse&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${utility} == 'ListTrustedCertificates'"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${utility}"/&gt;
                            &lt;L7p:Expression2 stringValue="ListUsers"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="ListUsers"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:Encapsulated&gt;
                            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="005d518f-604e-4c02-b889-85c2607e46cc"/&gt;
                            &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: List Users"/&gt;
                            &lt;L7p:Parameters mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="cacheAge"/&gt;
                                    &lt;L7p:value stringValue="${cacheAge}"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="identityProviderIds"/&gt;
                                    &lt;L7p:value stringValue="${request.http.parameter.identityProviderIds}"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="refresh"/&gt;
                                    &lt;L7p:value stringValue="${refresh}"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Parameters&gt;
                        &lt;/L7p:Encapsulated&gt;
                        &lt;L7p:HardcodedResponse&gt;
                            &lt;L7p:Base64ResponseBody stringValue="JHt1c2Vycy5zb3J0ZWQubWFpbnBhcnR9"/&gt;
                        &lt;/L7p:HardcodedResponse&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${utility} == 'ListUsers'"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${utility}"/&gt;
                            &lt;L7p:Expression2 stringValue="GetAllPolicyXML"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="GetAllPolicyXML"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:Encapsulated&gt;
                            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="420909da-0e72-4996-a6ed-cf3c21b8bc59"/&gt;
                            &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Get All Policy XML"/&gt;
                            &lt;L7p:Parameters mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="cacheAge"/&gt;
                                    &lt;L7p:value stringValue="${cacheAge}"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="refresh"/&gt;
                                    &lt;L7p:value stringValue="${refresh}"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Parameters&gt;
                        &lt;/L7p:Encapsulated&gt;
                        &lt;L7p:HardcodedResponse&gt;
                            &lt;L7p:Base64ResponseBody stringValue="JHthbGxQb2xpY3lYTUwubWFpbnBhcnR9"/&gt;
                        &lt;/L7p:HardcodedResponse&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${utility} == 'GetAllPolicyXML'"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Handle various entries"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// ${loggedIn} == true"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${loggedIn}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="boolean"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:RightValue stringValue="false"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${logout}"/&gt;
                            &lt;L7p:Operator operatorNull="null"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="boolean"/&gt;
                                &lt;/L7p:item&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="true"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:AuditDetailAssertion&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:Detail stringValue="==&gt; Logging user out"/&gt;
                            &lt;L7p:Level stringValue="FINE"/&gt;
                        &lt;/L7p:AuditDetailAssertion&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue=""/&gt;
                            &lt;L7p:DataType variableDataType="dateTime"/&gt;
                            &lt;L7p:DateOffsetExpression stringValue="-1"/&gt;
                            &lt;L7p:DateOffsetField intValue="5"/&gt;
                            &lt;L7p:VariableToSet stringValue="yesterday"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:ManageCookie&gt;
                            &lt;L7p:CookieAttributes mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="name"/&gt;
                                    &lt;L7p:value nameValuePair="included"&gt;
                                    &lt;L7p:Key stringValue="name"/&gt;
                                    &lt;L7p:Value stringValue="sessionKey"/&gt;
                                    &lt;/L7p:value&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="max-age"/&gt;
                                    &lt;L7p:value nameValuePair="included"&gt;
                                    &lt;L7p:Key stringValue="max-age"/&gt;
                                    &lt;L7p:Value stringValue="0"/&gt;
                                    &lt;/L7p:value&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="httpOnly"/&gt;
                                    &lt;L7p:value nameValuePair="included"&gt;
                                    &lt;L7p:Key stringValue="httpOnly"/&gt;
                                    &lt;L7p:Value stringValue="true"/&gt;
                                    &lt;/L7p:value&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="secure"/&gt;
                                    &lt;L7p:value nameValuePair="included"&gt;
                                    &lt;L7p:Key stringValue="secure"/&gt;
                                    &lt;L7p:Value stringValue="true"/&gt;
                                    &lt;/L7p:value&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="value"/&gt;
                                    &lt;L7p:value nameValuePair="included"&gt;
                                    &lt;L7p:Key stringValue="value"/&gt;
                                    &lt;L7p:Value stringValue="NULL"/&gt;
                                    &lt;/L7p:value&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:CookieAttributes&gt;
                            &lt;L7p:Operation operation="ADD_OR_REPLACE"/&gt;
                            &lt;L7p:Target target="RESPONSE"/&gt;
                        &lt;/L7p:ManageCookie&gt;
                        &lt;L7p:CacheStorage&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Remove from cache by setting TTL to 0"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:CacheEntryKey stringValue="${cookie.sessionKey}"/&gt;
                            &lt;L7p:CacheId stringValue="loginCache"/&gt;
                            &lt;L7p:MaxEntries stringValue="25"/&gt;
                            &lt;L7p:MaxEntryAgeSeconds stringValue="0"/&gt;
                            &lt;L7p:MaxEntrySizeBytes stringValue="1000"/&gt;
                            &lt;L7p:OtherTargetMessageVariable stringValue="sessionDetail"/&gt;
                            &lt;L7p:Target target="OTHER"/&gt;
                        &lt;/L7p:CacheStorage&gt;
                        &lt;L7p:HardcodedResponse&gt;
                            &lt;L7p:Base64ResponseBody stringValue="JHtodG1sLnRvcH0KPHA+JHtmb3JtLm1lc3NhZ2V9PC9wPgoKPHA+PGEgaHJlZj0iJHtyZXF1ZXN0LnVybC5wYXRofSI+Q29udGludWU8L3A+CiR7aHRtbC5ib3R0b219"/&gt;
                            &lt;L7p:ResponseContentType stringValue="text/html; charset=UTF-8"/&gt;
                            &lt;L7p:ResponseStatus stringValue="302"/&gt;
                        &lt;/L7p:HardcodedResponse&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Logout"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:AuditDetailAssertion&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:Detail stringValue="==&gt; Not authenticated, returning login form"/&gt;
                            &lt;L7p:Level stringValue="FINE"/&gt;
                        &lt;/L7p:AuditDetailAssertion&gt;
                        &lt;L7p:HardcodedResponse&gt;
                            &lt;L7p:Base64ResponseBody stringValue="JHtodG1sLnRvcH0KCiAgICA8cD4ke2Zvcm0ubWVzc2FnZX08L3A+CgogICAgPHA+UGxlYXNlIHByb3ZpZGUgUG9saWN5IE1hbmFnZXIgYWRtaW5pc3RyYXRvciBjcmVkZW50aWFsczo8L3A+CiAgICA8Zm9ybSBtZXRob2Q9IlBPU1QiPgogICAgPHA+VXNlcm5hbWU6IDxpbnB1dCBuYW1lPSJ1c2VybmFtZSIgdHlwZT0idGV4dCIvPjxici8+CiAgICBQYXNzd29yZDogPGlucHV0IG5hbWU9InBhc3N3b3JkIiB0eXBlPSJwYXNzd29yZCIvPjxici8+CiAgICA8aW5wdXQgdHlwZT0ic3VibWl0IiB2YWx1ZT0iQ29udGludWUiLz48L3A+CiAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJhY3Rpb24iIHZhbHVlPSJsb2dpbiIvPgogICAgPC9mb3JtPgoKJHtodG1sLmJvdHRvbX0="/&gt;
                            &lt;L7p:ResponseContentType stringValue="text/html; charset=UTF-8"/&gt;
                        &lt;/L7p:HardcodedResponse&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Failed or new"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Handle logout vs failed or new login"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// ${loggedIn} == false"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Do processing if ${loggedIn} == true else return login form"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
                        </l7:ResourceSet>
                    </l7:Resources>
                </l7:Service>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>API Gateway Cluster Wide Property Manager</l7:Name>
            <l7:Id>eab176f668caa14ac738988624339c80</l7:Id>
            <l7:Type>SERVICE</l7:Type>
            <l7:TimeStamp>2022-04-29T11:42:05.539-07:00</l7:TimeStamp>
            <l7:Resource>
                <l7:Service id="eab176f668caa14ac738988624339c80" version="1">
                    <l7:ServiceDetail folderId="7215d076e3f7201974e2be3edf13f52e" id="eab176f668caa14ac738988624339c80" version="1">
                        <l7:Name>API Gateway Cluster Wide Property Manager</l7:Name>
                        <l7:Enabled>true</l7:Enabled>
                        <l7:ServiceMappings>
                            <l7:HttpMapping>
                                <l7:UrlPattern>/apigw/cwpManager</l7:UrlPattern>
                                <l7:Verbs>
                                    <l7:Verb>GET</l7:Verb>
                                    <l7:Verb>POST</l7:Verb>
                                    <l7:Verb>PUT</l7:Verb>
                                    <l7:Verb>DELETE</l7:Verb>
                                </l7:Verbs>
                            </l7:HttpMapping>
                        </l7:ServiceMappings>
                        <l7:Properties>
                            <l7:Property key="internal">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                            <l7:Property key="policyRevision">
                                <l7:LongValue>92</l7:LongValue>
                            </l7:Property>
                            <l7:Property key="soap">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                            <l7:Property key="tracingEnabled">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                            <l7:Property key="wssProcessingEnabled">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                        </l7:Properties>
                    </l7:ServiceDetail>
                    <l7:Resources>
                        <l7:ResourceSet tag="policy">
                            <l7:Resource type="policy" version="91">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**************************************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** Service to manage cluster-wide propertiies in the Gateway"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** "/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="** v1.0.0 - Jay MacDonald - 20220222 - Initial Version per Aran White's utility"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="**************************************************************************************************************"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:AuditAssertion/&gt;
        &lt;L7p:Encapsulated&gt;
            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="4bd10104-a43c-4ecf-ae4d-b95e312cad4b"/&gt;
            &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Form and Session Authentication"/&gt;
            &lt;L7p:Parameters mapValue="included"&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="sessionTTL"/&gt;
                    &lt;L7p:value stringValue="1800"/&gt;
                &lt;/L7p:entry&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="verifyAdmin"/&gt;
                    &lt;L7p:value stringValue="true"/&gt;
                &lt;/L7p:entry&gt;
            &lt;/L7p:Parameters&gt;
        &lt;/L7p:Encapsulated&gt;
        &lt;L7p:Encapsulated&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// v1.0.0"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="43cbc673-f658-4e98-882d-111e752794b1"/&gt;
            &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Set Web Page Wrappers"/&gt;
            &lt;L7p:Parameters mapValue="included"&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="utility.name"/&gt;
                    &lt;L7p:value stringValue="API Gateway Cluster Wide Property Manager"/&gt;
                &lt;/L7p:entry&gt;
                &lt;L7p:entry&gt;
                    &lt;L7p:key stringValue="utility.version"/&gt;
                    &lt;L7p:value stringValue="1.0.0"/&gt;
                &lt;/L7p:entry&gt;
            &lt;/L7p:Parameters&gt;
        &lt;/L7p:Encapsulated&gt;
        &lt;wsp:All wsp:Usage="Required"&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="VW5rbm93biBlcnJvciBmb3VuZA=="/&gt;
                &lt;L7p:VariableToSet stringValue="error.message"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="NTAw"/&gt;
                &lt;L7p:VariableToSet stringValue="error.status"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;L7p:CustomizeErrorResponse&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// text/html"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:Content stringValueReference="inline"&gt;&lt;![CDATA[${html.top}

  &lt;h1&gt;Error&lt;/h1&gt;

  &lt;p&gt;${error.message}&lt;/p&gt;

${html.bottom}]]&gt;&lt;/L7p:Content&gt;
                &lt;L7p:ContentType stringValue="text/html; charset=UTF-8"/&gt;
                &lt;L7p:ExtraHeaders nameValuePairArray="included"/&gt;
                &lt;L7p:HttpStatus stringValue="${error.status}"/&gt;
            &lt;/L7p:CustomizeErrorResponse&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Configure error response"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:All&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${loggedIn}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="boolean"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:RightValue stringValue="true"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:Expression1 stringValue="${request.http.parameter.action}"/&gt;
                            &lt;L7p:Expression2 stringValue="Create"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:RightValue stringValue="Create"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:AuditDetailAssertion&gt;
                            &lt;L7p:Detail stringValue="===&gt; Creating property ${request.http.parameter.newName} = ${request.http.parameter.newValue}"/&gt;
                            &lt;L7p:Level stringValue="FINE"/&gt;
                        &lt;/L7p:AuditDetailAssertion&gt;
                        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                            &lt;L7p:HtmlFormDataAssertion&gt;
                                &lt;L7p:AllowGet booleanValue="true"/&gt;
                                &lt;L7p:AllowPost booleanValue="true"/&gt;
                                &lt;L7p:FieldSpecs htmlFormFieldSpecArray="included"&gt;
                                    &lt;L7p:item htmlFormFieldSpec="included"&gt;
                                    &lt;L7p:AllowEmpty boxedBooleanValue="false"/&gt;
                                    &lt;L7p:DataType fieldDataType="string"/&gt;
                                    &lt;L7p:MaxOccurs intValue="1"/&gt;
                                    &lt;L7p:MinOccurs intValue="1"/&gt;
                                    &lt;L7p:Name stringValue="newName"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item htmlFormFieldSpec="included"&gt;
                                    &lt;L7p:AllowEmpty boxedBooleanValue="true"/&gt;
                                    &lt;L7p:DataType fieldDataType="string"/&gt;
                                    &lt;L7p:MaxOccurs intValue="1"/&gt;
                                    &lt;L7p:MinOccurs intValue="1"/&gt;
                                    &lt;L7p:Name stringValue="newValue"/&gt;
                                    &lt;/L7p:item&gt;
                                &lt;/L7p:FieldSpecs&gt;
                            &lt;/L7p:HtmlFormDataAssertion&gt;
                            &lt;wsp:All wsp:Usage="Required"&gt;
                                &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="RmFpbGVkIHRvIGNyZWF0ZSBjbHVzdGVyIHdpZGUgcHJvcGVydHkuIFJlYXNvbjogQmFkIGlucHV0"/&gt;
                                    &lt;L7p:VariableToSet stringValue="message"/&gt;
                                &lt;/L7p:SetVariable&gt;
                                &lt;L7p:FalseAssertion/&gt;
                                &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Fail with Bad Input message"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt;
                            &lt;/wsp:All&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Validate form else fail with Bad Input message"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:OneOrMore&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pg0KPGw3OkNsdXN0ZXJQcm9wZXJ0eSB4bWxuczpsNz0iaHR0cDovL25zLmw3dGVjaC5jb20vMjAxMC8wNC9nYXRld2F5LW1hbmFnZW1lbnQiPg0KICA8bDc6TmFtZT4ke3JlcXVlc3QuaHR0cC5wYXJhbWV0ZXIubmV3TmFtZX08L2w3Ok5hbWU+DQogIDxsNzpWYWx1ZT4ke3JlcXVlc3QuaHR0cC5wYXJhbWV0ZXIubmV3VmFsdWV9PC9sNzpWYWx1ZT4NCjwvbDc6Q2x1c3RlclByb3BlcnR5Pg=="/&gt;
                            &lt;L7p:VariableToSet stringValue="createMessage"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:Encapsulated&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// POST clusterProperties"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="c8a5a0d5-1ae2-4144-b538-5c311efc1560"/&gt;
                            &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Call Restman"/&gt;
                            &lt;L7p:Parameters mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="element"/&gt;
                                    &lt;L7p:value stringValue=""/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="message"/&gt;
                                    &lt;L7p:value stringValue="${createMessage}"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="method"/&gt;
                                    &lt;L7p:value stringValue="POST"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="resource"/&gt;
                                    &lt;L7p:value stringValue="clusterProperties"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Parameters&gt;
                        &lt;/L7p:Encapsulated&gt;
                        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                            &lt;wsp:All wsp:Usage="Required"&gt;
                                &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${restGatewayMan.status}"/&gt;
                                    &lt;L7p:Operator operatorNull="null"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="int"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="201"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt;
                                &lt;L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:VariablePrefix stringValue="name"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/l7:Item/l7:Name"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                &lt;/L7p:ResponseXpathAssertion&gt;
                                &lt;L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:VariablePrefix stringValue="id"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/l7:Item/l7:Id"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                &lt;/L7p:ResponseXpathAssertion&gt;
                                &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="Q3JlYXRlZCBjbHVzdGVyIHdpZGUgcHJvcGVydHkgd2l0aCBpZD0ke2lkLnJlc3VsdH0gKCR7bmFtZS5yZXN1bHR9KQ=="/&gt;
                                    &lt;L7p:VariableToSet stringValue="message"/&gt;
                                &lt;/L7p:SetVariable&gt;
                                &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${restGatewayMan.status} == 201"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt;
                            &lt;/wsp:All&gt;
                            &lt;wsp:All wsp:Usage="Required"&gt;
                                &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${restGatewayMan.status}"/&gt;
                                    &lt;L7p:Operator operatorNull="null"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="int"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="400"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt;
                                &lt;L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:VariablePrefix stringValue="type"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/l7:Error/l7:Type"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                &lt;/L7p:ResponseXpathAssertion&gt;
                                &lt;L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:VariablePrefix stringValue="detail"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/l7:Error/l7:Detail"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                &lt;/L7p:ResponseXpathAssertion&gt;
                                &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="RmFpbGVkIHRvIGNyZWF0ZSBjbHVzdGVyIHdpZGUgcHJvcGVydHkgbmFtZWQgJHtyZXF1ZXN0Lmh0dHAucGFyYW1ldGVyLm5ld05hbWV9LiBSZWFzb246ICR7dHlwZS5yZXN1bHR9IC0gJHtkZXRhaWwucmVzdWx0fQ=="/&gt;
                                    &lt;L7p:VariableToSet stringValue="message"/&gt;
                                &lt;/L7p:SetVariable&gt;
                                &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${restGatewayMan.status} == 400"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt;
                            &lt;/wsp:All&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="RmFpbGVkIHRvIGNyZWF0ZSBjbHVzdGVyIHdpZGUgcHJvcGVydHkgbmFtZWQgIiR7cmVxdWVzdC5odHRwLnBhcmFtZXRlci5uZXdOYW1lfSIuIFJlYXNvbjogdW5rbm93bg=="/&gt;
                                &lt;L7p:VariableToSet stringValue="message"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Check status of Restman call"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:OneOrMore&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Create a new property"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:Expression1 stringValue="${request.http.parameter.action}"/&gt;
                            &lt;L7p:Expression2 stringValue="Update"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:RightValue stringValue="Update"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                            &lt;L7p:HtmlFormDataAssertion&gt;
                                &lt;L7p:AllowGet booleanValue="true"/&gt;
                                &lt;L7p:AllowPost booleanValue="true"/&gt;
                                &lt;L7p:FieldSpecs htmlFormFieldSpecArray="included"&gt;
                                    &lt;L7p:item htmlFormFieldSpec="included"&gt;
                                    &lt;L7p:AllowEmpty boxedBooleanValue="false"/&gt;
                                    &lt;L7p:DataType fieldDataType="string"/&gt;
                                    &lt;L7p:MaxOccurs intValue="1"/&gt;
                                    &lt;L7p:MinOccurs intValue="1"/&gt;
                                    &lt;L7p:Name stringValue="name"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item htmlFormFieldSpec="included"&gt;
                                    &lt;L7p:AllowEmpty boxedBooleanValue="true"/&gt;
                                    &lt;L7p:DataType fieldDataType="string"/&gt;
                                    &lt;L7p:MaxOccurs intValue="1"/&gt;
                                    &lt;L7p:MinOccurs intValue="1"/&gt;
                                    &lt;L7p:Name stringValue="newValue"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item htmlFormFieldSpec="included"&gt;
                                    &lt;L7p:AllowEmpty boxedBooleanValue="false"/&gt;
                                    &lt;L7p:DataType fieldDataType="string"/&gt;
                                    &lt;L7p:MaxOccurs intValue="1"/&gt;
                                    &lt;L7p:MinOccurs intValue="1"/&gt;
                                    &lt;L7p:Name stringValue="id"/&gt;
                                    &lt;/L7p:item&gt;
                                &lt;/L7p:FieldSpecs&gt;
                            &lt;/L7p:HtmlFormDataAssertion&gt;
                            &lt;wsp:All wsp:Usage="Required"&gt;
                                &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="RmFpbGVkIHRvIHVwZGF0ZSBjbHVzdGVyIHdpZGUgcHJvcGVydHkuIFJlYXNvbjogQmFkIGlucHV0"/&gt;
                                    &lt;L7p:VariableToSet stringValue="message"/&gt;
                                &lt;/L7p:SetVariable&gt;
                                &lt;L7p:FalseAssertion/&gt;
                                &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Fail with Bad Input message"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt;
                            &lt;/wsp:All&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Validate form else fail with Bad Input message"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:OneOrMore&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pg0KPGw3OkNsdXN0ZXJQcm9wZXJ0eSBpZD0iJHtyZXF1ZXN0Lmh0dHAucGFyYW1ldGVyLmlkfSIgeG1sbnM6bDc9Imh0dHA6Ly9ucy5sN3RlY2guY29tLzIwMTAvMDQvZ2F0ZXdheS1tYW5hZ2VtZW50Ij4NCiAgPGw3Ok5hbWU+JHtyZXF1ZXN0Lmh0dHAucGFyYW1ldGVyLm5hbWV9PC9sNzpOYW1lPg0KICA8bDc6VmFsdWU+JHtyZXF1ZXN0Lmh0dHAucGFyYW1ldGVyLm5ld1ZhbHVlfTwvbDc6VmFsdWU+DQo8L2w3OkNsdXN0ZXJQcm9wZXJ0eT4="/&gt;
                            &lt;L7p:VariableToSet stringValue="updateMessage"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:Encapsulated&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// PUT clusterProperties/${request.http.parameter.id}"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="c8a5a0d5-1ae2-4144-b538-5c311efc1560"/&gt;
                            &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Call Restman"/&gt;
                            &lt;L7p:Parameters mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="element"/&gt;
                                    &lt;L7p:value stringValue=""/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="message"/&gt;
                                    &lt;L7p:value stringValue="${updateMessage}"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="method"/&gt;
                                    &lt;L7p:value stringValue="PUT"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="resource"/&gt;
                                    &lt;L7p:value stringValue="clusterProperties/${request.http.parameter.id}"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Parameters&gt;
                        &lt;/L7p:Encapsulated&gt;
                        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                            &lt;wsp:All wsp:Usage="Required"&gt;
                                &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${restGatewayMan.status}"/&gt;
                                    &lt;L7p:Operator operatorNull="null"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="int"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="200"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt;
                                &lt;L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:VariablePrefix stringValue="name"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/l7:Item/l7:Name"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                &lt;/L7p:ResponseXpathAssertion&gt;
                                &lt;L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:VariablePrefix stringValue="id"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/l7:Item/l7:Id"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                &lt;/L7p:ResponseXpathAssertion&gt;
                                &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="VXBkYXRlZCBjbHVzdGVyIHdpZGUgcHJvcGVydHkgd2l0aCBpZD0ke2lkLnJlc3VsdH0gKCR7bmFtZS5yZXN1bHR9KQ=="/&gt;
                                    &lt;L7p:VariableToSet stringValue="message"/&gt;
                                &lt;/L7p:SetVariable&gt;
                                &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${restGatewayMan.status} == 200"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt;
                            &lt;/wsp:All&gt;
                            &lt;wsp:All wsp:Usage="Required"&gt;
                                &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${restGatewayMan.status}"/&gt;
                                    &lt;L7p:Operator operatorNull="null"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="int"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="400"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt;
                                &lt;L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:VariablePrefix stringValue="type"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/l7:Error/l7:Type"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                &lt;/L7p:ResponseXpathAssertion&gt;
                                &lt;L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:VariablePrefix stringValue="detail"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/l7:Error/l7:Detail"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                &lt;/L7p:ResponseXpathAssertion&gt;
                                &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="RmFpbGVkIHRvIHVwZGF0ZSBjbHVzdGVyIHdpZGUgcHJvcGVydHkgbmFtZWQgJHtyZXF1ZXN0Lmh0dHAucGFyYW1ldGVyLm5hbWV9LiBSZWFzb246ICR7dHlwZS5yZXN1bHR9IC0gJHtkZXRhaWwucmVzdWx0fQ=="/&gt;
                                    &lt;L7p:VariableToSet stringValue="message"/&gt;
                                &lt;/L7p:SetVariable&gt;
                                &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${restGatewayMan.status} == 400"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt;
                            &lt;/wsp:All&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="RmFpbGVkIHRvIHVwZGF0ZSBjbHVzdGVyIHdpZGUgcHJvcGVydHkgbmFtZWQgIiR7cmVxdWVzdC5odHRwLnBhcmFtZXRlci5uYW1lfSIuIFJlYXNvbjogdW5rbm93bg=="/&gt;
                                &lt;L7p:VariableToSet stringValue="message"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Check status of Restman call"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:OneOrMore&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Update an existing property"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:Expression1 stringValue="${request.http.parameter.action}"/&gt;
                            &lt;L7p:Expression2 stringValue="Delete"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:RightValue stringValue="Delete"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:AuditDetailAssertion&gt;
                            &lt;L7p:Detail stringValue="===&gt; Deleting property ${request.http.parameter.id}"/&gt;
                            &lt;L7p:Level stringValue="FINE"/&gt;
                        &lt;/L7p:AuditDetailAssertion&gt;
                        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                            &lt;L7p:HtmlFormDataAssertion&gt;
                                &lt;L7p:AllowGet booleanValue="true"/&gt;
                                &lt;L7p:AllowPost booleanValue="true"/&gt;
                                &lt;L7p:FieldSpecs htmlFormFieldSpecArray="included"&gt;
                                    &lt;L7p:item htmlFormFieldSpec="included"&gt;
                                    &lt;L7p:AllowEmpty boxedBooleanValue="false"/&gt;
                                    &lt;L7p:DataType fieldDataType="string"/&gt;
                                    &lt;L7p:MaxOccurs intValue="1"/&gt;
                                    &lt;L7p:MinOccurs intValue="1"/&gt;
                                    &lt;L7p:Name stringValue="id"/&gt;
                                    &lt;/L7p:item&gt;
                                &lt;/L7p:FieldSpecs&gt;
                            &lt;/L7p:HtmlFormDataAssertion&gt;
                            &lt;wsp:All wsp:Usage="Required"&gt;
                                &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="RmFpbGVkIHRvIGRlbGV0ZSBjbHVzdGVyIHdpZGUgcHJvcGVydHkuIFJlYXNvbjogQmFkIGlucHV0"/&gt;
                                    &lt;L7p:VariableToSet stringValue="message"/&gt;
                                &lt;/L7p:SetVariable&gt;
                                &lt;L7p:FalseAssertion/&gt;
                                &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Fail with Bad Input message"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt;
                            &lt;/wsp:All&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Validate form else fail with Bad Input message"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:OneOrMore&gt;
                        &lt;L7p:Encapsulated&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// GET clusterProperties/${request.http.parameter.id}"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="c8a5a0d5-1ae2-4144-b538-5c311efc1560"/&gt;
                            &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Call Restman"/&gt;
                            &lt;L7p:Parameters mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="element"/&gt;
                                    &lt;L7p:value stringValue=""/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="message"/&gt;
                                    &lt;L7p:value stringValue=""/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="method"/&gt;
                                    &lt;L7p:value stringValue="GET"/&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="resource"/&gt;
                                    &lt;L7p:value stringValue="clusterProperties/${request.http.parameter.id}"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Parameters&gt;
                        &lt;/L7p:Encapsulated&gt;
                        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                            &lt;wsp:All wsp:Usage="Required"&gt;
                                &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${restGatewayMan.status}"/&gt;
                                    &lt;L7p:Operator operatorNull="null"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="int"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="200"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt;
                                &lt;L7p:ResponseXpathAssertion&gt;
                                    &lt;L7p:VariablePrefix stringValue="name"/&gt;
                                    &lt;L7p:XpathExpression xpathExpressionValue="included"&gt;
                                    &lt;L7p:Expression stringValue="/l7:Item/l7:Resource/l7:ClusterProperty/l7:Name"/&gt;
                                    &lt;L7p:Namespaces mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="s"/&gt;
                                    &lt;L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="l7"/&gt;
                                    &lt;L7p:value stringValue="http://ns.l7tech.com/2010/04/gateway-management"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Namespaces&gt;
                                    &lt;L7p:XpathVersion xpathVersion="XPATH_1_0"/&gt;
                                    &lt;/L7p:XpathExpression&gt;
                                &lt;/L7p:ResponseXpathAssertion&gt;
                                &lt;L7p:Encapsulated&gt;
                                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// DELETE clusterProperties/${request.http.parameter.id}"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                    &lt;/L7p:AssertionComment&gt;
                                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="c8a5a0d5-1ae2-4144-b538-5c311efc1560"/&gt;
                                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Call Restman"/&gt;
                                    &lt;L7p:Parameters mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="element"/&gt;
                                    &lt;L7p:value stringValue=""/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="message"/&gt;
                                    &lt;L7p:value stringValue=""/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="method"/&gt;
                                    &lt;L7p:value stringValue="DELETE"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="resource"/&gt;
                                    &lt;L7p:value stringValue="clusterProperties/${request.http.parameter.id}"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Parameters&gt;
                                &lt;/L7p:Encapsulated&gt;
                                &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${restGatewayMan.status}"/&gt;
                                    &lt;L7p:Operator operatorNull="null"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="int"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="204"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt;
                                &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="RGVsZXRlZCBjbHVzdGVyIHdpZGUgcHJvcGVydHkgd2l0aCBpZD0ke3JlcXVlc3QuaHR0cC5wYXJhbWV0ZXIuaWR9ICgke25hbWUucmVzdWx0fSk="/&gt;
                                    &lt;L7p:VariableToSet stringValue="message"/&gt;
                                &lt;/L7p:SetVariable&gt;
                                &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${restGatewayMan.status} == 200"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt;
                            &lt;/wsp:All&gt;
                            &lt;wsp:All wsp:Usage="Required"&gt;
                                &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${restGatewayMan.status}"/&gt;
                                    &lt;L7p:Operator operatorNull="null"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="int"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="404"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt;
                                &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="RmFpbGVkIHRvIGRlbGV0ZSBjbHVzdGVyIHdpZGUgcHJvcGVydHkgd2l0aCBpZD0ke3JlcXVlc3QuaHR0cC5wYXJhbWV0ZXIuaWR9LiBSZWFzb246IE5vdCBmb3VuZA=="/&gt;
                                    &lt;L7p:VariableToSet stringValue="message"/&gt;
                                &lt;/L7p:SetVariable&gt;
                                &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// ${restGatewayMan.status} == 404"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt;
                            &lt;/wsp:All&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="RmFpbGVkIHRvIGRlbGV0ZSBjbHVzdGVyIHdpZGUgcHJvcGVydHkgd2l0aCBpZD0ke3JlcXVlc3QuaHR0cC5wYXJhbWV0ZXIuaWR9LiBSZWFzb246IHVua25vd24="/&gt;
                                &lt;L7p:VariableToSet stringValue="message"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Check status of Restman call"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:OneOrMore&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Delete a property"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:TrueAssertion/&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Handle action, never fail"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:Encapsulated&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// GET clusterProperties"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                    &lt;L7p:EncapsulatedAssertionConfigGuid stringValue="c8a5a0d5-1ae2-4144-b538-5c311efc1560"/&gt;
                    &lt;L7p:EncapsulatedAssertionConfigName stringValue="Utility: Call Restman"/&gt;
                    &lt;L7p:Parameters mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="element"/&gt;
                            &lt;L7p:value stringValue=""/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="message"/&gt;
                            &lt;L7p:value stringValue=""/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="method"/&gt;
                            &lt;L7p:value stringValue="GET"/&gt;
                        &lt;/L7p:entry&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="resource"/&gt;
                            &lt;L7p:value stringValue="clusterProperties"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Parameters&gt;
                &lt;/L7p:Encapsulated&gt;
                &lt;L7p:XslTransformation&gt;
                    &lt;L7p:Direction intValue="2"/&gt;
                    &lt;L7p:ResourceInfo staticResourceInfo="included"&gt;
                        &lt;L7p:Document stringValueReference="inline"&gt;&lt;![CDATA[&lt;xsl:stylesheet version="1.0" xmlns:l7="http://ns.l7tech.com/2010/04/gateway-management" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;
  
  &lt;xsl:output indent="yes" media-type="text/html" method="html" omit-xml-declaration="yes"/&gt;

  &lt;xsl:template match="/"&gt;
      &lt;xsl:apply-templates/&gt;
  &lt;/xsl:template&gt;

  &lt;xsl:template match="/l7:List"&gt;        
  &lt;table class="table-striped table-hover"&gt;
    &lt;tr style="background-color: rgb(216,216,216);"&gt;
      &lt;td&gt;Property Name&lt;/td&gt;
      &lt;td&gt;Property Value&lt;/td&gt;
      &lt;td&gt;New Value&lt;/td&gt;
      &lt;td/&gt;&lt;td/&gt;
    &lt;/tr&gt;
  &lt;xsl:for-each select="l7:Item"&gt;
    &lt;xsl:variable name="id"&gt;&lt;xsl:value-of select="./l7:Id"/&gt;&lt;/xsl:variable&gt;
      &lt;tr&gt;
        &lt;form method="GET"&gt;
        &lt;td&gt;&lt;xsl:value-of select="./l7:Name"/&gt;&lt;/td&gt;
        &lt;td&gt;&lt;xsl:value-of select="./l7:Resource/l7:ClusterProperty/l7:Value"/&gt;&lt;/td&gt;
        &lt;td&gt;&lt;input name="newValue" size="15" type="text"/&gt;&lt;/td&gt;
        &lt;td&gt;&lt;input name="action" onClick="return confirm('Are you sure you want to UPDATE this property?')" type="submit" value="Update"/&gt;&lt;/td&gt;
        &lt;td&gt;&lt;input name="action" onClick="return confirm('Are you sure you want to DELETE this property?')" type="submit" value="Delete"/&gt;&lt;/td&gt;  
        &lt;input hidden="true" name="id" type="text"&gt;
        &lt;xsl:attribute name="value"&gt;
          &lt;xsl:value-of select="./l7:Id"/&gt;
        &lt;/xsl:attribute&gt;
        &lt;/input&gt;
        &lt;input hidden="true" name="name" type="text"&gt;
        &lt;xsl:attribute name="value"&gt;
          &lt;xsl:value-of select="./l7:Name"/&gt;
        &lt;/xsl:attribute&gt;
        &lt;/input&gt;
        &lt;/form&gt;
      &lt;/tr&gt;   
  &lt;/xsl:for-each&gt;
    &lt;form method="GET"&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;input name="newName" size="15" type="text"/&gt;&lt;/td&gt;
      &lt;td&gt;&lt;input name="newValue" size="15" type="text"/&gt;&lt;/td&gt;
      &lt;td&gt;&lt;input name="action" type="submit" value="Create"/&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;/form&gt;
  &lt;/table&gt;
  &lt;/xsl:template&gt;
    
&lt;/xsl:stylesheet&gt;]]&gt;&lt;/L7p:Document&gt;
                    &lt;/L7p:ResourceInfo&gt;
                    &lt;L7p:Target target="RESPONSE"/&gt;
                    &lt;L7p:TransformName stringValue=""/&gt;
                    &lt;L7p:XsltVersion stringValue="1.0"/&gt;
                &lt;/L7p:XslTransformation&gt;
                &lt;L7p:HardcodedResponse&gt;
                    &lt;L7p:Base64ResponseBody stringValue="JHtodG1sLnRvcH0KPHA+JHttZXNzYWdlfTwvcD4KJHtyZXNwb25zZS5tYWlucGFydH0KJHtodG1sLmJvdHRvbX0K"/&gt;
                    &lt;L7p:ResponseContentType stringValue="text/html; charset=UTF-8"/&gt;
                &lt;/L7p:HardcodedResponse&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// ${loggedIn} == true"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${loggedIn}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="boolean"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:RightValue stringValue="false"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${logout}"/&gt;
                            &lt;L7p:Operator operatorNull="null"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="boolean"/&gt;
                                &lt;/L7p:item&gt;
                                &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:RightValue stringValue="true"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:AuditDetailAssertion&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:Detail stringValue="==&gt; Logging user out"/&gt;
                            &lt;L7p:Level stringValue="FINE"/&gt;
                        &lt;/L7p:AuditDetailAssertion&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue=""/&gt;
                            &lt;L7p:DataType variableDataType="dateTime"/&gt;
                            &lt;L7p:DateOffsetExpression stringValue="-1"/&gt;
                            &lt;L7p:DateOffsetField intValue="5"/&gt;
                            &lt;L7p:VariableToSet stringValue="yesterday"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:ManageCookie&gt;
                            &lt;L7p:CookieAttributes mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="name"/&gt;
                                    &lt;L7p:value nameValuePair="included"&gt;
                                    &lt;L7p:Key stringValue="name"/&gt;
                                    &lt;L7p:Value stringValue="sessionKey"/&gt;
                                    &lt;/L7p:value&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="max-age"/&gt;
                                    &lt;L7p:value nameValuePair="included"&gt;
                                    &lt;L7p:Key stringValue="max-age"/&gt;
                                    &lt;L7p:Value stringValue="0"/&gt;
                                    &lt;/L7p:value&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="httpOnly"/&gt;
                                    &lt;L7p:value nameValuePair="included"&gt;
                                    &lt;L7p:Key stringValue="httpOnly"/&gt;
                                    &lt;L7p:Value stringValue="true"/&gt;
                                    &lt;/L7p:value&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="secure"/&gt;
                                    &lt;L7p:value nameValuePair="included"&gt;
                                    &lt;L7p:Key stringValue="secure"/&gt;
                                    &lt;L7p:Value stringValue="true"/&gt;
                                    &lt;/L7p:value&gt;
                                &lt;/L7p:entry&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="value"/&gt;
                                    &lt;L7p:value nameValuePair="included"&gt;
                                    &lt;L7p:Key stringValue="value"/&gt;
                                    &lt;L7p:Value stringValue="NULL"/&gt;
                                    &lt;/L7p:value&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:CookieAttributes&gt;
                            &lt;L7p:Operation operation="ADD_OR_REPLACE"/&gt;
                            &lt;L7p:Target target="RESPONSE"/&gt;
                        &lt;/L7p:ManageCookie&gt;
                        &lt;L7p:CacheStorage&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Remove from cache by setting TTL to 0"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:CacheEntryKey stringValue="${cookie.sessionKey}"/&gt;
                            &lt;L7p:CacheId stringValue="loginCache"/&gt;
                            &lt;L7p:MaxEntries stringValue="25"/&gt;
                            &lt;L7p:MaxEntryAgeSeconds stringValue="0"/&gt;
                            &lt;L7p:MaxEntrySizeBytes stringValue="1000"/&gt;
                            &lt;L7p:OtherTargetMessageVariable stringValue="sessionDetail"/&gt;
                            &lt;L7p:Target target="OTHER"/&gt;
                        &lt;/L7p:CacheStorage&gt;
                        &lt;L7p:AddHeader&gt;
                            &lt;L7p:HeaderName stringValue="Location"/&gt;
                            &lt;L7p:HeaderValue stringValue="${request.url.path}"/&gt;
                            &lt;L7p:Target target="RESPONSE"/&gt;
                        &lt;/L7p:AddHeader&gt;
                        &lt;L7p:HardcodedResponse&gt;
                            &lt;L7p:Base64ResponseBody stringValue="JHtodG1sLnRvcH0KPHA+JHtmb3JtLm1lc3NhZ2V9PC9wPgoKPHA+PGEgaHJlZj0iJHtyZXF1ZXN0LnVybC5wYXRofSI+Q29udGludWU8L3A+CiR7aHRtbC5ib3R0b219"/&gt;
                            &lt;L7p:ResponseContentType stringValue="text/html; charset=UTF-8"/&gt;
                            &lt;L7p:ResponseStatus stringValue="302"/&gt;
                        &lt;/L7p:HardcodedResponse&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Logout"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:AuditDetailAssertion&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// FINE"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                            &lt;L7p:Detail stringValue="==&gt; Not authenticated, returning login form"/&gt;
                            &lt;L7p:Level stringValue="FINE"/&gt;
                        &lt;/L7p:AuditDetailAssertion&gt;
                        &lt;L7p:HardcodedResponse&gt;
                            &lt;L7p:Base64ResponseBody stringValue="JHtodG1sLnRvcH0KICAgIDxwPiR7Zm9ybS5tZXNzYWdlfTwvcD4KCiAgICA8cD5QbGVhc2UgcHJvdmlkZSBQb2xpY3kgTWFuYWdlciBhZG1pbmlzdHJhdG9yIGNyZWRlbnRpYWxzOjwvcD4KICAgIDxmb3JtIG1ldGhvZD0iUE9TVCI+CiAgICA8cD5Vc2VybmFtZTogPGlucHV0IG5hbWU9InVzZXJuYW1lIiB0eXBlPSJ0ZXh0Ii8+PGJyLz4KICAgIFBhc3N3b3JkOiA8aW5wdXQgbmFtZT0icGFzc3dvcmQiIHR5cGU9InBhc3N3b3JkIi8+PGJyLz4KICAgIDxpbnB1dCB0eXBlPSJzdWJtaXQiIHZhbHVlPSJDb250aW51ZSIvPjwvcD4KICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9ImFjdGlvbiIgdmFsdWU9ImxvZ2luIi8+CiAgICA8L2Zvcm0+Cgoke2h0bWwuYm90dG9tfQ=="/&gt;
                            &lt;L7p:ResponseContentType stringValue="text/html; charset=UTF-8"/&gt;
                        &lt;/L7p:HardcodedResponse&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="// Failed or new"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="// Handle logout vs failed or new login"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:assertionComment&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="// ${loggedIn} == false"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:assertionComment&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="// Do processing if ${loggedIn} == true else return login form"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/wsp:OneOrMore&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
                        </l7:ResourceSet>
                    </l7:Resources>
                </l7:Service>
            </l7:Resource>
        </l7:Item>
    </l7:References>
    <l7:Mappings>
        <l7:Mapping action="NewOrExisting" srcId="0000000000000000ffffffffffffec76" srcUri="https://ssg100.l7tech.com:8443/restman/1.0/folders/0000000000000000ffffffffffffec76" type="FOLDER">
            <l7:Properties>
                <l7:Property key="FailOnNew">
                    <l7:BooleanValue>true</l7:BooleanValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrUpdate" srcId="7215d076e3f7201974e2be3edf13f52e" srcUri="https://ssg100.l7tech.com:8443/restman/1.0/folders/7215d076e3f7201974e2be3edf13f52e" type="FOLDER"/>
        <l7:Mapping action="NewOrUpdate" srcId="c4706d99077459bed7ca5ef6c9e62ecb" srcUri="https://ssg100.l7tech.com:8443/restman/1.0/folders/c4706d99077459bed7ca5ef6c9e62ecb" type="FOLDER"/>
        <l7:Mapping action="NewOrUpdate" srcId="c4706d99077459bed7ca5ef6c9e4326b" srcUri="https://ssg100.l7tech.com:8443/restman/1.0/policies/c4706d99077459bed7ca5ef6c9e4326b" type="POLICY"/>
        <l7:Mapping action="NewOrUpdate" srcId="c4706d99077459bed7ca5ef6c9e43323" srcUri="https://ssg100.l7tech.com:8443/restman/1.0/encapsulatedAssertions/c4706d99077459bed7ca5ef6c9e43323" type="ENCAPSULATED_ASSERTION"/>
        <l7:Mapping action="NewOrUpdate" srcId="3c21f93d84b26244a446414e9774ecf3" srcUri="https://ssg100.l7tech.com:8443/restman/1.0/policies/3c21f93d84b26244a446414e9774ecf3" type="POLICY"/>
        <l7:Mapping action="NewOrUpdate" srcId="3c21f93d84b26244a446414e97757263" srcUri="https://ssg100.l7tech.com:8443/restman/1.0/policies/3c21f93d84b26244a446414e97757263" type="POLICY"/>
        <l7:Mapping action="NewOrUpdate" srcId="3c21f93d84b26244a446414e97757a31" srcUri="https://ssg100.l7tech.com:8443/restman/1.0/policies/3c21f93d84b26244a446414e97757a31" type="POLICY"/>
        <l7:Mapping action="NewOrUpdate" srcId="3c21f93d84b26244a446414e9775919d" srcUri="https://ssg100.l7tech.com:8443/restman/1.0/policies/3c21f93d84b26244a446414e9775919d" type="POLICY"/>
        <l7:Mapping action="NewOrUpdate" srcId="c4706d99077459bed7ca5ef6c9e532e8" srcUri="https://ssg100.l7tech.com:8443/restman/1.0/policies/c4706d99077459bed7ca5ef6c9e532e8" type="POLICY"/>
        <l7:Mapping action="NewOrUpdate" srcId="c4706d99077459bed7ca5ef6c9e53443" srcUri="https://ssg100.l7tech.com:8443/restman/1.0/encapsulatedAssertions/c4706d99077459bed7ca5ef6c9e53443" type="ENCAPSULATED_ASSERTION"/>
        <l7:Mapping action="NewOrUpdate" srcId="7215d076e3f7201974e2be3edf13f575" srcUri="https://ssg100.l7tech.com:8443/restman/1.0/policies/7215d076e3f7201974e2be3edf13f575" type="POLICY"/>
        <l7:Mapping action="NewOrUpdate" srcId="7215d076e3f7201974e2be3edf147215" srcUri="https://ssg100.l7tech.com:8443/restman/1.0/encapsulatedAssertions/7215d076e3f7201974e2be3edf147215" type="ENCAPSULATED_ASSERTION"/>
        <l7:Mapping action="NewOrUpdate" srcId="7215d076e3f7201974e2be3edf155afc" srcUri="https://ssg100.l7tech.com:8443/restman/1.0/policies/7215d076e3f7201974e2be3edf155afc" type="POLICY"/>
        <l7:Mapping action="NewOrUpdate" srcId="7215d076e3f7201974e2be3edf155c14" srcUri="https://ssg100.l7tech.com:8443/restman/1.0/encapsulatedAssertions/7215d076e3f7201974e2be3edf155c14" type="ENCAPSULATED_ASSERTION"/>
        <l7:Mapping action="NewOrUpdate" srcId="7215d076e3f7201974e2be3edf2288aa" srcUri="https://ssg100.l7tech.com:8443/restman/1.0/policies/7215d076e3f7201974e2be3edf2288aa" type="POLICY"/>
        <l7:Mapping action="NewOrUpdate" srcId="7215d076e3f7201974e2be3edf22c2f5" srcUri="https://ssg100.l7tech.com:8443/restman/1.0/encapsulatedAssertions/7215d076e3f7201974e2be3edf22c2f5" type="ENCAPSULATED_ASSERTION"/>
        <l7:Mapping action="NewOrUpdate" srcId="6f93d02a97830d62c2715d6d3a003232" srcUri="https://ssg100.l7tech.com:8443/restman/1.0/policies/6f93d02a97830d62c2715d6d3a003232" type="POLICY"/>
        <l7:Mapping action="NewOrUpdate" srcId="7215d076e3f7201974e2be3edf231684" srcUri="https://ssg100.l7tech.com:8443/restman/1.0/policies/7215d076e3f7201974e2be3edf231684" type="POLICY"/>
        <l7:Mapping action="NewOrUpdate" srcId="7215d076e3f7201974e2be3edf232fde" srcUri="https://ssg100.l7tech.com:8443/restman/1.0/policies/7215d076e3f7201974e2be3edf232fde" type="POLICY"/>
        <l7:Mapping action="NewOrUpdate" srcId="bc46b1606b0639d4d49278d55a44cd84" srcUri="https://ssg100.l7tech.com:8443/restman/1.0/policies/bc46b1606b0639d4d49278d55a44cd84" type="POLICY"/>
        <l7:Mapping action="NewOrUpdate" srcId="bc46b1606b0639d4d49278d55a4909b9" srcUri="https://ssg100.l7tech.com:8443/restman/1.0/policies/bc46b1606b0639d4d49278d55a4909b9" type="POLICY"/>
        <l7:Mapping action="NewOrExisting" srcId="0000000000000000fffffffffffffffe" srcUri="https://ssg100.l7tech.com:8443/restman/1.0/identityProviders/0000000000000000fffffffffffffffe" type="ID_PROVIDER_CONFIG">
            <l7:Properties>
                <l7:Property key="FailOnNew">
                    <l7:BooleanValue>true</l7:BooleanValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrUpdate" srcId="c4706d99077459bed7ca5ef6c9e4e922" srcUri="https://ssg100.l7tech.com:8443/restman/1.0/policies/c4706d99077459bed7ca5ef6c9e4e922" type="POLICY"/>
        <l7:Mapping action="NewOrUpdate" srcId="c4706d99077459bed7ca5ef6c9e52876" srcUri="https://ssg100.l7tech.com:8443/restman/1.0/policies/c4706d99077459bed7ca5ef6c9e52876" type="POLICY"/>
        <l7:Mapping action="NewOrUpdate" srcId="c4706d99077459bed7ca5ef6c9e5488e" srcUri="https://ssg100.l7tech.com:8443/restman/1.0/policies/c4706d99077459bed7ca5ef6c9e5488e" type="POLICY"/>
        <l7:Mapping action="NewOrUpdate" srcId="c4706d99077459bed7ca5ef6c9e59800" srcUri="https://ssg100.l7tech.com:8443/restman/1.0/policies/c4706d99077459bed7ca5ef6c9e59800" type="POLICY"/>
        <l7:Mapping action="NewOrUpdate" srcId="c4706d99077459bed7ca5ef6c9e624a3" srcUri="https://ssg100.l7tech.com:8443/restman/1.0/policies/c4706d99077459bed7ca5ef6c9e624a3" type="POLICY"/>
        <l7:Mapping action="NewOrUpdate" srcId="c4706d99077459bed7ca5ef6c9e64a12" srcUri="https://ssg100.l7tech.com:8443/restman/1.0/policies/c4706d99077459bed7ca5ef6c9e64a12" type="POLICY"/>
        <l7:Mapping action="NewOrUpdate" srcId="c4706d99077459bed7ca5ef6c9e65c43" srcUri="https://ssg100.l7tech.com:8443/restman/1.0/policies/c4706d99077459bed7ca5ef6c9e65c43" type="POLICY"/>
        <l7:Mapping action="NewOrUpdate" srcId="c4706d99077459bed7ca5ef6c9e688cb" srcUri="https://ssg100.l7tech.com:8443/restman/1.0/policies/c4706d99077459bed7ca5ef6c9e688cb" type="POLICY"/>
        <l7:Mapping action="NewOrUpdate" srcId="c4706d99077459bed7ca5ef6c9e62585" srcUri="https://ssg100.l7tech.com:8443/restman/1.0/encapsulatedAssertions/c4706d99077459bed7ca5ef6c9e62585" type="ENCAPSULATED_ASSERTION"/>
        <l7:Mapping action="NewOrUpdate" srcId="c4706d99077459bed7ca5ef6c9e6e077" srcUri="https://ssg100.l7tech.com:8443/restman/1.0/policies/c4706d99077459bed7ca5ef6c9e6e077" type="POLICY"/>
        <l7:Mapping action="NewOrUpdate" srcId="c4706d99077459bed7ca5ef6c9e6eb45" srcUri="https://ssg100.l7tech.com:8443/restman/1.0/policies/c4706d99077459bed7ca5ef6c9e6eb45" type="POLICY"/>
        <l7:Mapping action="NewOrUpdate" srcId="c4706d99077459bed7ca5ef6c9e8029f" srcUri="https://ssg100.l7tech.com:8443/restman/1.0/policies/c4706d99077459bed7ca5ef6c9e8029f" type="POLICY"/>
        <l7:Mapping action="NewOrUpdate" srcId="c4706d99077459bed7ca5ef6c9e80d57" srcUri="https://ssg100.l7tech.com:8443/restman/1.0/policies/c4706d99077459bed7ca5ef6c9e80d57" type="POLICY"/>
        <l7:Mapping action="NewOrUpdate" srcId="c4706d99077459bed7ca5ef6c9e8150b" srcUri="https://ssg100.l7tech.com:8443/restman/1.0/policies/c4706d99077459bed7ca5ef6c9e8150b" type="POLICY"/>
        <l7:Mapping action="NewOrUpdate" srcId="d12aa7875d7217ab6c41e7d7acf651f4" srcUri="https://ssg100.l7tech.com:8443/restman/1.0/policies/d12aa7875d7217ab6c41e7d7acf651f4" type="POLICY"/>
        <l7:Mapping action="NewOrUpdate" srcId="d12aa7875d7217ab6c41e7d7acf66dff" srcUri="https://ssg100.l7tech.com:8443/restman/1.0/policies/d12aa7875d7217ab6c41e7d7acf66dff" type="POLICY"/>
        <l7:Mapping action="NewOrUpdate" srcId="d12aa7875d7217ab6c41e7d7acf6992e" srcUri="https://ssg100.l7tech.com:8443/restman/1.0/policies/d12aa7875d7217ab6c41e7d7acf6992e" type="POLICY"/>
        <l7:Mapping action="NewOrUpdate" srcId="eab176f668caa14ac7389886243507b7" srcUri="https://ssg100.l7tech.com:8443/restman/1.0/policies/eab176f668caa14ac7389886243507b7" type="POLICY"/>
        <l7:Mapping action="NewOrUpdate" srcId="1b111294c2a94ddb44fa3aa78a70294a" srcUri="https://ssg100.l7tech.com:8443/restman/1.0/services/1b111294c2a94ddb44fa3aa78a70294a" type="SERVICE"/>
        <l7:Mapping action="NewOrUpdate" srcId="c4706d99077459bed7ca5ef6c9e4e966" srcUri="https://ssg100.l7tech.com:8443/restman/1.0/encapsulatedAssertions/c4706d99077459bed7ca5ef6c9e4e966" type="ENCAPSULATED_ASSERTION"/>
        <l7:Mapping action="NewOrUpdate" srcId="eab176f668caa14ac7389886243507ea" srcUri="https://ssg100.l7tech.com:8443/restman/1.0/encapsulatedAssertions/eab176f668caa14ac7389886243507ea" type="ENCAPSULATED_ASSERTION"/>
        <l7:Mapping action="Ignore" type="JDBC_CONNECTION">
            <l7:Properties>
                <l7:Property key="MapBy">
                    <l7:StringValue>name</l7:StringValue>
                </l7:Property>
                <l7:Property key="MapTo">
                    <l7:StringValue>ssg</l7:StringValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrUpdate" srcId="6f93d02a97830d62c2715d6d3a0168c2" srcUri="https://ssg100.l7tech.com:8443/restman/1.0/services/6f93d02a97830d62c2715d6d3a0168c2" type="SERVICE"/>
        <l7:Mapping action="NewOrUpdate" srcId="d12aa7875d7217ab6c41e7d7acf6720b" srcUri="https://ssg100.l7tech.com:8443/restman/1.0/encapsulatedAssertions/d12aa7875d7217ab6c41e7d7acf6720b" type="ENCAPSULATED_ASSERTION"/>
        <l7:Mapping action="NewOrUpdate" srcId="c4706d99077459bed7ca5ef6c9e59840" srcUri="https://ssg100.l7tech.com:8443/restman/1.0/encapsulatedAssertions/c4706d99077459bed7ca5ef6c9e59840" type="ENCAPSULATED_ASSERTION"/>
        <l7:Mapping action="NewOrUpdate" srcId="bc46b1606b0639d4d49278d55a490dce" srcUri="https://ssg100.l7tech.com:8443/restman/1.0/encapsulatedAssertions/bc46b1606b0639d4d49278d55a490dce" type="ENCAPSULATED_ASSERTION"/>
        <l7:Mapping action="NewOrUpdate" srcId="bc46b1606b0639d4d49278d55a47e748" srcUri="https://ssg100.l7tech.com:8443/restman/1.0/encapsulatedAssertions/bc46b1606b0639d4d49278d55a47e748" type="ENCAPSULATED_ASSERTION"/>
        <l7:Mapping action="NewOrUpdate" srcId="c4706d99077459bed7ca5ef6c9e6ebe7" srcUri="https://ssg100.l7tech.com:8443/restman/1.0/encapsulatedAssertions/c4706d99077459bed7ca5ef6c9e6ebe7" type="ENCAPSULATED_ASSERTION"/>
        <l7:Mapping action="NewOrUpdate" srcId="d12aa7875d7217ab6c41e7d7acf65398" srcUri="https://ssg100.l7tech.com:8443/restman/1.0/encapsulatedAssertions/d12aa7875d7217ab6c41e7d7acf65398" type="ENCAPSULATED_ASSERTION"/>
        <l7:Mapping action="NewOrUpdate" srcId="c4706d99077459bed7ca5ef6c9e64f9f" srcUri="https://ssg100.l7tech.com:8443/restman/1.0/encapsulatedAssertions/c4706d99077459bed7ca5ef6c9e64f9f" type="ENCAPSULATED_ASSERTION"/>
        <l7:Mapping action="NewOrUpdate" srcId="3c21f93d84b26244a446414e97757399" srcUri="https://ssg100.l7tech.com:8443/restman/1.0/encapsulatedAssertions/3c21f93d84b26244a446414e97757399" type="ENCAPSULATED_ASSERTION"/>
        <l7:Mapping action="NewOrUpdate" srcId="3c21f93d84b26244a446414e97757ceb" srcUri="https://ssg100.l7tech.com:8443/restman/1.0/encapsulatedAssertions/3c21f93d84b26244a446414e97757ceb" type="ENCAPSULATED_ASSERTION"/>
        <l7:Mapping action="NewOrUpdate" srcId="c4706d99077459bed7ca5ef6c9e5c6b8" srcUri="https://ssg100.l7tech.com:8443/restman/1.0/encapsulatedAssertions/c4706d99077459bed7ca5ef6c9e5c6b8" type="ENCAPSULATED_ASSERTION"/>
        <l7:Mapping action="NewOrUpdate" srcId="3c21f93d84b26244a446414e9774ede0" srcUri="https://ssg100.l7tech.com:8443/restman/1.0/encapsulatedAssertions/3c21f93d84b26244a446414e9774ede0" type="ENCAPSULATED_ASSERTION"/>
        <l7:Mapping action="NewOrUpdate" srcId="c4706d99077459bed7ca5ef6c9e81607" srcUri="https://ssg100.l7tech.com:8443/restman/1.0/encapsulatedAssertions/c4706d99077459bed7ca5ef6c9e81607" type="ENCAPSULATED_ASSERTION"/>
        <l7:Mapping action="NewOrUpdate" srcId="c4706d99077459bed7ca5ef6c9e65da4" srcUri="https://ssg100.l7tech.com:8443/restman/1.0/encapsulatedAssertions/c4706d99077459bed7ca5ef6c9e65da4" type="ENCAPSULATED_ASSERTION"/>
        <l7:Mapping action="NewOrUpdate" srcId="c4706d99077459bed7ca5ef6c9e80382" srcUri="https://ssg100.l7tech.com:8443/restman/1.0/encapsulatedAssertions/c4706d99077459bed7ca5ef6c9e80382" type="ENCAPSULATED_ASSERTION"/>
        <l7:Mapping action="NewOrUpdate" srcId="c4706d99077459bed7ca5ef6c9e80e7c" srcUri="https://ssg100.l7tech.com:8443/restman/1.0/encapsulatedAssertions/c4706d99077459bed7ca5ef6c9e80e7c" type="ENCAPSULATED_ASSERTION"/>
        <l7:Mapping action="NewOrUpdate" srcId="3c21f93d84b26244a446414e97759281" srcUri="https://ssg100.l7tech.com:8443/restman/1.0/encapsulatedAssertions/3c21f93d84b26244a446414e97759281" type="ENCAPSULATED_ASSERTION"/>
        <l7:Mapping action="NewOrUpdate" srcId="c4706d99077459bed7ca5ef6c9e6d213" srcUri="https://ssg100.l7tech.com:8443/restman/1.0/encapsulatedAssertions/c4706d99077459bed7ca5ef6c9e6d213" type="ENCAPSULATED_ASSERTION"/>
        <l7:Mapping action="NewOrUpdate" srcId="d12aa7875d7217ab6c41e7d7acf69a23" srcUri="https://ssg100.l7tech.com:8443/restman/1.0/encapsulatedAssertions/d12aa7875d7217ab6c41e7d7acf69a23" type="ENCAPSULATED_ASSERTION"/>
        <l7:Mapping action="NewOrUpdate" srcId="c4706d99077459bed7ca5ef6c9e6e8a7" srcUri="https://ssg100.l7tech.com:8443/restman/1.0/encapsulatedAssertions/c4706d99077459bed7ca5ef6c9e6e8a7" type="ENCAPSULATED_ASSERTION"/>
        <l7:Mapping action="NewOrUpdate" srcId="7215d076e3f7201974e2be3edf13ee8c" srcUri="https://ssg100.l7tech.com:8443/restman/1.0/services/7215d076e3f7201974e2be3edf13ee8c" type="SERVICE"/>
        <l7:Mapping action="NewOrUpdate" srcId="c8401b4fe66b706c1ad6260099cc0b79" srcUri="https://ssg100.l7tech.com:8443/restman/1.0/services/c8401b4fe66b706c1ad6260099cc0b79" type="SERVICE"/>
        <l7:Mapping action="NewOrUpdate" srcId="7215d076e3f7201974e2be3edf231742" srcUri="https://ssg100.l7tech.com:8443/restman/1.0/encapsulatedAssertions/7215d076e3f7201974e2be3edf231742" type="ENCAPSULATED_ASSERTION"/>
        <l7:Mapping action="NewOrUpdate" srcId="7215d076e3f7201974e2be3edf23307f" srcUri="https://ssg100.l7tech.com:8443/restman/1.0/encapsulatedAssertions/7215d076e3f7201974e2be3edf23307f" type="ENCAPSULATED_ASSERTION"/>
        <l7:Mapping action="NewOrUpdate" srcId="dfaa76af686fcb8fe1c2542b37613bd2" srcUri="https://ssg100.l7tech.com:8443/restman/1.0/services/dfaa76af686fcb8fe1c2542b37613bd2" type="SERVICE"/>
        <l7:Mapping action="NewOrUpdate" srcId="eab176f668caa14ac738988624339c80" srcUri="https://ssg100.l7tech.com:8443/restman/1.0/services/eab176f668caa14ac738988624339c80" type="SERVICE"/>
    </l7:Mappings>
</l7:Bundle>
